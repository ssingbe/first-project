WEBVTT
X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:0

00:00.000 --> 00:02.583
(경쾌한 음악)

00:10.774 --> 00:14.310
(청중의 환호)

00:14.310 --> 00:19.310
<v ->신사 숙녀 여러분, CES
2025에 오신 것을 환영합니다.</v>

00:19.537 --> 00:23.370
(청중의 환호)

00:23.370 --> 00:25.650
저는 CES의 제작자인 Consumer

00:25.650 --> 00:29.040
Technology Association의

00:29.040 --> 00:30.720
CEO이자 부회장인 Gary Shapiro입니다.

00:30.720 --> 00:35.310
그리고 저는 세계에서 가장 영향력 있는 회사 중

00:35.310 --> 00:38.820
하나인 NVIDIA의 기조연설로 이 쇼를

00:38.820 --> 00:43.020
시작하게 되어 매우 기쁩니다.

00:43.020 --> 00:48.020
NVIDIA는 CES에서 기념하는
최첨단 혁신의 본보기이며,

00:48.510 --> 00:50.820
설립자 겸 CEO인 Jensen Huang은

00:50.820 --> 00:54.660
진정한 비전가로서, 혁신을 주도하고 산업과

00:54.660 --> 00:58.683
사회를 재편하는 아이디어, 기술, 신념의 힘을 보여줍니다.

01:00.734 --> 01:03.330
저는 항상 Jensen이 CTA

01:03.330 --> 01:05.580
행사에서 마지막으로 연설했을 때

01:05.580 --> 01:08.580
조금 더 주의 깊게 들었다면 이미

01:08.580 --> 01:10.113
은퇴했을 것이라고 말하고 싶습니다.

01:12.360 --> 01:15.540
하지만 지난 30년 동안 그는

01:15.540 --> 01:19.290
NVIDIA를 의료부터 자동차,

01:19.290 --> 01:21.863
엔터테인먼트에 이르기까지 전 세계

01:21.863 --> 01:24.930
산업에서 변화를 주도하는 힘으로 자리매김했습니다.

01:24.930 --> 01:28.830
오늘날 NVIDIA는 거의 모든 사람과 모든

01:28.830 --> 01:32.850
사업체에 영향을 미치는 AI와 가속 컴퓨팅

01:32.850 --> 01:34.890
분야에서 획기적인 진전을 이루고 있습니다.

01:34.890 --> 01:36.450
그의 리더십 덕분에,

01:36.450 --> 01:41.130
NVIDIA의 혁신은 고급 챗봇, 로봇을 가능하게 합니다.

01:41.130 --> 01:44.760
소프트웨어 정의 차량, 거대한 가상

01:44.760 --> 01:49.050
세계, 하이퍼 동기화된 공장 바닥 등등.

01:49.050 --> 01:52.950
황은 포춘과 이코노미스트가 선정한 세계 최고의

01:52.950 --> 01:55.080
CEO이자 타임지가 선정한 세계에서 가장

01:55.080 --> 02:00.060
영향력 있는 100인 중 한 명으로 선정되었습니다.

02:00.060 --> 02:02.610
하지만 사실 이 방에 있는 우리 모두에게

02:02.610 --> 02:06.333
성공과 그의 성공은 미리 정해진 것이 아니었습니다.

02:07.620 --> 02:10.770
젠슨은 Denny's에서 설거지와

02:10.770 --> 02:13.350
버스보이로 일하기 시작했습니다.

02:13.350 --> 02:15.510
그러니 앞으로 그들에게 친절하게 대해주세요.

02:15.510 --> 02:18.180
그리고 그는 그곳에서 배운 교훈을 말했습니다.

02:18.180 --> 02:20.880
열심히 일하는 것의 가치, 겸손함,

02:20.880 --> 02:24.210
그리고 환대는 그가 믿음을 유지하는 데 도움이 되었고

02:24.210 --> 02:28.050
NVIDIA의 초기 과제 중 일부를 견뎌냈습니다.

02:28.050 --> 02:31.080
몇 분 후에 NVIDIA 설립자

02:31.080 --> 02:35.640
겸 CEO인 젠슨 황이 미래에 대한 확고한 비전을 이야기하고

02:35.640 --> 02:37.530
앞으로 어디로 향하는지 알려드리겠습니다.

02:37.530 --> 02:41.193
계속 지켜봐 주시고 멋진 CES를 보내세요.

02:42.134 --> 02:45.134
(청중 박수)

02:47.726 --> 02:50.309
(경쾌한 음악)

03:12.690 --> 03:15.183
<v -> 지능은 이렇게 만들어집니다.</v>

03:18.180 --> 03:19.563
새로운 종류의 공장,

03:21.180 --> 03:22.563
토큰 생성기,

03:24.570 --> 03:26.290
AI의 구성 요소

03:28.230 --> 03:30.780
토큰은 새로운 지평을 열었습니다.

03:30.780 --> 03:33.480
놀라운 세계로의 첫 걸음

03:33.480 --> 03:35.523
무한한 가능성이 탄생하는 곳입니다.

03:40.950 --> 03:44.040
토큰은 단어를 지식으로 바꾸고

03:44.040 --> 03:45.783
이미지에 생명을 불어넣습니다.

03:49.110 --> 03:50.770
아이디어를 비디오로 바꾸고

03:53.340 --> 03:56.013
모든 환경을 안전하게 탐색할 수 있도록 도와줍니다.

03:58.710 --> 04:01.623
토큰은 로봇에게 거장처럼 움직이는 법을 가르치고

04:06.540 --> 04:09.870
승리를 축하하는 새로운 방법을 영감을 줍니다.

04:09.870 --> 04:12.123
<v -> 마티니 한 잔 주세요.</v>
<v -> 곧 시작합니다.</v>

04:13.590 --> 04:14.493
<v -> 고맙습니다, 애덤.</v>

04:16.560 --> 04:20.389
<v 내레이터>그리고 우리에게 가장 필요할 때 마음의 평화를 주세요.</v>

04:20.389 --> 04:21.480
<v ->안녕, 로카.</v>

04:21.480 --> 04:24.690
<v ->안녕, 에마, 다시 만나서 반가워요.</v>

04:24.690 --> 04:27.570
<v ->안녕, 에마, 오늘 혈액 샘플을 채취할 거예요, 알았죠?</v>

04:27.570 --> 04:30.213
<v ->걱정하지 마세요, 저는 항상 여기 있을 거예요.</v>

04:33.360 --> 04:35.370
<v 내레이터>숫자에 의미를 부여해요.</v>

04:37.020 --> 04:39.603
우리 주변 세계를 더 잘 이해하도록 도와줘요.

04:41.794 --> 04:44.377
(경쾌한 음악)

04:47.910 --> 04:49.983
우리 주변의 위험을 예측해요.

04:51.937 --> 04:54.520
(경쾌한 음악)

04:58.380 --> 05:00.633
그리고 우리 안에 있는 위협에 대한 치료법을 찾으세요.

05:02.447 --> 05:05.030
(명랑한 음악)

05:08.010 --> 05:10.173
토큰은 우리의 비전을 현실로 만들어 줄 수 있습니다.

05:11.109 --> 05:13.692
(명랑한 음악)

05:17.340 --> 05:18.933
그리고 우리가 잃은 것을 회복하세요.

05:22.920 --> 05:26.133
<v 텍스트 음성 변환> Zachary, 목소리를 되찾았어요, 친구야.</v>

05:29.790 --> 05:31.673
<v 내레이터> 그들은 우리가 앞으로 나아가도록 도와줍니다.</v>

05:33.390 --> 05:35.337
한 번에 한 걸음씩.

05:41.700 --> 05:45.693
그리고 함께 거대한 도약을 합니다.

05:49.564 --> 05:51.981
(차분한 음악)

06:00.520 --> 06:05.193
그리고 여기서 모든 것이 시작됩니다.

06:13.020 --> 06:14.340
<v 아나운서> 무대에 오신 것을 환영합니다.</v>

06:14.340 --> 06:17.403
NVIDIA 설립자 겸 CEO, 젠슨 황.

06:19.843 --> 06:22.843
(청중의 환호)

06:26.910 --> 06:27.993
<v ->CES에 오신 것을 환영합니다.</v>

06:30.133 --> 06:31.574
(청중의 환호)

06:31.574 --> 06:33.324
라스베이거스에 갈 생각에 설레시나요?

06:34.770 --> 06:36.273
제 재킷이 마음에 드시나요?

06:38.940 --> 06:42.063
저는 게리 샤피로와는 다른 방향으로 가고 싶었어요.

06:43.920 --> 06:46.290
저는 결국 라스베이거스에 있어요.

06:46.290 --> 06:49.323
이게 안 된다면, 여러분 모두가 반대한다면,

06:50.618 --> 06:53.010
글쎄요, 그냥 익숙해지세요, 저는 생각합니다.

06:53.010 --> 06:55.893
정말 이걸 받아들여야 한다고 생각해요.

06:57.450 --> 06:58.650
한두 시간 후면,

06:58.650 --> 07:00.250
기분이 좋아질 거예요.

07:03.780 --> 07:07.800
글쎄요, NVIDIA에 오신 것을 환영합니다.

07:07.800 --> 07:10.480
사실, 당신은 NVIDIA의 디지털 트윈 내부에 있습니다.

07:11.850 --> 07:15.480
그러면 NVIDIA로 이동해 보겠습니다.

07:15.480 --> 07:17.480
신사 숙녀 여러분, NVIDIA에 오신 것을 환영합니다.

07:20.760 --> 07:23.613
당신은 우리의 디지털 트윈 안에 있습니다.

07:27.120 --> 07:29.553
여기의 모든 것은 AI에 의해 생성됩니다.

07:33.000 --> 07:37.140
그것은 특별한 여정이었고 특별한 한 해였습니다.

07:37.140 --> 07:40.620
그리고 그것은 1993년에 시작되었습니다.

07:40.620 --> 07:42.780
<v 게임 아나운서>준비, 출발.</v>

07:42.780 --> 07:47.780
<v ->NV1을 통해 우리는 모든 것을 할
수 있는 컴퓨터를 만들고 싶었습니다.</v>

07:48.990 --> 07:51.210
일반 컴퓨터는 할 수 없는

07:51.210 --> 07:53.580
그리고 NV1은

07:53.580 --> 07:55.773
PC에서 게임 콘솔을 갖는 것을 가능하게 했습니다.

07:56.910 --> 08:00.990
저희의 프로그래밍 아키텍처는 UDA라고 불렸고,

08:00.990 --> 08:03.990
잠시 후까지 문자 C가 없었습니다.

08:03.990 --> 08:07.680
하지만 UDA, Unified Device Architecture

08:07.680 --> 08:11.340
그리고 UDA의 첫 번째 개발자

08:11.340 --> 08:14.370
그리고 UDA에서 작동하는 최초의 애플리케이션

08:14.370 --> 08:16.713
은 SEGA의 Virtual Fighter였습니다.

08:18.060 --> 08:19.890
6년 후,

08:19.890 --> 08:24.280
저희는 1999년에 프로그래밍 가능한 GPU를 발명했습니다.

08:25.470 --> 08:30.470
그리고 20년, 20년 이상의 놀라운 발전이 시작되었습니다.

08:32.820 --> 08:35.910
GPU라는 놀라운 프로세서에서.

08:35.910 --> 08:38.763
현대 컴퓨터 그래픽이 가능해졌습니다.

08:40.350 --> 08:45.330
그리고 지금 30년 후, 세가의

08:45.330 --> 08:46.833
Virtual Fighter는 완전히 영화적입니다.

08:49.170 --> 08:52.470
이것이 출시될 새로운 Virtual Fighter 프로젝트입니다.

08:52.470 --> 08:56.340
정말 기대됩니다. 정말 대단합니다.

08:56.340 --> 08:57.720
그로부터 6년 후,

08:57.720 --> 09:02.200
1999년으로부터 6년 후,

09:03.120 --> 09:05.760
우리는 GPU의 프로그래밍

09:05.760 --> 09:09.690
가능성을 설명하거나 표현할

09:09.690 --> 09:13.170
수 있도록 CUDA를 발명했습니다.

09:13.170 --> 09:16.020
CUDA는 처음에는 설명하기

09:16.020 --> 09:19.200
어려웠고, 사실 몇 년이 걸렸습니다.

09:19.200 --> 09:22.470
약 6년이 걸렸습니다.

09:22.470 --> 09:25.590
어떻게 된 일인지 6년 후,

09:25.590 --> 09:27.093
6년쯤 후에,

09:29.580 --> 09:30.423
2012년,

09:32.490 --> 09:35.370
Alex Krizhevsky, Ilya Sutskever

09:35.370 --> 09:38.310
그리고 Geoff Hinton이 CUDA를 발견하고

09:38.310 --> 09:42.060
이를 사용하여 AlexNet을 처리했습니다.

09:42.060 --> 09:44.730
그리고 나머지는 역사가 되었습니다.

09:44.730 --> 09:48.270
AI는

09:48.270 --> 09:50.970
지각 AI로 시작한 이래로 놀라운 속도로 발전해 왔습니다.

09:50.970 --> 09:53.040
이제 이미지와 단어,

09:53.040 --> 09:56.580
소리를 이해할 수 있고, 생성 AI로 발전했습니다.

09:56.580 --> 09:59.043
이미지와 텍스트, 소리를 생성할 수 있고,

09:59.970 --> 10:02.733
그리고 지금은 에이전트 AI,

10:03.600 --> 10:08.600
지각하고, 추론하고, 계획하고, 행동할 수 있는 AI입니다.

10:08.820 --> 10:10.260
그리고 다음 단계는 일부

10:10.260 --> 10:14.760
오늘 밤에는 2012년의 물리적
AI에 대해 이야기해 보겠습니다.

10:14.760 --> 10:19.380
이제 마법처럼 2018년이 왔어요

10:19.380 --> 10:21.680
정말 믿을 수 없는 일이 일어났습니다.

10:23.100 --> 10:27.060
구글의 트랜스포머가 버트로 출시되었습니다.

10:27.060 --> 10:31.323
그리고 AI의 세계가 정말로 시작되었습니다.

10:32.160 --> 10:34.290
아시다시피

10:34.290 --> 10:35.880
트랜스포머는

10:35.880 --> 10:37.680
인공지능의 풍경을 완전히 바꿔놓았습니다.

10:37.680 --> 10:40.620
사실, 컴퓨팅의 풍경을

10:40.620 --> 10:42.720
완전히 바꿔놓았습니다.

10:42.720 --> 10:44.610
우리는 AI가 새로운 사업 기회를

10:44.610 --> 10:48.420
가진 새로운 애플리케이션일 뿐만

10:48.420 --> 10:51.360
아니라 AI, 더 중요한 것은

10:51.360 --> 10:55.260
트랜스포머가 가능하게 한 머신

10:55.260 --> 10:58.890
러닝이 컴퓨팅의 작동 방식을

10:58.890 --> 11:00.960
근본적으로 바꿀 것이라는 것을 올바르게 인식했습니다.

11:00.960 --> 11:05.820
그리고 오늘날 컴퓨팅은 수동 코딩,

11:05.820 --> 11:10.050
CPU에서 실행되는 명령어, 인간이

11:10.050 --> 11:12.540
사용하는 소프트웨어 도구를 만드는

11:12.540 --> 11:15.510
것까지 모든 계층에서 혁신을 이루고 있습니다.

11:15.510 --> 11:18.720
이제 우리는 머신 러닝을 통해

11:18.720 --> 11:23.190
GPU에서 처리하는 신경망을 최적화하고

11:23.190 --> 11:25.830
인공 지능을 만듭니다.

11:25.830 --> 11:27.180
기술 스택의 모든 계층이

11:27.180 --> 11:31.440
완전히 바뀌었습니다.

11:31.440 --> 11:35.313
단 12년 만에 놀라운 변화가 일어났습니다.

11:36.240 --> 11:39.720
음, 이제 우리는

11:39.720 --> 11:42.330
거의 모든 양식의 정보를 이해할 수 있습니다.

11:42.330 --> 11:44.880
텍스트와 이미지,

11:44.880 --> 11:46.530
소리와 같은 것들을 본 적이 있을 것입니다.

11:46.530 --> 11:49.260
하지만 우리는 그것들을 이해할 수 있을 뿐만 아니라

11:49.260 --> 11:52.680
아미노산을 이해하고, 물리학을 이해하고,

11:52.680 --> 11:57.030
이들을 이해하고, 번역하고 생성할 수 있습니다.

11:57.030 --> 12:00.300
응용 프로그램은 완전히 무한합니다.

12:00.300 --> 12:02.100
사실, 거의 모든 AI 응용 프로그램은

12:02.100 --> 12:03.603
거기서 볼 수 있는

12:04.710 --> 12:07.473
입력은 어떤 양식에서 학습했을까요?

12:08.310 --> 12:11.400
어떤 양식의 정보로 번역했을까요?

12:11.400 --> 12:14.070
그리고 그것은 어떤 정보 양식을 생성하고 있습니까?

12:14.070 --> 12:16.410
이 세 가지 근본적인 질문을 한다면,

12:16.410 --> 12:20.430
거의 모든 단일 응용 프로그램을 추론할 수 있습니다.

12:20.430 --> 12:22.350
그리고 응용 프로그램을 볼 때

12:22.350 --> 12:27.150
AI 기반, AI 네이티브 애플리케이션 이후,

12:27.150 --> 12:30.270
그 핵심에는 이 기본 개념이 있습니다.

12:30.270 --> 12:31.920
머신 러닝은

12:31.920 --> 12:34.860
모든 애플리케이션이 구축되는 방식,

12:34.860 --> 12:39.300
컴퓨팅이 수행되는 방식, 그리고 그 너머의 가능성을 변화시켰습니다.

12:39.300 --> 12:42.093
글쎄요, GPU,

12:43.140 --> 12:45.909
GeForce는 여러 면에서

12:45.909 --> 12:50.700
이 모든 것이 AI와 함께 GeForce가 만든 집입니다.

12:50.700 --> 12:54.780
GeForce는 AI가 대중에게 도달할 수 있도록 했습니다.

12:54.780 --> 12:58.233
그리고 이제 AI가 GeForce로 돌아왔습니다.

12:59.130 --> 13:03.270
AI 없이는 할 수 없는 일이 너무 많습니다.

13:03.270 --> 13:06.307
지금 그 중 일부를 보여드리겠습니다.

13:15.796 --> 13:18.379
(경쾌한 음악)

13:45.897 --> 13:49.314
(경쾌한 음악이 계속됩니다)

14:40.800 --> 14:44.744
그것은 실시간 컴퓨터 그래픽이었습니다.

14:44.744 --> 14:47.744
(청중 박수)

14:51.240 --> 14:53.790
어떤 컴퓨터 그래픽 연구자도, 어떤 컴퓨터

14:53.790 --> 14:57.870
과학자도 이 시점에서 모든 픽셀을 레이

14:57.870 --> 15:01.953
트레이싱할 수 있다고 말하지 않았을 것입니다.

15:02.880 --> 15:05.220
레이 트레이싱은 빛의 시뮬레이션입니다.

15:05.220 --> 15:08.520
당신이 본 기하학의 양은 정말 미쳤습니다.

15:08.520 --> 15:12.450
인공 지능이 없었다면 불가능했을 것입니다.

15:12.450 --> 15:15.480
우리가 한 두 가지 기본적인 것이 있습니다.

15:15.480 --> 15:17.910
물론, 프로그래밍 가능한 셰이딩을 사용했습니다.

15:17.910 --> 15:19.950
그리고 레이 트레이싱 가속

15:19.950 --> 15:22.710
믿을 수 없을 만큼 아름다운 픽셀을 생성합니다.

15:22.710 --> 15:27.393
하지만 인공 지능이 조절되고

15:28.530 --> 15:30.510
그 픽셀에 의해 제어되어

15:30.510 --> 15:33.540
다른 픽셀을 많이 생성합니다.

15:33.540 --> 15:36.720
공간적으로 다른 픽셀을 생성할 수 있을 뿐만 아니라

15:36.720 --> 15:40.560
색상이 무엇인지 알고 있기 때문에

15:40.560 --> 15:44.100
NVIDIA의 슈퍼컴퓨터에서 학습되었습니다.

15:44.100 --> 15:45.120
따라서 GPU에서 실행되는 신경망은

15:45.120 --> 15:48.270
렌더링하지 않은 픽셀을 추론하고

15:48.270 --> 15:51.693
예측할 수 있습니다.

15:52.590 --> 15:56.190
그럴 수 있을 뿐만 아니라, DLSS라고 합니다.

15:56.190 --> 16:01.050
최신 세대의 DLSS는 프레임을 넘어서는 것을 생성합니다.

16:01.050 --> 16:03.030
미래를 예측하여 계산한 모든 프레임에

16:03.030 --> 16:05.190
대해 3개의 추가 프레임을 생성할 수 있습니다.

16:05.190 --> 16:09.150
본 것을 4개의

16:09.150 --> 16:11.880
프레임이라고 했다면, 한 프레임을

16:11.880 --> 16:15.120
렌더링하고 3개를 생성할 것이기 때문입니다.

16:15.120 --> 16:18.600
풀 HD, 4K에서 4개의 프레임이라고

16:18.600 --> 16:21.690
했다면, 약 3,300만 개의 픽셀입니다.

16:21.690 --> 16:26.690
그 3,300만 개의 픽셀 중에서 2개만 계산했습니다.

16:30.300 --> 16:32.670
우리가 계산적으로 할 수

16:32.670 --> 16:34.710
있다는 것은 절대적인 기적입니다.

16:34.710 --> 16:36.570
프로그래밍 가능한 셰이더를 사용하여 계산적으로

16:36.570 --> 16:39.360
그리고 우리의 레이 트레이싱 엔진, 레이 트레이싱 엔진

16:39.360 --> 16:41.310
200만 화소를 계산하다

16:41.310 --> 16:46.110
나머지 33개 모두를 AI가 예측하게 하세요.

16:46.110 --> 16:47.820
그 결과 우리는 할 수 있게 되었습니다.

16:47.820 --> 16:51.090
매우 높은 성능으로 렌더링합니다

16:51.090 --> 16:54.540
AI는 계산을 훨씬 덜 하기 때문이죠.

16:54.540 --> 16:57.060
물론 엄청난 양의 훈련이 필요합니다.

16:57.060 --> 16:59.880
그것을 생산하려면, 하지만 일단 그것을 훈련하면,

16:59.880 --> 17:02.970
발전은 매우 효율적이다.

17:02.970 --> 17:05.400
그래서 이것은 놀라운 기능 중 하나입니다.

17:05.400 --> 17:06.810
인공지능의

17:06.810 --> 17:08.640
그래서 거기에 있는 거야

17:08.640 --> 17:10.590
정말 놀라운 일들이 많이 일어나고 있어요.

17:10.590 --> 17:14.550
우리는 인공지능을 구현하기
위해 GeForce를 사용했습니다.

17:14.550 --> 17:16.170
그리고 이제 인공지능

17:16.170 --> 17:17.973
GeForce에 혁명을 일으키고 있습니다.

17:18.810 --> 17:22.623
여러분, 오늘 우리는 차세대를 발표합니다.

17:23.580 --> 17:26.490
RTX Blackwell 제품군.

17:26.490 --> 17:27.450
한번 살펴보죠.

18:24.609 --> 18:26.164
(청중 박수)

18:26.164 --> 18:31.164
새로운 GeForce RTX 50 시리즈가 출시되었습니다.

18:33.750 --> 18:36.030
블랙웰 건축.

18:36.030 --> 18:38.550
GPU는 그저 괴물일 뿐이다.

18:38.550 --> 18:41.610
920억개의 트랜지스터

18:41.610 --> 18:46.610
4,000 TOP, 4페타플롭의 AI

18:47.820 --> 18:50.760
이전 세대의 Ada보다 3배 더 높습니다.

18:50.760 --> 18:53.070
그리고 우리는 그 모든 것을
픽셀을 생성하는 데 필요로 합니다.

18:53.070 --> 18:58.070
내가 보여드린 380 레이 트레이싱 테라플롭스

18:58.650 --> 19:00.390
그래서 우리는 우리가 가지고
있는 픽셀에 대해 할 수 있었습니다.

19:00.390 --> 19:01.223
계산하다,

19:01.223 --> 19:04.260
가능한 가장 아름다운 이미지를 계산해 보세요.

19:04.260 --> 19:07.890
물론 125셰이더 테라플롭스죠.

19:07.890 --> 19:10.830
실제로 동시 셰이더 테라플롭도 있습니다.

19:10.830 --> 19:13.560
동등한 성과를 나타내는 정수 단위로.

19:13.560 --> 19:16.260
그러니까 듀얼 셰이더가 두 개죠.

19:16.260 --> 19:19.260
하나는 부동 소수점용이고, 하나는 정수용입니다.

19:19.260 --> 19:24.260
마이크론의 G7 메모리, 초당 1.8테라바이트.

19:24.450 --> 19:26.940
우리 지난 세대의 성과의 두 배입니다.

19:26.940 --> 19:30.990
이제 우리는 AI 워크로드를 혼합할
수 있는 능력을 갖추게 되었습니다.

19:30.990 --> 19:33.270
컴퓨터 그래픽 워크로드를 포함합니다.

19:33.270 --> 19:35.970
그리고 이 세대의 놀라운 점 중 하나는

19:35.970 --> 19:39.275
프로그래밍 가능한 셰이더도 가능합니다.

19:39.275 --> 19:42.360
이제 신경망을 처리합니다.

19:42.360 --> 19:45.480
그래서 셰이더는 이러한 신경망을 수행할 수 있습니다.

19:45.480 --> 19:49.590
그 결과 우리는 신경 텍스처 압축을 발명했습니다.

19:49.590 --> 19:52.170
그리고 신경 물질 음영 처리.

19:52.170 --> 19:53.760
그 결과로, 당신은 이것들을 얻습니다

19:53.760 --> 19:57.240
가능한 놀라울 정도로 아름다운 이미지

19:57.240 --> 19:59.910
우리는 AI를 사용하여 질감을 학습하기 때문에

19:59.910 --> 20:02.340
압축 알고리즘을 배우다

20:02.340 --> 20:04.770
그 결과 놀라운 결과를 얻게 됩니다.

20:04.770 --> 20:06.150
알았어요, 그럼 이건,

20:06.150 --> 20:11.150
이것은 새로운 RTX 블랙웰 5090입니다.

20:17.370 --> 20:22.370
심지어 기계적 설계조차도 기적입니다.

20:23.040 --> 20:24.933
보세요, 팬이 두 개 있어요.

20:25.830 --> 20:29.970
이 그래픽 카드 전체가 거대한 팬 하나일 뿐이에요.

20:29.970 --> 20:31.650
그래서 질문은 그래픽 카드가 어디에 있는가입니다.

20:31.650 --> 20:32.913
문자 그대로 이렇게 큰데,

20:34.350 --> 20:37.053
전압 조절기 설계는 최신식입니다.

20:38.010 --> 20:39.480
놀라운 디자인.

20:39.480 --> 20:42.600
엔지니어링 팀이 훌륭한 일을
해냈으니, 여기에 올려보겠습니다.

20:42.600 --> 20:43.433
감사합니다.

20:44.405 --> 20:47.405
(청중 박수)

20:48.990 --> 20:51.180
좋아요, 속도와 업적은 이렇습니다.

20:51.180 --> 20:53.250
그럼 어떻게 비교될까요?

20:53.250 --> 20:57.363
음, 이건 RTX 4090이에요.

21:00.270 --> 21:02.403
그렇죠. 여러분 중에 이런 걸 가지고
있는 사람이 많을 거라는 걸 알아요.

21:04.890 --> 21:08.880
알아요, 보세요, 1,599달러예요.

21:08.880 --> 21:10.410
그것은 최고의 투자 중 하나입니다

21:10.410 --> 21:11.793
만들 수도 있을 거예요.

21:14.070 --> 21:16.770
1,599달러면 집으로 가져갈 수 있어요

21:16.770 --> 21:21.770
10,000달러짜리 PC 엔터테인먼트 명령 센터로 가세요.

21:23.850 --> 21:24.783
그렇지 않나요?

21:25.680 --> 21:27.630
그게 사실이 아니라고 말하지 마세요.

21:27.630 --> 21:28.653
부끄러워하지 마세요.

21:30.240 --> 21:34.623
액체 냉각 방식이고, 곳곳에 멋진 조명이 달려 있어요.

21:36.240 --> 21:37.623
떠날 때는 잠그세요.

21:40.710 --> 21:44.070
이것이 현대식 홈시어터인데, 딱 들어맞는 말이에요.

21:44.070 --> 21:48.990
이제 1,500달러와 99,1,599달러로
업그레이드할 수 있습니다.

21:48.990 --> 21:50.730
그리고 그것을 엄청나게 강력하게 만들어요.

21:50.730 --> 21:53.321
이제 블랙웰 가족과 함께,

21:53.321 --> 21:58.321
RTX 5070, 4090 성능은 549.

22:07.710 --> 22:10.380
인공지능 없이는 불가능해요.

22:10.380 --> 22:15.030
4개의 TOP, 4개의 테라옵스 없이는 불가능

22:15.030 --> 22:20.030
G7 메모리 없이는 AI 텐서 코어가 불가능합니다.

22:20.640 --> 22:25.470
좋아요, 5070, 4090 성능은 549달러예요.

22:25.470 --> 22:26.850
그리고 여기 온 가족이 있습니다.

22:26.850 --> 22:30.330
5070부터 5090까지

22:30.330 --> 22:33.213
5090은 4090보다 두 배의 성능을 제공합니다.

22:35.940 --> 22:38.310
물론 시작하면서,

22:38.310 --> 22:40.470
우리는 매우 대규모로 생산하고 있어요

22:40.470 --> 22:42.630
1월부터 출시 예정입니다.

22:42.630 --> 22:44.700
글쎄요, 정말 놀랍죠.

22:44.700 --> 22:46.710
하지만 우리는 그것을 넣을 수 있었습니다.

22:46.710 --> 22:51.710
거대한 성능의 GPU를 노트북에 탑재했습니다.

22:53.100 --> 22:58.050
1299달러짜리 5070 노트북이에요.

22:58.050 --> 23:02.670
이 5070 노트북은 4090 성능을 가지고 있습니다.

23:02.670 --> 23:07.413
어딘가에 하나 있을 것 같은데, 보여드릴게요.

23:09.300 --> 23:13.473
이거 보세요, 여기 있어요.

23:14.880 --> 23:16.330
주머니의 수에는 한계가 있습니다.

23:17.880 --> 23:20.103
여러분, 자닌 폴입니다.

23:24.120 --> 23:25.350
그래서 당신은 상상할 수 있습니까,

23:25.350 --> 23:27.990
블랙웰, 여기 놀라운 그래픽 카드가 있어.

23:27.990 --> 23:30.360
나는 그것을 줄여서 거기에 넣을 거야.

23:30.360 --> 23:31.863
이게 말이 되나요?

23:33.600 --> 23:36.330
글쎄요, 인공지능이 없다면 그럴 수 없죠.

23:36.330 --> 23:37.350
그 이유는 다음과 같습니다.

23:37.350 --> 23:40.110
우리가 대부분의 픽셀을 생성하고 있기 때문에

23:40.110 --> 23:42.000
픽셀을 사용하고, 텐서 코어를 사용합니다.

23:42.000 --> 23:44.970
그래서 우리는 필요한 픽셀만 레이 트레이싱합니다.

23:44.970 --> 23:47.430
그리고 우리는 인공지능을 사용하여 생성합니다

23:47.430 --> 23:49.260
우리가 가지고 있는 다른 모든 픽셀.

23:49.260 --> 23:51.600
그 결과 에너지 효율성은

23:51.600 --> 23:53.610
그냥 차트에서 벗어나요.

23:53.610 --> 23:56.880
컴퓨터 그래픽의 미래는 신경 렌더링입니다.

23:56.880 --> 24:00.060
인공지능과 컴퓨터 그래픽의 융합.

24:00.060 --> 24:05.060
그리고 정말 놀라운 것은,
오, 여기 있습니다, 감사합니다.

24:07.620 --> 24:09.850
이것은 놀라울 정도로 역동적인 기조연설입니다.

24:11.280 --> 24:13.710
그리고 정말 놀라운 것은 가족이에요

24:13.710 --> 24:15.960
여기에 넣을 GPU의 개수입니다.

24:15.960 --> 24:19.950
그리고 5090, 5090

24:19.950 --> 24:22.050
노트북, 얇은 노트북에 들어갈 수 있어요.

24:22.050 --> 24:25.530
마지막 노트북은 14.14.9 밀리미터였어요.

24:25.530 --> 24:29.490
5080, 5070 Ti, 5070이 있죠.

24:29.490 --> 24:34.490
좋습니다, 신사숙녀 여러분, RTX 블랙웰 가족 여러분.

24:36.755 --> 24:39.755
(청중 박수)

24:43.800 --> 24:46.380
GeForce가 AI를 도입한 동안

24:46.380 --> 24:50.490
세계에 AI를 민주화하자.

24:50.490 --> 24:54.780
이제 AI가 돌아와 GeForce에 혁명을 일으켰습니다.

24:54.780 --> 24:57.360
인공지능에 대해서 이야기해 봅시다.

24:57.360 --> 24:59.283
NVIDIA의 다른 곳으로 가보죠.

25:04.590 --> 25:06.030
이곳은 말 그대로 우리 사무실이에요.

25:06.030 --> 25:08.030
이곳은 문자 그대로 NVIDIA의 본사입니다.

25:10.500 --> 25:13.530
좋아요, AI에 대해 이야기해 보죠.

25:13.530 --> 25:17.520
업계가 쫓아가고 있다

25:17.520 --> 25:21.480
그리고 인공지능의 확장을 위해 경쟁하고 있으며,

25:21.480 --> 25:23.610
인공지능,

25:23.610 --> 25:26.820
그리고 스케일링 법칙은 강력한 모델입니다.

25:26.820 --> 25:30.720
그것은 관찰된 경험적 법칙입니다

25:30.720 --> 25:32.580
연구자들이 입증했습니다

25:32.580 --> 25:35.730
여러 세대에 걸쳐 산업이 발전했습니다.

25:35.730 --> 25:39.210
그리고 스케일링 법칙은 다음과 같이 말합니다.

25:39.210 --> 25:42.750
데이터가 많을수록 훈련 데이터가 많아집니다.

25:42.750 --> 25:45.270
당신이 가지고 있는 것, 당신이 가지고 있는 더 큰 모델,

25:45.270 --> 25:47.340
그리고 당신이 그것에 더 많은 계산을 적용할수록,

25:47.340 --> 25:50.310
따라서 더 효과적이다

25:50.310 --> 25:54.480
혹은 모델이 더욱 강력해질 것입니다.

25:54.480 --> 25:57.480
그리고 스케일링 법칙은 계속됩니다.

25:57.480 --> 26:00.900
정말 놀라운 것은 우리가 지금 그
방향으로 나아가고 있다는 것입니다.

26:00.900 --> 26:02.490
물론이고 인터넷이 생산하고 있어요

26:02.490 --> 26:06.210
매년 약 2배씩 증가하는 데이터 양

26:06.210 --> 26:07.530
작년과 마찬가지로요.

26:07.530 --> 26:10.350
저는 다음 몇 년 안에 우리가 생산할 것이라고 생각합니다.

26:10.350 --> 26:13.110
인류는 모든 것보다 더 많은 데이터를 생산할 것입니다.

26:13.110 --> 26:16.200
인류가 시작된 이래로 생산해 온 모든 것.

26:16.200 --> 26:20.640
그래서 우리는 여전히 엄청난
양의 데이터를 생산하고 있습니다.

26:20.640 --> 26:25.170
그리고 그것은 비디오, 이미지, 사운드
등 다양한 모드로 전환되고 있습니다.

26:25.170 --> 26:27.180
그 모든 데이터는 사용될 수 있습니다

26:27.180 --> 26:29.640
기본 지식을 훈련하기 위해,

26:29.640 --> 26:32.340
AI의 기본 지식.

26:32.340 --> 26:36.420
그러나 실제로는 두 가지 다른 스케일링 법칙이 있습니다.

26:36.420 --> 26:39.990
이제 그것이 등장했고, 어느 정도 직관적입니다.

26:39.990 --> 26:44.490
두 번째 스케일링 법칙은 훈련 후 스케일링 법칙입니다.

26:44.490 --> 26:47.400
훈련 후 스케일링 법은 기술 기법을 사용합니다

26:47.400 --> 26:50.190
강화 학습이나 인간의 피드백과 같은 것이죠.

26:50.190 --> 26:53.310
기본적으로 AI는 다음을 생성합니다.

26:53.310 --> 26:57.630
인간의 질의에 기초하여 답변을 생성합니다.

26:57.630 --> 27:00.630
그러면 인간은 피드백을 줍니다.

27:00.630 --> 27:02.010
그것은 그보다 훨씬 더 복잡합니다.

27:02.010 --> 27:05.580
하지만 공정한 수의 강화 학습 시스템이 있습니다.

27:05.580 --> 27:09.420
매우 높은 품질의 프롬프트가 AI를 발생시킵니다.

27:09.420 --> 27:12.060
기술을 다듬습니다.

27:12.060 --> 27:15.090
특정 도메인에 대한 기술을 미세하게 조정할 수도 있습니다.

27:15.090 --> 27:17.250
수학 문제를 푸는 데 더 나을 수 있습니다.

27:17.250 --> 27:19.353
추론 능력이 더 뛰어나다는 식의 이야기입니다.

27:20.511 --> 27:23.520
그래서 본질적으로 멘토를 갖는 것과 같습니다.

27:23.520 --> 27:26.580
또는 코치가 피드백을 제공하도록 하세요

27:26.580 --> 27:28.410
학교를 다 마친 후에요.

27:28.410 --> 27:29.880
그래서 당신은 테스트를 받게 됩니다.

27:29.880 --> 27:32.190
피드백을 받으면 자신을 향상시킬 수 있습니다.

27:32.190 --> 27:35.310
또한 강화 학습 AI 피드백도 있습니다.

27:35.310 --> 27:38.130
합성 데이터 생성 기능도 있습니다.

27:38.130 --> 27:43.050
이러한 기술은 다음과 유사합니다.

27:43.050 --> 27:45.183
원한다면 스스로 연습하세요.

27:46.350 --> 27:48.720
당신은 특정 문제에 대한 답을 알고 있습니다

27:48.720 --> 27:51.870
그리고 그것이 옳을 때까지 계속해서 시도합니다.

27:51.870 --> 27:55.110
따라서 AI는 매우 복잡한 문제를 겪을 수 있습니다.

27:55.110 --> 27:56.910
그리고 어려운 문제

27:56.910 --> 27:59.850
기능적으로 검증 가능합니다.

27:59.850 --> 28:02.040
그리고 우리가 이해할 수 있는 답변이 있습니다.

28:02.040 --> 28:03.390
어쩌면 정리를 증명하는 것일 수도 있고,

28:03.390 --> 28:06.990
아마도 기하학 문제를 푸는 것일 수도 있겠습니다.

28:06.990 --> 28:11.370
그리고 이러한 문제는 AI가 답을 내놓게 만듭니다.

28:11.370 --> 28:14.100
강화 학습을 사용하면 다음을 배울 수 있습니다.

28:14.100 --> 28:15.810
자신을 개선하는 방법.

28:15.810 --> 28:17.970
그것을 사후 트레이닝이라고 부릅니다.

28:17.970 --> 28:20.820
훈련 후 엄청난 양의 계산이 필요합니다.

28:20.820 --> 28:24.570
하지만 최종 결과는 놀라운 모델을 만들어냈습니다.

28:24.570 --> 28:27.030
이제 우리는 세 번째 스케일링 법칙을 가지고 있습니다.

28:27.030 --> 28:30.480
그리고 이 세 번째 스케일링
법칙은 다음과 관련이 있습니다.

28:30.480 --> 28:33.690
테스트 타임 스케일링이라고 불리는
것은 테스트 타임 스케일링입니다.

28:33.690 --> 28:37.803
기본적으로 당신이 이용당하고
있을 때, 당신이 AI를 사용하고 있을 때,

28:38.760 --> 28:40.680
AI는 능력이 있다

28:40.680 --> 28:43.980
이제 다른 리소스 할당을 적용합니다.

28:43.980 --> 28:45.630
매개변수를 개선하는 것.

28:45.630 --> 28:50.630
이제 얼마나 많은 계산을 사용할
것인지 결정하는 데 중점을 두고 있습니다.

28:51.180 --> 28:54.093
원하는 답변을 만들어내기 위해서입니다.

28:54.930 --> 28:57.240
추론은 이를 생각하는 한 가지 방법입니다.

28:57.240 --> 28:59.400
오랫동안 생각하는 것은 이런
생각을 하는 한 가지 방법입니다.

28:59.400 --> 29:01.470
직접적인 추론 대신

29:01.470 --> 29:04.800
또는 한 번에 답을 얻을 수도 있고,
그것에 대해 추론할 수도 있습니다.

29:04.800 --> 29:07.440
문제를 여러 단계로 나눌 수도 있습니다.

29:07.440 --> 29:11.310
여러 가지 아이디어를 생각해 내고 평가할 수도 있습니다.

29:11.310 --> 29:13.650
알다시피, AI 시스템은 어떤 것을 평가할 것인가?

29:13.650 --> 29:16.860
당신이 내놓은 아이디어 중 가장 좋은 것이었습니다.

29:16.860 --> 29:18.840
아마도 그것은 문제를 단계적으로 해결할 것입니다.

29:18.840 --> 29:20.010
그 외에도 여러가지.

29:20.010 --> 29:23.010
그리고 이제 테스트 시간 확장이 입증되었습니다.

29:23.010 --> 29:24.960
놀라울 정도로 효과적이다.

29:24.960 --> 29:28.080
당신은 이 기술 시퀀스를 보고 있습니다

29:28.080 --> 29:30.810
그리고 이것, 이 모든 스케일링 법칙이 등장합니다.

29:30.810 --> 29:35.810
ChatGPT에서 o1까지 놀라운 성과를 볼 수 있습니다.

29:37.213 --> 29:39.300
o3로, 그리고 지금은 Gemini Pro로 바뀌었습니다.

29:39.300 --> 29:42.720
이 모든 시스템은 이 여정을 거치고 있습니다.

29:42.720 --> 29:46.410
단계별, 사전 훈련부터 사후 훈련까지,

29:46.410 --> 29:48.780
시간 확장을 테스트합니다.

29:48.780 --> 29:50.880
글쎄요, 우리에게 필요한 계산량은,

29:50.880 --> 29:52.740
물론 놀랍죠.

29:52.740 --> 29:55.980
그리고 우리는 사실, 우리는 사실 원합니다.

29:55.980 --> 29:58.290
그 사회는 양을 확장할 수 있는 능력을 가지고 있습니다.

29:58.290 --> 30:01.650
점점 더 많은 새로운 것을 생산하기 위한 계산

30:01.650 --> 30:03.630
그리고 더 나은 지능.

30:03.630 --> 30:04.620
물론 지능이죠,

30:04.620 --> 30:06.600
우리가 가진 가장 귀중한 자산입니다.

30:06.600 --> 30:08.070
그리고 그것은 많은 문제를 해결하는 데 적용될 수 있습니다

30:08.070 --> 30:10.170
매우 어려운 문제들.

30:10.170 --> 30:12.420
그래서 스케일링 법칙은,

30:12.420 --> 30:15.360
이로 인해 NVIDIA 컴퓨팅에 대한
수요가 엄청나게 증가하고 있습니다.

30:15.360 --> 30:17.430
엄청난 수요를 촉진하고 있습니다

30:17.430 --> 30:20.493
블랙웰이라고 불리는 이 놀라운 칩을 위해서요.

30:21.540 --> 30:23.670
블랙웰을 살펴보겠습니다.

30:23.670 --> 30:25.983
블랙웰은 이제 본격적으로 제작에 들어가요.

30:28.770 --> 30:30.990
그것이 어떤 모습인지 정말 놀랍습니다.

30:30.990 --> 30:33.243
그래서 우선, 몇 가지가 있는데,

30:34.200 --> 30:35.760
모든 클라우드 서비스 제공자

30:35.760 --> 30:37.830
이제 시스템을 구축하여 운영 중입니다.

30:37.830 --> 30:39.963
여기에는 약 15개의 시스템이 있습니다.

30:43.350 --> 30:45.900
잠깐만요, 컴퓨터 제작자가 15명이에요.

30:45.900 --> 30:49.770
약 200개의 다양한 SKU가 제작되고 있습니다.

30:49.770 --> 30:51.030
200가지의 다양한 구성.

30:51.030 --> 30:53.940
액체 냉각, 공랭, X86입니다.

30:53.940 --> 30:58.375
NVIDIA Grace CPU
버전, NVLink 36, 2개씩

30:58.375 --> 31:00.630
NVLinks 72개씩.

31:00.630 --> 31:02.400
다양한 유형의 시스템이 모여 있습니다

31:02.400 --> 31:03.960
우리가 수용할 수 있도록

31:03.960 --> 31:06.690
전 세계의 거의 모든 데이터 센터에 해당합니다.

31:06.690 --> 31:10.770
글쎄요, 이런 시스템은 현재 제작 중이에요

31:10.770 --> 31:13.020
약 45개 공장에서.

31:13.020 --> 31:16.170
인공지능이 얼마나 널리 퍼져 있는지 알려줍니다.

31:16.170 --> 31:19.080
그리고 업계가 얼마나 뛰어오르고 있는지

31:19.080 --> 31:22.053
이 새로운 컴퓨팅 모델에서 인공지능에 대해 알아보겠습니다.

31:23.190 --> 31:27.300
글쎄요, 우리가 그것을 그렇게 열심히 운전하는 이유는

31:27.300 --> 31:28.890
훨씬 더 많은 계산이 필요하기 때문이죠.

31:28.890 --> 31:30.960
그리고 그것은 매우 명확합니다.

31:30.960 --> 31:32.223
그것은 매우 명확합니다,

31:36.870 --> 31:37.703
자닌,

31:44.610 --> 31:45.443
알잖아,

31:47.310 --> 31:49.170
말하기는 어렵다,

31:49.170 --> 31:52.503
당신은 결코 어두운 곳에 손을 뻗고 싶지 않을 거예요.

31:54.090 --> 31:55.840
잠깐만요. 이게 좋은 생각일까요?

31:57.810 --> 31:58.643
괜찮은.

32:05.048 --> 32:07.631
(경쾌한 음악)

32:15.164 --> 32:18.493
잠깐만요.

32:18.493 --> 32:19.563
잠깐만요.

32:23.820 --> 32:25.293
나는 나 자신이 가치가 있다고 생각했습니다.

32:30.240 --> 32:32.740
묠니르는 내가 가치가 없다고 생각한 모양이다.

32:33.900 --> 32:38.880
좋아, 이건 내가 보여줄 쇼이고, 이건 내가 보여줄 쇼야.

32:38.880 --> 32:43.080
그래서 이 NVLink 시스템은 바로 여기 있습니다.

32:43.080 --> 32:47.543
이 NVLink 시스템은 GB
200, NVLink 72입니다.

32:48.990 --> 32:53.260
1톤 반, 60만개 부품입니다

32:54.780 --> 32:56.973
약 20대의 차량에 해당합니다.

32:59.010 --> 33:02.013
12, 120킬로와트.

33:05.280 --> 33:08.970
그 뒤에는 모든 것을 연결하는 척추가 있습니다.

33:08.970 --> 33:10.233
이러한 GPU를 함께 사용합니다.

33:11.460 --> 33:13.263
2마일의 구리 케이블,

33:15.840 --> 33:17.343
케이블 5,000개.

33:18.870 --> 33:22.770
이 제품은 전 세계 45개 공장에서 제조되고 있습니다.

33:22.770 --> 33:27.030
우리는 그것들을 만들고, 액체 냉각하고, 테스트합니다.

33:27.030 --> 33:31.020
우리는 그것들을 분해하고 부품을 데이터 센터로 배송합니다.

33:31.020 --> 33:33.510
무게가 1.5톤이거든요.

33:33.510 --> 33:37.020
우리는 데이터 센터 밖에서
그것을 다시 조립하여 설치합니다.

33:37.020 --> 33:39.000
제조가 미쳤습니다.

33:39.000 --> 33:40.890
하지만 이 모든 것의 목적은

33:40.890 --> 33:44.160
확장 법칙이 컴퓨팅을 너무 어렵게 만들고 있기 때문에

33:44.160 --> 33:46.230
이 수준의 계산은

33:46.230 --> 33:49.530
Blackwell은 지난 세대에 걸쳐 개선되었습니다.

33:49.530 --> 33:52.743
와트당 성능이 4배 향상됩니다.

33:53.640 --> 33:55.530
와트당 성능이 4배 향상됨

33:55.530 --> 33:59.190
달러당 성능이 3배 향상되었습니다.

33:59.190 --> 34:02.910
기본적으로 그것은 한 세대에 걸쳐

34:02.910 --> 34:06.480
우리는 이러한 모델을 훈련하는 데 드는 비용을 줄입니다.

34:06.480 --> 34:07.980
3배로.

34:07.980 --> 34:10.620
또는 모델의 크기를 늘리고 싶은 경우

34:10.620 --> 34:13.080
세 배 정도면 비용은 거의 비슷하죠.

34:13.080 --> 34:15.240
하지만 중요한 것은 이것입니다.

34:15.240 --> 34:18.480
이는 모든 사람이 사용하는 토큰을 생성합니다.

34:18.480 --> 34:20.760
우리가 ChatGPT를 사용할 때

34:20.760 --> 34:23.160
또는 쌍둥이자리를 사용할 때,
미래에는 휴대전화를 사용합니다.

34:23.160 --> 34:26.070
이 모든 응용 프로그램은 거의 소모될 것입니다.

34:26.070 --> 34:27.540
이러한 AI 토큰.

34:27.540 --> 34:30.390
그리고 이러한 AI 토큰은
이러한 시스템에 의해 생성됩니다.

34:31.320 --> 34:34.740
그리고 모든 데이터 센터는 전력에 의해 제한을 받습니다.

34:34.740 --> 34:39.340
따라서 Blackwell의 와트당 성능이 4배라면

34:40.740 --> 34:44.280
우리의 마지막 세대, 그 다음에는 수익

34:44.280 --> 34:46.200
생성될 수 있는 사업 규모

34:46.200 --> 34:48.060
데이터 센터에서 생성될 수 있는 것이 증가합니다.

34:48.060 --> 34:49.500
4배로.

34:49.500 --> 34:53.820
따라서 이러한 AI 공장 시스템은
오늘날 실제로 공장입니다.

34:53.820 --> 34:55.470
이제 이 모든 것의 목표는 다음과 같습니다.

34:55.470 --> 34:59.340
그래서 우리는 하나의 거대한 칩을 만들 수 있습니다.

34:59.340 --> 35:02.100
우리에게 필요한 계산 능력은 정말 엄청납니다.

35:02.100 --> 35:04.440
이건 기본적으로 하나의 거대한 칩이에요.

35:04.440 --> 35:08.250
만약 우리가 칩을 만들어야 했다면, 하나 만들겠습니다.

35:08.250 --> 35:12.153
미안해요, 여러분. 그거 보이죠, 멋지죠.

35:13.290 --> 35:15.040
보세요, 여기 디스코 조명이 있어요.

35:18.840 --> 35:20.670
만약 우리가 이것을 하나의 칩으로 만들어야 한다면,

35:20.670 --> 35:22.890
분명히 이것은 웨이퍼의 크기일 것입니다.

35:22.890 --> 35:25.350
하지만 여기에는 수확량의 영향은 포함되지 않습니다.

35:25.350 --> 35:28.200
아마도 크기가 3~4배는 될 겁니다.

35:28.200 --> 35:29.940
하지만 우리가 여기서 기본적으로 가지고 있는 것은

35:29.940 --> 35:33.930
72개의 Blackwell GPU
또는 144개의 다이입니다.

35:33.930 --> 35:38.130
여기 이 칩 하나는 1.4엑사플롭스입니다

35:38.130 --> 35:40.890
세계에서 가장 큰 슈퍼컴퓨터, 가장 빠른 슈퍼컴퓨터.

35:40.890 --> 35:42.450
최근에야,

35:42.450 --> 35:44.130
이 방 전체가 슈퍼컴퓨터예요.

35:44.130 --> 35:47.400
최근에야 엑사플롭 플러스를 달성했습니다.

35:47.400 --> 35:51.930
이는 1.4엑사플롭스의 AI 부동소수점 성능입니다.

35:51.930 --> 35:53.850
메모리 용량은 14테라바이트입니다.

35:53.850 --> 35:55.200
하지만 놀라운 점은 다음과 같습니다.

35:55.200 --> 35:59.310
메모리 대역폭은 초당 1.2페타바이트입니다.

35:59.310 --> 36:04.310
기본적으로, 기본적으로 전체 인터넷 트래픽이에요

36:04.950 --> 36:06.333
그게 바로 지금 일어나고 있는 일이에요.

36:08.010 --> 36:12.270
전 세계 인터넷 트래픽이 처리되고 있습니다

36:12.270 --> 36:14.040
이 칩을 통해서요.

36:14.040 --> 36:19.040
알겠습니다. 우리는 총 130조
개의 트랜지스터를 가지고 있습니다.

36:20.520 --> 36:25.520
2,592개의 CPU 코어, 엄청난 네트워킹.

36:26.040 --> 36:29.730
그리고 그래서 이것들은, 내가 할 수
있었으면 좋겠지만, 할 수 없을 것 같아요.

36:29.730 --> 36:31.203
이들이 블랙웰 가족이에요.

36:33.120 --> 36:38.120
이것이 바로 Connect X 네트워킹 칩입니다.

36:38.250 --> 36:39.840
이것이 NVLink입니다.

36:39.840 --> 36:40.920
그리고 우리는 가장하려고 노력하고 있어요

36:40.920 --> 36:43.890
NVLink 스파인에 대하여

36:43.890 --> 36:46.800
하지만 그건 불가능해요, 알겠어요?

36:46.800 --> 36:48.933
그리고 이것이 모든 HBM 메모리입니다.

36:50.040 --> 36:52.440
14테라바이트의 HBM 메모리.

36:52.440 --> 36:55.110
이것이 바로 우리가 하려는 일이고, 이것이 기적이에요.

36:55.110 --> 36:57.720
이것이 블랙웰 시스템의 기적이다.

36:57.720 --> 37:00.030
블랙웰 주사위는 바로 여기에 있어요.

37:00.030 --> 37:02.700
이는 세계가 제작한 단일 칩 중 가장 큰 것입니다.

37:02.700 --> 37:07.350
하지만 기적은 실제로 그 외에도 있습니다.

37:07.350 --> 37:09.690
이것이 그레이스 블랙웰 시스템이에요.

37:09.690 --> 37:11.880
글쎄요, 이 모든 것의 목표는 물론,

37:11.880 --> 37:14.043
그래서 우리는 할 수 있어요, 감사합니다, 감사합니다.

37:17.880 --> 37:18.720
아, 의자가 있나?

37:18.720 --> 37:20.220
잠깐 앉을 수도 있겠네요.

37:33.180 --> 37:34.923
미켈롭 울트라 한 개 주세요?

37:46.530 --> 37:48.630
어떻게 가능할까?

37:48.630 --> 37:51.543
우리는 미켈롭 울트라 스타디움에 있습니다.

37:54.180 --> 37:57.130
NVIDIA에 가서 GPU를 구할
수 없는 것과 마찬가지입니다.

38:02.220 --> 38:04.920
그래서 우리는 엄청난 양의 계산이 필요합니다.

38:04.920 --> 38:07.500
점점 더 큰 모델을 훈련시키고 싶거든요.

38:07.500 --> 38:09.240
그리고 이러한 추론은,

38:09.240 --> 38:11.910
이러한 추론은 하나의 추론이었는데,

38:11.910 --> 38:14.310
하지만 미래에는 AI가 스스로에게 말을 하게 될 거예요.

38:14.310 --> 38:15.900
생각하게 될 거야,

38:15.900 --> 38:18.240
내부적으로 반영되고 처리될 거예요.

38:18.240 --> 38:22.020
그래서 오늘 토큰이 당신에게 생성될 때,

38:22.020 --> 38:25.360
20시에 나온다면야

38:25.360 --> 38:27.780
또는 초당 30개의 토큰으로 기본적으로 빠릅니다.

38:27.780 --> 38:30.450
하지만 미래에는 누구나 읽을 수 있을 것입니다.

38:30.450 --> 38:34.410
그리고 지금 GPT o1을 사용하면 새로운

38:34.410 --> 38:36.810
Gemini Pro와 새로운,

38:36.810 --> 38:40.740
o1, o3 모델은 스스로에게 말하고 있습니다.

38:40.740 --> 38:43.080
반성하고, 생각하고 있어요.

38:43.080 --> 38:44.670
그리고 당신이 상상할 수 있듯이,

38:44.670 --> 38:47.370
토큰이 섭취될 수 있는 속도는 다음과 같습니다.

38:47.370 --> 38:49.110
믿을 수 없을 정도로 높습니다.

38:49.110 --> 38:50.490
그래서 우리에게는 토큰 비율이 필요합니다.

38:50.490 --> 38:53.340
토큰 생성률이 크게 올라갈 것입니다.

38:53.340 --> 38:56.640
그리고 우리는 동시에 비용을 대폭 낮춰야 합니다.

38:56.640 --> 39:00.120
그래서 서비스 품질이 매우 뛰어나야 합니다.

39:00.120 --> 39:02.820
고객 비용은 계속 낮아질 수 있습니다.

39:02.820 --> 39:04.920
AI는 계속해서 확장될 것입니다.

39:04.920 --> 39:06.780
그리고 그것이 근본적인 목적이에요.

39:06.780 --> 39:09.240
우리가 NVLink를 만든 이유는 바로,

39:09.240 --> 39:10.860
가장 중요한 것 중 하나

39:10.860 --> 39:13.613
기업 세계에서 일어나고 있는 일은 에이전트 AI입니다.

39:14.455 --> 39:17.220
Agentic AI는 기본적으로 완벽한 예입니다.

39:17.220 --> 39:18.540
테스트 시간 확장.

39:18.540 --> 39:21.480
AI는 모델로 구성된 시스템입니다.

39:21.480 --> 39:24.660
그 중 일부는 고객과의 이해와 상호 작용입니다.

39:24.660 --> 39:25.890
사용자와 상호작용.

39:25.890 --> 39:28.530
그 중 일부는 아마도 정보를 검색하는 것일 수도 있고,

39:28.530 --> 39:30.900
저장소에서 정보 검색,

39:30.900 --> 39:35.160
RAG와 같은 의미론적 AI
시스템이 진행 중일 수도 있습니다.

39:35.160 --> 39:39.210
인터넷으로, 예를 들어 PDF
파일을 공부하는 것일 수도 있습니다.

39:39.210 --> 39:40.530
그래서 도구를 사용할 수도 있고,

39:40.530 --> 39:42.210
계산기를 사용하는 것일 수도 있고,

39:42.210 --> 39:43.860
그리고 생성 AI를 사용하고 있을 수도 있습니다.

39:43.860 --> 39:46.770
차트 등을 생성합니다.

39:46.770 --> 39:49.440
그리고 그것은 반복되고, 당신이 준 문제를 취하고,

39:49.440 --> 39:50.790
단계별로 나누어 보겠습니다.

39:50.790 --> 39:53.220
그리고 이렇게 다양한 모델을 반복해서 적용합니다.

39:53.220 --> 39:56.160
글쎄요, 앞으로 고객에게 답변하기 위해서는

39:56.160 --> 39:59.820
AI가 응답하려면 질문을 해야 했는데,

39:59.820 --> 40:01.170
대답이 쏟아져 나오기 시작한다.

40:01.170 --> 40:03.660
미래에는 여러가지 질문을 하게 될 거에요

40:03.660 --> 40:05.640
모델 중 일부는 배경에서 작업할 것입니다.

40:05.640 --> 40:10.110
따라서 테스트 시간 스케일링, 사용된 계산량

40:10.110 --> 40:13.470
추론이 엄청나게 늘어날 거야.

40:13.470 --> 40:14.400
그것은 지붕을 뚫을 것입니다

40:14.400 --> 40:16.320
우리는 점점 더 나은 답변을 원하기 때문이죠.

40:16.320 --> 40:20.520
산업이 에이전트 AI를 구축하도록 돕기 위해,

40:20.520 --> 40:23.610
우리가 주로 접근하는 시장은 기업 고객이 아닙니다.

40:23.610 --> 40:25.470
우리의 주요 시장은 우리가 일하는 곳입니다.

40:25.470 --> 40:28.560
IT 생태계의 소프트웨어 개발자와 함께

40:28.560 --> 40:30.630
우리의 기술을 통합하기 위해

40:30.630 --> 40:33.570
우리가 한 것처럼 새로운 역량을 가능하게 하기 위해

40:33.570 --> 40:35.220
CUDA 라이브러리를 사용하여

40:35.220 --> 40:39.270
이제 우리는 AI 라이브러리를
통해 이 작업을 수행하고 싶습니다.

40:39.270 --> 40:43.140
그리고 과거의 컴퓨팅 모델에 API가 있었던 것처럼

40:43.140 --> 40:46.920
컴퓨터 그래픽을 하거나 선형 대수를 하는 사람들

40:46.920 --> 40:49.650
또는 미래에 유체 역학을 수행하거나

40:49.650 --> 40:52.500
이러한 가속 라이브러리 중에서,

40:52.500 --> 40:56.070
CUDA 가속 라이브러리와 AI 라이브러리도 있습니다.

40:56.070 --> 40:57.540
우리는 세 가지를 만들었습니다

40:57.540 --> 41:02.070
생태계가 에이전트 AI, NVIDIA
NIM을 구축하도록 돕기 위해

41:02.070 --> 41:06.240
기본적으로는 AI 마이크로서비스를
모두 패키지로 묶은 것입니다.

41:06.240 --> 41:09.570
이 모든 것은 정말 복잡한
CUDA 소프트웨어가 필요합니다.

41:09.570 --> 41:14.570
CUDA DNN, Cutlass 또는
Tensor RTLM 또는 Triton

41:15.210 --> 41:18.600
또는 이런 다양하고 정말 복잡한 소프트웨어들.

41:18.600 --> 41:21.750
그리고 모델 자체를 패키지화하고 최적화합니다.

41:21.750 --> 41:23.160
우리는 그것을 용기에 넣었다,

41:23.160 --> 41:25.170
원하는 곳 어디든 가지고 다닐 수 있죠.

41:25.170 --> 41:27.060
그래서 우리는 비전에 대한 모델을 가지고 있습니다.

41:27.060 --> 41:29.610
언어를 이해하고 말하기 위해

41:29.610 --> 41:32.370
애니메이션, 디지털 생물학 등에 사용됩니다.

41:32.370 --> 41:33.203
그리고 우리는 가지고 있습니다

41:33.203 --> 41:35.787
물리적 AI에 대한 몇 가지 새로운
흥미로운 모델이 등장합니다.

41:35.787 --> 41:39.660
그리고 이러한 AI 모델은 모든 클라우드에서 실행됩니다.

41:39.660 --> 41:41.330
이제 NVIDIA의 GPU를 사용할 수 있기 때문입니다.

41:41.330 --> 41:42.540
모든 구름 속에.

41:42.540 --> 41:44.220
모든 OEM에서 사용할 수 있습니다.

41:44.220 --> 41:46.260
그래서 당신은 문자 그대로 이 모델을 가져갈 수 있습니다.

41:46.260 --> 41:48.840
귀하의 소프트웨어 패키지에 통합하세요.

41:48.840 --> 41:52.140
Cadence에서 실행되는 AI 에이전트를 만듭니다.

41:52.140 --> 41:55.320
아니면 그들은 지금 서비스 에이전트일 수도 있고,

41:55.320 --> 41:57.450
아니면 SAP 에이전트일 수도 있어요

41:57.450 --> 41:59.580
그리고 그들은 그것을 고객에게 배포할 수 있었습니다.

41:59.580 --> 42:02.250
고객이 원하는 곳 어디에서나
소프트웨어를 실행할 수 있습니다.

42:02.250 --> 42:05.100
다음 레이어는 NVIDIA NeMo라고 불리는 것입니다.

42:05.100 --> 42:07.690
NeMo는 본질적으로

42:08.910 --> 42:12.040
디지털 직원 온보딩

42:12.960 --> 42:15.693
및 교육평가 시스템.

42:16.950 --> 42:19.140
미래에는 이러한 AI 에이전트가

42:19.140 --> 42:21.930
본질적으로 디지털 인력

42:21.930 --> 42:25.170
귀하의 직원과 함께 일하는,

42:25.170 --> 42:27.690
당신을 대신하여 일을 해줍니다.

42:27.690 --> 42:31.350
그래서 당신이 이러한 전문 에이전트를
데려오는 방법은 다음과 같습니다.

42:31.350 --> 42:35.070
당신 회사에, 이 특수 요원들이

42:35.070 --> 42:38.370
직원을 탑승시키는 것처럼 그들을 탑승시키는 것입니다.

42:38.370 --> 42:40.845
그래서 우리는 다양한 라이브러리를 가지고 있습니다.

42:40.845 --> 42:45.570
이러한 AI 에이전트는 다음과 같은
유형에 대해 훈련을 받아야 합니다.

42:45.570 --> 42:46.890
귀하의 회사의 언어,

42:46.890 --> 42:49.230
아마도 귀사만의 독특한 어휘가 있을 것입니다.

42:49.230 --> 42:50.970
사업 프로세스가 다릅니다.

42:50.970 --> 42:52.230
당신의 일하는 방식이 다릅니다.

42:52.230 --> 42:54.270
그래서 당신은 그들에게 다음과 같은 예를 들었을 것입니다.

42:54.270 --> 42:56.040
작업 제품이 어떻게 보여야 하는지,

42:56.040 --> 42:56.967
그리고 그들은 그것을 생성하려고 시도할 것입니다.

42:56.967 --> 42:58.830
그리고 당신은 피드백을 줄 것입니다

42:58.830 --> 43:01.620
그런 다음 이를 평가하고, 이런 식으로 계속 진행합니다.

43:01.620 --> 43:02.730
그래서,

43:02.730 --> 43:04.620
그리고 당신은 그들을 보호할 것이라고 말합니다.

43:04.620 --> 43:06.240
이건 당신이 해서는 안 될 일이에요.

43:06.240 --> 43:08.430
이건 말해서는 안 될 말이야.

43:08.430 --> 43:11.910
그리고 우리는 그들에게 특정
정보에 대한 접근권도 제공합니다.

43:11.910 --> 43:14.610
알았어요. 그럼 그 전체 파이프라인은

43:14.610 --> 43:18.270
디지털 직원 파이프라인은 NeMo라고 불립니다.

43:18.270 --> 43:20.130
많은 면에서,

43:20.130 --> 43:22.560
모든 회사의 IT 부서가 가고 있습니다

43:22.560 --> 43:25.833
미래에는 AI 에이전트의 인사부서가 될 것입니다.

43:26.820 --> 43:28.290
오늘은 그들이 관리합니다

43:28.290 --> 43:30.240
그리고 많은 소프트웨어를 유지 관리합니다

43:30.240 --> 43:32.460
IT업계 출신.

43:32.460 --> 43:35.250
미래에는 유지, 육성할 거예요.

43:35.250 --> 43:39.480
디지털 에이전트를 모두 탑승시키고 개선하세요

43:39.480 --> 43:41.730
그리고 이를 회사가 사용할 수 있도록 제공합니다.

43:41.730 --> 43:44.820
좋습니다. 그러면 IT 부서는 다음과 같이 될 것입니다.

43:44.820 --> 43:47.640
일종의 AI 에이전트 HR이에요.

43:47.640 --> 43:51.240
그리고 그 위에 우리는 많은 청사진을 제공합니다.

43:51.240 --> 43:54.450
우리 생태계가 활용할 수 있는 것입니다.

43:54.450 --> 43:56.100
이 모든 것은 완전히 오픈 소스입니다.

43:56.100 --> 43:59.670
그래서 당신은 그것을 가져다가
청사진을 수정할 수 있었습니다.

43:59.670 --> 44:00.750
우리는 모든 종류의 청사진을 가지고 있습니다

44:00.750 --> 44:02.730
다양한 유형의 대리인.

44:02.730 --> 44:05.640
글쎄요, 오늘 우리는 또한 우리가
무언가를 하고 있다고 발표합니다.

44:05.640 --> 44:08.160
정말 멋지고 똑똑하다고 생각해요.

44:08.160 --> 44:11.310
우리는 모든 모델의 전체 제품군을 발표합니다

44:11.310 --> 44:13.350
라마를 기반으로 한

44:13.350 --> 44:18.350
NVIDIA Llama Nemotron 언어 기초 모델.

44:18.540 --> 44:22.473
라마 3.1은 완벽한 현상입니다.

44:23.610 --> 44:26.400
Meta에서 Llama 3.1 다운로드

44:26.400 --> 44:30.630
65만 번쯤 될 거예요.

44:30.630 --> 44:35.630
그것은 파생되어 다른 모델로 변환되었습니다.

44:36.924 --> 44:38.733
약 60,000개의 다른 모델이 있습니다.

44:39.904 --> 44:41.310
그것은 특히 다음과 같은 이유입니다.

44:41.310 --> 44:42.570
거의 모든 기업

44:42.570 --> 44:44.910
그리고 모든 산업이 활성화되었습니다

44:44.910 --> 44:46.500
AI에 대한 작업을 시작하세요.

44:46.500 --> 44:48.618
글쎄요, 우리가 한 일은 우리가 깨달은 것이었습니다.

44:48.618 --> 44:52.470
라마 모델은 실제로 더 잘
미세 조정될 수 있다는 것입니다.

44:52.470 --> 44:54.180
기업용으로 사용 가능.

44:54.180 --> 44:56.550
그래서 우리는 우리의 전문 지식을
사용하여 그것을 미세 조정합니다.

44:56.550 --> 44:57.900
그리고 우리의 역량

44:57.900 --> 45:01.590
그리고 우리는 그들을 라마 네모트론 스위트로 바꾸었습니다.

45:01.590 --> 45:03.420
개방형 모델의 경우

45:03.420 --> 45:05.640
상호작용하는 작은 것들이 있습니다

45:05.640 --> 45:10.350
그리고 매우, 매우 빠른 응답 시간, 극히 작습니다.

45:10.350 --> 45:14.820
그것들은 우리가 슈퍼라고 부르는,
슈퍼인 라마 네모트론 슈퍼입니다.

45:14.820 --> 45:17.850
기본적으로 그것은 당신의 모델의 주류 버전입니다

45:17.850 --> 45:19.380
또는 울트라 모델.

45:19.380 --> 45:23.370
울트라 모델은 교사 모델로 활용될 수 있다

45:23.370 --> 45:25.020
다른 많은 모델에 대해서도 마찬가지입니다.

45:25.020 --> 45:27.810
보상 모델, 평가자 등이 될 수 있습니다.

45:27.810 --> 45:31.050
다른 모델이 답변을 만들 수 있도록 판단하는 사람

45:31.050 --> 45:33.510
그리고 그것이 좋은 답변인지 아닌지 판단해보세요.

45:33.510 --> 45:35.850
기본적으로 다른 모델에 피드백을 제공합니다.

45:35.850 --> 45:37.710
그것은 여러 가지 다른 방법으로 추출될 수 있습니다.

45:37.710 --> 45:42.710
기본적으로 교사 모델, 지식 증류 모델입니다.

45:42.840 --> 45:44.580
매우 크고, 매우 유능함.

45:44.580 --> 45:47.610
그리고 이 모든 것이 이제 온라인에서 이용 가능합니다.

45:47.610 --> 45:51.360
음, 이 모델들은 정말 놀랍네요.

45:51.360 --> 45:54.600
채팅 부문 리더보드에서 1위를 차지했습니다.

45:54.600 --> 45:59.600
지도를 위한 리더보드, 검색을 위한 리더보드.

46:00.510 --> 46:03.240
그래서 필요한 다양한 유형의 기능

46:03.240 --> 46:05.940
전 세계 AI 에이전트에 사용되는 것입니다.

46:05.940 --> 46:08.190
이들은 당신에게 놀라운 모델이 될 거예요.

46:09.300 --> 46:11.820
우리는 생태계와도 협력하고 있습니다.

46:11.820 --> 46:14.820
이러한 기술, 모든 NVIDIA
AI 기술은 통합되어 있습니다.

46:14.820 --> 46:18.570
IT 산업에 뛰어들다.

46:18.570 --> 46:19.620
우리는 훌륭한 파트너를 갖고 있습니다

46:19.620 --> 46:22.950
그리고 ServiceNow와 SAP에서
정말 훌륭한 일이 이루어지고 있습니다.

46:22.950 --> 46:26.520
지멘스의 산업용 AI.

46:26.520 --> 46:29.310
케던스는 훌륭한 일을 해내고 있고,
시놉시스 역시 훌륭한 일을 해내고 있습니다.

46:29.310 --> 46:31.830
저는 Perplexity에서 하는 일을
정말 자랑스럽게 생각합니다.

46:31.830 --> 46:34.200
아시다시피, 그들은 검색에 혁명을 일으켰습니다.

46:34.200 --> 46:36.090
네, 정말 환상적인 거죠.

46:36.090 --> 46:39.300
Codeium, 전 세계 모든 소프트웨어 엔지니어 여러분,

46:39.300 --> 46:43.680
이게 바로 다음의 거대한 AI 응용 프로그램이 될 겁니다.

46:43.680 --> 46:48.680
다음의 거대한 AI 서비스 분야는 소프트웨어 코딩입니다.

46:48.690 --> 46:51.360
전 세계 소프트웨어 엔지니어는 3천만 명.

46:51.360 --> 46:52.350
다들 가고 있어요

46:52.350 --> 46:55.941
코딩을 도와주는 소프트웨어 조수가 있으면 좋겠다.

46:55.941 --> 46:58.170
그렇지 않다면 분명히 당신은 그저,

46:58.170 --> 47:00.600
너 훨씬 덜 생산적이 될 거야

47:00.600 --> 47:02.250
그리고 덜 좋은 코드를 작성합니다.

47:02.250 --> 47:04.140
그러니까 이건 3천만이에요.

47:04.140 --> 47:07.260
세계에는 10억 명의 지식근로자가 있습니다.

47:07.260 --> 47:08.820
매우, 매우 명확하죠.

47:08.820 --> 47:12.810
AI 에이전트는 아마도 다음 로봇 산업일 것입니다.

47:12.810 --> 47:15.780
아마도 수조 달러 규모의 기회가 될 것입니다.

47:15.780 --> 47:20.400
그럼, 우리가 만든 청사진 중 일부를 보여드리겠습니다.

47:20.400 --> 47:22.860
그리고 우리가 파트너들과 함께 수행한 작업 중 일부

47:22.860 --> 47:24.197
이러한 AI 에이전트를 사용하여

47:28.940 --> 47:32.220
<v 아나운서 2>AI 에이전트는 새로운 디지털 인력입니다.</v>

47:32.220 --> 47:34.143
우리와 함께, 우리를 위해 일합니다.

47:35.190 --> 47:38.280
AI 에이전트는 모델 시스템입니다

47:38.280 --> 47:41.700
임무에 대한 이유를 작업으로 나누어보세요.

47:41.700 --> 47:44.040
데이터를 검색하거나 도구를 사용합니다.

47:44.040 --> 47:46.083
질 좋은 반응을 얻으려고요.

47:47.130 --> 47:49.890
NVIDIA의 에이전트 AI 빌딩 블록

47:49.890 --> 47:52.980
NIM 사전 훈련된 모델 및 NeMo 프레임워크

47:52.980 --> 47:56.040
조직이 AI 에이전트를 쉽게 개발할 수 있도록 하세요

47:56.040 --> 47:58.290
어디에나 배치할 수 있습니다.

47:58.290 --> 48:01.500
우리는 에이전트 인력을 탑승시키고 교육할 것입니다.

48:01.500 --> 48:04.533
우리는 직원에게 하는 것처럼
회사의 방법에도 주의를 기울입니다.

48:05.430 --> 48:09.780
AI 에이전트는 특정 분야의 작업 전문가입니다.

48:09.780 --> 48:12.090
네 가지 예를 보여드리겠습니다.

48:12.090 --> 48:14.940
수십억 명의 지식 노동자와 학생을 위해

48:14.940 --> 48:18.690
AI 연구 지원 에이전트가 복잡한 문서를 수집합니다.

48:18.690 --> 48:22.350
강의, 저널, 재무 결과와 같은

48:22.350 --> 48:25.950
쉽게 학습할 수 있도록 대화형 팟캐스트를 제작합니다.

48:25.950 --> 48:28.050
<v ->U-Net 회귀 모델을 결합함으로써</v>

48:28.050 --> 48:29.610
확산 모델을 사용하여

48:29.610 --> 48:32.370
핵심 차이점은 글로벌 날씨 예보를 축소할 수 있습니다.

48:32.370 --> 48:34.683
25킬로미터에서 2킬로미터로.

48:36.060 --> 48:38.250
<v 아나운서 2>NVIDIA와 같은 개발자들은</v>

48:38.250 --> 48:40.950
소프트웨어 보안 AI 에이전트 관리

48:40.950 --> 48:44.460
소프트웨어의 취약점을 지속적으로 검사합니다.

48:44.460 --> 48:47.283
개발자에게 어떤 조치가 필요한지 경고합니다.

48:49.050 --> 48:52.530
가상 연구실 AI 에이전트는
연구자들이 설계하는 데 도움을 줍니다.

48:52.530 --> 48:54.840
수십억 개의 화합물을 스크린합니다

48:54.840 --> 48:57.633
그 어느 때보다 빠르게 유망한 약물
후보물질을 찾을 수 있게 됐습니다.

48:59.430 --> 49:02.040
그리고 비디오 분석 AI 에이전트가 구축되었습니다.

49:02.040 --> 49:05.940
NVIDIA Cosmos를 포함한
NVIDIA 대도시 청사진에 대해

49:05.940 --> 49:10.320
Nemotron 비전 언어
모델, Llama Nemotron LLM

49:10.320 --> 49:15.029
그리고 NeMo Retriever, Metropolis
에이전트가 콘텐츠를 분석합니다.

49:15.029 --> 49:17.220
수십억 대의 카메라에서

49:17.220 --> 49:20.493
하루에 10만 페타바이트의 비디오가 생성됩니다.

49:21.420 --> 49:24.780
대화형 검색 및 요약이 가능합니다.

49:24.780 --> 49:26.073
및 자동화된 보고

49:27.585 --> 49:31.410
교통 흐름을 모니터링하고 혼잡을 표시합니다.

49:31.410 --> 49:32.243
또는 위험.

49:34.440 --> 49:38.100
산업 시설에서는 프로세스를 모니터링합니다.

49:38.100 --> 49:40.473
그리고 권장사항이나 개선사항을 생성합니다.

49:42.060 --> 49:46.110
메트로폴리스 에이전트는 수백 대의
카메라에서 데이터를 중앙화합니다.

49:46.110 --> 49:49.893
사고가 발생하면 근로자나
로봇의 경로를 변경할 수 있습니다.

49:50.880 --> 49:55.383
모든 조직에서 에이전트 AI 시대가 도래했습니다.

49:59.280 --> 50:00.113
<v ->알겠습니다.</v>

50:03.600 --> 50:05.640
그게 첫 번째 투구였습니다

50:05.640 --> 50:08.340
야구 경기에서는 그런 일이 발생하지 않았습니다.

50:08.340 --> 50:12.330
난 그냥 너희들 중 누구도
감명받지 못한 것 같았어, 알았지?

50:12.330 --> 50:16.890
그래서 AI는 클라우드에서 만들어졌어요

50:16.890 --> 50:20.277
그리고 클라우드를 위해 AI는
클라우드에서 만들어집니다. 클라우드를 위해

50:20.277 --> 50:23.610
그리고 AI를 휴대폰에서 즐기기 위해,

50:23.610 --> 50:25.440
물론 완벽하죠,

50:25.440 --> 50:28.890
곧 우리는 지속적인 AI를 갖게 될 것입니다.

50:28.890 --> 50:30.210
그게 당신과 함께 할 거예요.

50:30.210 --> 50:33.990
그리고 당신이 그 메타 안경을
사용할 때, 당신은 물론 할 수 있습니다

50:33.990 --> 50:36.570
무언가를 가리키고, 무언가를 보고, 물어보세요.

50:36.570 --> 50:38.570
알다시피, 당신이 원하는 어떤 정보라도요.

50:39.441 --> 50:41.160
따라서 AI는 클라우드에서 완벽합니다.

50:41.160 --> 50:43.170
클라우드에서 만들어졌으므로 클라우드에서 완벽합니다.

50:43.170 --> 50:45.210
하지만 우리는 다음을 수행할 수 있기를 바랍니다.

50:45.210 --> 50:46.680
AI가 어디에나 있다는 것.

50:46.680 --> 50:49.290
NVIDIA AI를 사용할 수 있다고 이미 언급했습니다.

50:49.290 --> 50:52.380
어떤 클라우드에도 적용할 수 있지만
회사 내부에도 적용할 수 있습니다.

50:52.380 --> 50:54.450
하지만 우리가 무엇보다도 하고
싶은 일은 그것을 넣는 것입니다.

50:54.450 --> 50:56.070
우리의 PC에서도 마찬가지입니다.

50:56.070 --> 50:57.840
그래서 여러분도 아시다시피,

50:57.840 --> 51:01.020
윈도우 95는 컴퓨터 산업에 혁명을 일으켰습니다.

51:01.020 --> 51:04.530
이를 통해 새로운 멀티미디어
서비스 제품군이 가능해졌습니다.

51:04.530 --> 51:06.450
그리고 응용 프로그램을 사용하는 방식을 변경했습니다.

51:06.450 --> 51:07.653
영원히 창조되었습니다.

51:08.490 --> 51:10.020
윈도우 95.

51:10.020 --> 51:12.450
이 컴퓨팅 모델

51:12.450 --> 51:15.180
물론 AI에는 완벽하지 않습니다.

51:15.180 --> 51:18.270
그래서 우리가 하고 싶은 일은 다음과 같습니다.

51:18.270 --> 51:21.090
미래에는 당신의 AI가 기본적으로
다음과 같이 될 것입니다.

51:21.090 --> 51:22.800
귀하의 AI 비서.

51:22.800 --> 51:26.067
그리고 단순한 3D API 대신

51:26.067 --> 51:28.590
그리고 사운드 API와 비디오 API,

51:28.590 --> 51:31.980
3D용 생성 API, 생성 API가 있을 것입니다.

51:31.980 --> 51:33.570
언어를 위한 생성 API

51:33.570 --> 51:36.090
그리고 소리를 위한 생성 AI 등등.

51:36.090 --> 51:38.700
그리고 우리에게는 다음과 같은 시스템이 필요합니다.

51:38.700 --> 51:41.460
레버리지를 활용하면서 가능

51:41.460 --> 51:44.280
클라우드에 대한 막대한 투자.

51:44.280 --> 51:46.860
우리가 할 수 있는 일은 세상이 만들어낼 수 없습니다.

51:46.860 --> 51:49.800
AI 모델을 프로그래밍하는 또 다른 방법입니다.

51:49.800 --> 51:51.210
그런 일은 일어나지 않을 거야.

51:51.210 --> 51:53.850
그래서 우리가 방법을 알아낼 수 있다면

51:53.850 --> 51:58.850
Windows PC를 세계적
수준의 AI PC로 만들기 위해

52:00.000 --> 52:01.320
정말 멋진 일이겠죠.

52:01.320 --> 52:04.200
그리고 답은 Windows인 것으로 밝혀졌습니다.

52:04.200 --> 52:09.000
윈도우 WSL2, 윈도우 WSL2입니다.

52:09.000 --> 52:12.600
Windows WSL2는 기본적으로
두 개의 운영 체제입니다.

52:12.600 --> 52:13.830
하나 안에.

52:13.830 --> 52:16.980
완벽하게 작동합니다. 개발자를 위해 개발되었습니다.

52:16.980 --> 52:19.350
그리고 그것은 그렇게 발전했어요

52:19.350 --> 52:21.390
베어메탈에 접근할 수 있다는 것입니다.

52:21.390 --> 52:26.390
WSL2는 클라우드 네이티브
애플리케이션에 최적화되었습니다.

52:28.020 --> 52:29.460
최적화되어 있습니다,

52:29.460 --> 52:32.880
그리고 아주 중요한 점은
CUDA에 최적화되었다는 점입니다.

52:32.880 --> 52:35.820
그래서 WSL2는 CUDA를 완벽하게 지원합니다

52:35.820 --> 52:38.730
결과적으로 상자 밖으로 나왔습니다.

52:38.730 --> 52:43.730
내가 NVIDIA와 함께 보여준 모든 것,

52:43.770 --> 52:47.910
NIM, NVIDIA NeMo, 청사진

52:47.910 --> 52:52.380
우리가 개발하는
ai.nvidia.com에 올라갈 것입니다.

52:52.380 --> 52:55.110
컴퓨터가 맞으면 돼요.

52:55.110 --> 52:57.090
당신이 그 모델에 맞을 수만 있다면요.

52:57.090 --> 52:59.430
그리고 우리는 적합한 모델을 많이 갖게 될 겁니다.

52:59.430 --> 53:01.290
비전 모델이든 언어 모델이든

53:01.290 --> 53:04.050
또는 음성 모델 또는 이러한 애니메이션,

53:04.050 --> 53:06.570
인간 디지털 인간 모델, 모든 종류

53:06.570 --> 53:09.150
다양한 유형의 모델이 완벽할 거야

53:09.150 --> 53:12.900
귀하의 PC에 맞게 다운로드하면 됩니다.

53:12.900 --> 53:14.340
그리고 그냥 실행되어야 합니다.

53:14.340 --> 53:19.340
그래서 우리의 초점은 Windows WSL2,
Windows PC로 전환하는 것입니다.

53:20.370 --> 53:25.110
우리가 지원할 일류 플랫폼으로 목표 설정

53:25.110 --> 53:27.090
우리가 살아 있는 한 이를 유지할 것입니다.

53:27.090 --> 53:29.430
그래서 이것은 놀라운 일입니다.

53:29.430 --> 53:31.680
전 세계 엔지니어와 개발자를 위해.

53:31.680 --> 53:33.540
그걸로 무엇을 할 수 있는지 보여드리겠습니다.

53:33.540 --> 53:34.590
이것은 그 중 하나의 예이다

53:34.590 --> 53:36.383
우리가 당신을 위해 만든 청사진입니다.

53:39.030 --> 53:42.360
<v 아나운서 3>생성 AI가 놀라운 이미지를 합성합니다</v>

53:42.360 --> 53:44.250
간단한 텍스트 프롬프트에서.

53:44.250 --> 53:46.410
그러나 이미지 구성은 어려울 수 있습니다.

53:46.410 --> 53:48.660
말만으로 통제하는 것.

53:48.660 --> 53:50.760
NVIDIA NIM 마이크로서비스를 사용하면

53:50.760 --> 53:53.640
제작자는 간단한 3D 객체를 사용할 수 있습니다

53:53.640 --> 53:56.010
AI 이미지 생성을 안내합니다.

53:56.010 --> 53:59.280
컨셉 아티스트가 이 기술을 어떻게
사용할 수 있는지 살펴보겠습니다.

53:59.280 --> 54:00.873
장면의 모습을 개발합니다.

54:01.920 --> 54:05.430
그들은 손으로 만든 3D 자산을
배치하는 것으로 시작합니다.

54:05.430 --> 54:07.320
또는 AI로 생성되었습니다.

54:07.320 --> 54:11.130
그런 다음 Flux와 같은
이미지 생성 NIM을 사용합니다.

54:11.130 --> 54:14.073
3D 장면에 맞는 비주얼을 만들려면

54:15.120 --> 54:17.973
구성을 세부화하기 위해 객체를 추가하거나 이동합니다.

54:20.310 --> 54:23.433
완벽한 샷을 촬영하기 위해 카메라 각도를 변경하세요.

54:24.780 --> 54:27.513
또는 새로운 프롬프트로 전체 장면을 다시 상상해 보세요.

54:31.260 --> 54:34.110
생성 AI 및 NVIDIA NIM의 지원을 받아

54:34.110 --> 54:36.453
예술가는 자신의 비전을 빠르게 실현할 수 있다.

54:40.170 --> 54:42.213
<v ->PC용 NVIDIA AI</v>

54:44.460 --> 54:47.730
전 세계에는 Windows가
설치된 수억 대의 PC가 있습니다.

54:47.730 --> 54:50.583
그래서 우리는 그들을 AI에 대비시킬 수 있었습니다.

54:51.418 --> 54:53.600
OEM, 우리가 협력하는 모든
PC OEM은 기본적으로 모두

54:53.600 --> 54:57.000
세계 최고의 PC OEM 중
일부가 PC를 준비할 예정입니다.

54:57.000 --> 54:58.230
이 스택에 대해서요.

54:58.230 --> 55:01.473
그리고 AI PC가 여러분의 집으로 찾아오고 있습니다.

55:08.190 --> 55:09.153
리눅스는 좋습니다.

55:15.060 --> 55:16.923
좋아요, 물리적 AI에 대해 이야기해 보겠습니다.

55:19.320 --> 55:21.753
리눅스에 관해 이야기하면서
물리적 AI에 대해서도 말해보죠.

55:23.400 --> 55:28.293
그래서 물리적 AI, 상상해보세요, 상상해보세요.

55:30.164 --> 55:34.410
대규모 언어 모델인 경우 컨텍스트를 제공합니다.

55:34.410 --> 55:38.700
왼쪽에 있는 프롬프트,

55:38.700 --> 55:42.630
그리고 한 번에 하나씩 토큰을 생성합니다.

55:42.630 --> 55:44.445
출력을 생성합니다.

55:44.445 --> 55:46.410
기본적으로 작동 원리는 다음과 같습니다.

55:46.410 --> 55:48.900
놀라운 점은 가운데 있는 이 모델이

55:48.900 --> 55:51.243
꽤 크고 매개변수가 수십억 개입니다.

55:52.140 --> 55:55.230
컨텍스트 길이가 엄청나게 깁니다

55:55.230 --> 55:57.840
내 경우에는 PDF로 로드하기로
결정할 수 있기 때문입니다.

55:57.840 --> 56:02.070
질문하기 전에 여러 개의 PDF를 불러올 수도 있습니다.

56:02.070 --> 56:04.200
해당 PDF는 토큰으로 변환됩니다.

56:04.200 --> 56:07.230
주의, 주의의 기본 특성

56:07.230 --> 56:10.110
변압기의 모든 토큰이 발견되었습니다

56:10.110 --> 56:14.220
다른 모든 토큰과의 관계 및 관련성.

56:14.220 --> 56:17.430
따라서 수십만 개의 토큰을 가질 수 있습니다.

56:17.430 --> 56:22.080
그리고 계산 부하는 이차적으로 증가합니다.

56:22.080 --> 56:24.900
그리고 이것은 모든 매개변수를 수행합니다.

56:24.900 --> 56:26.310
모든 입력 시퀀스,

56:26.310 --> 56:28.642
모든 레이어를 통해 처리합니다

56:28.642 --> 56:30.840
변압기의 경우 토큰 하나를 생성합니다.

56:30.840 --> 56:33.090
그것이 바로 우리에게 블랙웰이 필요한 이유입니다.

56:33.090 --> 56:35.730
그리고 다음 토큰이 생성됩니다.

56:35.730 --> 56:37.620
현재 토큰이 완료되면,

56:37.620 --> 56:40.800
현재 토큰을 입력 시퀀스에 넣습니다.

56:40.800 --> 56:43.560
그리고 그 모든 것을 가져와서 다음 토큰을 생성합니다.

56:43.560 --> 56:47.640
이것은 한 번에 하나씩 이루어지는 변압기 모델입니다.

56:47.640 --> 56:51.360
그래서 정말 믿을 수 없을 만큼 효과적인 거예요.

56:51.360 --> 56:53.280
계산적으로 까다로움.

56:53.280 --> 56:57.150
PDF 대신 주변 환경을 살펴보시면 어떨까요?

56:57.150 --> 57:00.300
그리고 질문을 촉구하는 대신,

57:00.300 --> 57:01.860
부탁이야, 저쪽으로 가봐

57:01.860 --> 57:05.340
그리고 그 상자를 집어서 다시 가져와야 해요.

57:05.340 --> 57:08.700
그리고 토큰으로 생산되는 것이 아니라 텍스트로 생산됩니다.

57:08.700 --> 57:12.090
이는 액션 토큰을 생성합니다.

57:12.090 --> 57:16.380
글쎄요, 제가 방금 설명한 것은 매우 현명한 일입니다.

57:16.380 --> 57:18.390
로봇공학의 미래를 위하여.

57:18.390 --> 57:20.520
그리고 그 기술은 바로 코앞에 있습니다.

57:20.520 --> 57:24.210
하지만 우리가 해야 할 일은
효과적인 것을 만드는 것입니다.

57:24.210 --> 57:28.860
사실상, 당신이 아는 세계 모델이죠,

57:28.860 --> 57:32.010
GPT는 언어 모델과 대조적입니다.

57:32.010 --> 57:34.770
그리고 이 세계 모델은 언어를 이해해야 합니다.

57:34.770 --> 57:38.490
세계의 물리적 역학을 이해해야 합니다.

57:38.490 --> 57:42.180
중력, 마찰, 관성과 같은 것들입니다.

57:42.180 --> 57:46.080
기하학적, 공간적 관계를 이해해야 합니다.

57:46.080 --> 57:47.880
원인과 결과를 이해해야 합니다.

57:47.880 --> 57:49.650
뭔가를 떨어뜨리면 땅에 떨어지고,

57:49.650 --> 57:52.800
알다시피, 그것을 찔러보면 넘어지죠.

57:52.800 --> 57:55.740
객체의 영속성을 이해해야 합니다.

57:55.740 --> 57:57.840
주방 카운터 위로 공을 굴리면,

57:57.840 --> 57:59.070
반대편으로 갈 때,

57:59.070 --> 58:02.550
공은 다른 양자 우주로 떠나지 않았습니다.

58:02.550 --> 58:03.900
아직도 거기 있어요.

58:03.900 --> 58:06.630
그래서 이 모든 유형의 이해는

58:06.630 --> 58:08.670
우리가 알고 있는 직관적 이해

58:08.670 --> 58:12.030
오늘날 대부분의 모델이 어려움을 겪는 부분입니다.

58:12.030 --> 58:14.610
그래서 우리는 세상을 창조하고 싶습니다.

58:14.610 --> 58:16.440
우리에게는 세계적 기반 모델이 필요합니다.

58:16.440 --> 58:19.410
오늘 우리는 매우 중요한 일을 발표하게 되었습니다.

58:19.410 --> 58:22.200
NVIDIA Cosmos를 발표합니다.

58:22.200 --> 58:26.070
설계된 세계 기반 모델입니다.

58:26.070 --> 58:29.310
물리적 세계를 이해하기 위해 만들어졌습니다.

58:29.310 --> 58:30.150
그리고 당신을 위한 유일한 방법은

58:30.150 --> 58:32.370
이것을 정말로 이해하려면 직접 보는 것이 필수입니다.

58:32.370 --> 58:33.203
플레이해 볼까요.

58:39.870 --> 58:43.410
<v 아나운서 4>AI의 다음 전선은 물리적 AI입니다.</v>

58:43.410 --> 58:47.850
모델 성능은 데이터 가용성과 직접적으로 관련됩니다.

58:47.850 --> 58:51.030
그러나 물리적 세계 데이터를
포착하는 데는 비용이 많이 듭니다.

58:51.030 --> 58:52.323
선별하고, 라벨을 붙입니다.

58:53.760 --> 58:56.430
NVIDIA Cosmos는 세계적인 기반입니다.

58:56.430 --> 59:00.210
물리적 AI를 발전시키기 위한 모델 개발 플랫폼.

59:00.210 --> 59:03.690
여기에는 자기 회귀 세계 기초 모델이 포함됩니다.

59:03.690 --> 59:08.400
확산 기반 세계 기초 모델, 고급 토크나이저

59:08.400 --> 59:12.213
NVIDIA CUDA와 AI 가속 데이터 파이프라인.

59:14.670 --> 59:18.450
Cosmos 모델은 텍스트, 이미지
또는 비디오 프롬프트를 수집합니다.

59:18.450 --> 59:21.123
가상 세계 상태를 비디오로 생성합니다.

59:21.990 --> 59:25.230
Cosmos 세대는 고유한 요구 사항을 우선시합니다.

59:25.230 --> 59:29.910
실제 환경과 같은 AV 및 로봇 사용 사례

59:29.910 --> 59:32.313
조명과 물체의 영속성.

59:33.390 --> 59:35.550
개발자들은 NVIDIA Omniverse를 사용합니다

59:35.550 --> 59:39.960
물리학을 기반으로 공간적으로 정확한 시나리오를 구축합니다.

59:39.960 --> 59:43.020
그런 다음 Omniverse가 Cosmos로 렌더링됩니다.

59:43.020 --> 59:46.980
실제와 같은 물리적 기반 합성 데이터를 생성합니다.

59:48.781 --> 59:51.531
(극적인 음악)

59:58.380 --> 01:00:00.040
다양한 객체

01:00:01.500 --> 01:00:02.583
또는 환경,

01:00:04.350 --> 01:00:06.210
날씨와 같은 조건

01:00:06.210 --> 01:00:08.160
또는 하루 중 시간,

01:00:08.160 --> 01:00:09.873
또는 예외적인 시나리오.

01:00:11.850 --> 01:00:14.640
개발자는 Cosmos를 사용하여 세계를 생성합니다.

01:00:14.640 --> 01:00:17.250
강화 학습 AI 피드백을 위해

01:00:17.250 --> 01:00:19.060
정책 모델을 개선하기 위해

01:00:20.610 --> 01:00:22.983
또는 모델 성능을 테스트하고 검증합니다.

01:00:24.540 --> 01:00:26.613
다중 센서 뷰에서도

01:00:28.710 --> 01:00:32.370
Cosmos는 실시간으로 토큰을
생성하여 전력을 공급할 수 있습니다.

01:00:32.370 --> 01:00:37.020
AI 모델에 대한 미래 예측 및 다중 우주 시뮬레이션

01:00:37.020 --> 01:00:39.360
가능한 모든 미래를 창출하다

01:00:39.360 --> 01:00:41.360
모델이 올바른 경로를 선택하는 데 도움이 됩니다.

01:00:43.500 --> 01:00:46.050
전 세계 개발자 생태계와 협력하여

01:00:46.050 --> 01:00:49.623
NVIDIA는 차세대 물리적 AI를
발전시키는 데 도움을 주고 있습니다.

01:00:55.470 --> 01:00:57.183
<v ->엔비디아 코스모스,</v>

01:00:58.770 --> 01:01:00.363
엔비디아 코스모스,

01:01:01.230 --> 01:01:06.230
세계 최초의 세계 기반 모델인 NVIDIA Cosmos.

01:01:06.510 --> 01:01:10.803
2,000만 시간 분량의 비디오를 기반으로 훈련되었습니다.

01:01:11.957 --> 01:01:14.070
2천만 시간 분량의 영상에 초점을 맞추다

01:01:14.070 --> 01:01:16.440
물리적으로 역동적인 것들에 대해서요.

01:01:16.440 --> 01:01:21.440
그래서 역동적인 자연, 자연 테마, 걷는 사람들,

01:01:23.100 --> 01:01:27.390
손이 움직이고, 물건을 조작하는 것, 알다시피요.

01:01:27.390 --> 01:01:29.940
카메라의 빠른 움직임.

01:01:29.940 --> 01:01:32.610
실제로는 AI에게 가르치는 것과 같습니다.

01:01:32.610 --> 01:01:34.860
창의적인 콘텐츠를 생성하는 것이 아니라,

01:01:34.860 --> 01:01:38.070
AI에게 물리적 세계를 이해하도록 가르치는 것이죠.

01:01:38.070 --> 01:01:41.129
그리고 이것으로부터, 이 물리적 AI로

01:01:41.129 --> 01:01:43.050
하류에는 많은 것들이 있습니다

01:01:43.050 --> 01:01:45.270
우리는 그 결과로 할 수 있는 일이었습니다.

01:01:45.270 --> 01:01:49.290
모델을 훈련하기 위해 합성 데이터를 생성할 수도 있습니다.

01:01:49.290 --> 01:01:50.910
우리는 그것을 증류할 수 있습니다

01:01:50.910 --> 01:01:53.190
그리고 그것을 효과적으로 씨앗으로 바꿔라.

01:01:53.190 --> 01:01:54.900
로봇 모델의 시작.

01:01:54.900 --> 01:01:59.040
여러 개의 물리적 기반을 생성할 수 있습니다.

01:01:59.040 --> 01:02:02.550
물리적으로 실현 가능한 미래의 시나리오.

01:02:02.550 --> 01:02:05.010
기본적으로 닥터 스트레인지를 하는 거죠.

01:02:05.010 --> 01:02:06.540
당신은 할 수 있습니다,

01:02:06.540 --> 01:02:08.550
이 모델은 물리적 세계를 이해하기 때문에

01:02:08.550 --> 01:02:10.740
물론 당신은 생성된 많은 이미지를 보았을 것입니다.

01:02:10.740 --> 01:02:12.630
이 모델은 재정 세계를 이해합니다.

01:02:12.630 --> 01:02:16.290
물론 캡션도 할 수 있죠.

01:02:16.290 --> 01:02:20.457
그래서 비디오를 촬영하고, 매우
훌륭한 자막을 넣을 수 있었습니다.

01:02:20.457 --> 01:02:21.840
그리고 그 캡션

01:02:21.840 --> 01:02:26.840
그리고 비디오는 대규모 언어 모델을
훈련하는 데 사용될 수 있습니다.

01:02:27.660 --> 01:02:29.940
다중 모달 대규모 언어 모델.

01:02:29.940 --> 01:02:32.070
그래서 당신은 이 기술을 사용할 수 있습니다

01:02:32.070 --> 01:02:35.790
이 기초 모델을 사용하여 로봇공학, 로봇을 훈련합니다.

01:02:35.790 --> 01:02:37.560
대규모 언어 모델도 있습니다.

01:02:37.560 --> 01:02:39.750
이것이 바로 NVIDIA Cosmos입니다.

01:02:39.750 --> 01:02:42.450
플랫폼에는 자동 회귀 모델이 있습니다

01:02:42.450 --> 01:02:44.040
실시간 응용 프로그램을 위해서.

01:02:44.040 --> 01:02:45.060
확산 모델이 있습니다

01:02:45.060 --> 01:02:47.700
매우 높은 품질의 이미지를 생성합니다.

01:02:47.700 --> 01:02:49.800
정말 놀라운 토크나이저예요.

01:02:49.800 --> 01:02:53.610
기본적으로 현실 세계의 어휘를 배우는 것

01:02:53.610 --> 01:02:55.320
그리고 데이터 파이프라인.

01:02:55.320 --> 01:02:57.270
그래서 만약 당신이 이 모든 것을 가져가고 싶다면

01:02:57.270 --> 01:03:00.360
그런 다음 이 데이터 파이프라인을
사용하여 자신의 데이터로 학습합니다.

01:03:00.360 --> 01:03:02.220
너무 많은 데이터가 관련되어 있기 때문에

01:03:02.220 --> 01:03:04.740
우리는 당신을 위해 처음부터
끝까지 모든 것을 가속화했습니다.

01:03:04.740 --> 01:03:08.010
이것이 세계 최초의 데이터 처리 파이프라인입니다.

01:03:08.010 --> 01:03:10.920
CUDA 가속화와 AI 가속화가 그것입니다.

01:03:10.920 --> 01:03:14.382
이 모든 것이 코스모스 플랫폼의 일부입니다.

01:03:14.382 --> 01:03:17.640
그리고 오늘 우리는 Cosmos가
오픈 라이선스임을 발표합니다.

01:03:17.640 --> 01:03:19.653
GitHub에서 공개되어 사용할 수 있습니다.

01:03:22.061 --> 01:03:25.061
(청중 박수)

01:03:26.940 --> 01:03:29.550
우리는 이 순간을 바랍니다

01:03:29.550 --> 01:03:31.680
그리고 작은 것, 중간 것, 큰 것이 있어요

01:03:31.680 --> 01:03:35.940
매우 빠른 모델, 즉 주류 모델에 대해서요.

01:03:35.940 --> 01:03:37.470
그리고 교사 모델도 있습니다.

01:03:37.470 --> 01:03:39.900
기본적으로 지식 전달 모델이 아닙니다.

01:03:39.900 --> 01:03:44.310
코스모스월드재단 모델이 개방되어

01:03:44.310 --> 01:03:47.160
우리는 그것이 로봇공학의 세계에 도움이 되기를 바랍니다.

01:03:47.160 --> 01:03:48.570
및 산업용 AI

01:03:48.570 --> 01:03:51.243
Llama 3가 엔터프라이즈 AI를 위해 수행한 작업

01:03:52.200 --> 01:03:57.180
코스모스를 옴니버스에 연결하면 마법이 일어납니다.

01:03:57.180 --> 01:03:59.133
그리고 근본적인 이유는 다음과 같습니다.

01:04:00.466 --> 01:04:04.590
Omniverse는 물리학에 근거한

01:04:04.590 --> 01:04:07.620
물리적으로 접지된 것이 아니라,
물리적으로 접지된 것입니다.

01:04:07.620 --> 01:04:09.570
그것은 알고리즘 물리학이에요.

01:04:09.570 --> 01:04:12.570
원칙에 기반한 물리 시뮬레이션, 접지 시스템.

01:04:12.570 --> 01:04:17.310
그것은 시뮬레이터인데, 그것을 코스모스에 연결하면,

01:04:17.310 --> 01:04:22.140
그것은 제어할 수 있는 접지, 즉 실제 사실을 제공합니다.

01:04:22.140 --> 01:04:25.320
그리고 Osmos 세대를 조건화합니다.

01:04:25.320 --> 01:04:28.560
결과적으로, Osmos에서 나오는
것은 진실에 기반을 둡니다.

01:04:28.560 --> 01:04:30.390
이것은 정확히 같은 아이디어입니다

01:04:30.390 --> 01:04:33.900
대규모 언어 모델을 RAG에 연결하는 것과 같이

01:04:33.900 --> 01:04:36.540
검색 증강 생성 시스템으로.

01:04:36.540 --> 01:04:40.650
당신은 AI 세대가 실제 사실을
바탕으로 판단하기를 원합니다.

01:04:40.650 --> 01:04:43.530
그래서 두 가지를 결합하면 다음과 같은 결과가 나옵니다.

01:04:43.530 --> 01:04:46.140
물리적으로 시뮬레이션된,

01:04:46.140 --> 01:04:51.140
물리적으로 접지된 다중 우주 생성기.

01:04:51.180 --> 01:04:52.230
그리고 응용 프로그램은,

01:04:52.230 --> 01:04:54.690
사용 사례는 정말 흥미진진합니다.

01:04:54.690 --> 01:04:59.070
물론 로봇공학, 산업용 애플리케이션의
경우에도 마찬가지입니다.

01:04:59.070 --> 01:05:00.660
매우, 매우 명확해요.

01:05:00.660 --> 01:05:02.553
이 코스모스 플러스,

01:05:04.644 --> 01:05:08.130
Omniverse와 Cosmos는
세 번째 컴퓨터를 나타냅니다.

01:05:08.130 --> 01:05:11.220
그건 로봇 시스템을 구축하는 데 필요해요.

01:05:11.220 --> 01:05:13.620
모든 로봇 회사는 궁극적으로

01:05:13.620 --> 01:05:15.270
컴퓨터 3대를 만들다.

01:05:15.270 --> 01:05:17.520
로봇공학, 로봇공학 시스템은 공장이 될 수 있습니다.

01:05:17.520 --> 01:05:20.100
로봇 시스템은 자동차가 될 수도
있고, 로봇이 될 수도 있습니다.

01:05:20.100 --> 01:05:22.410
기본 컴퓨터 3대가 필요합니다.

01:05:22.410 --> 01:05:25.290
물론 AI를 훈련하기 위한 컴퓨터 한 대

01:05:25.290 --> 01:05:28.470
우리는 AI를 훈련시키는 것을 DGX 컴퓨터라고 부릅니다.

01:05:28.470 --> 01:05:32.460
물론 AI 배포가 완료되면

01:05:32.460 --> 01:05:35.370
우리는 그것을 AGX라고 부르는데,
그것은 로봇이 있는 자동차 안에 있습니다.

01:05:35.370 --> 01:05:37.795
또는 AMR에서 또는 알다시피,

01:05:37.795 --> 01:05:40.530
경기장이든 어디든 말이죠.

01:05:40.530 --> 01:05:44.730
이런 컴퓨터는 가장자리에 있으며 자율적입니다.

01:05:44.730 --> 01:05:47.850
하지만 둘을 연결하려면 디지털 트윈이 필요합니다.

01:05:47.850 --> 01:05:50.010
그리고 이것이 당신이 보고 있던 모든 시뮬레이션입니다.

01:05:50.010 --> 01:05:54.600
디지털 트윈은 훈련된 AI가 이동하는 곳입니다.

01:05:54.600 --> 01:05:57.450
세련되기 위해 연습하다,

01:05:57.450 --> 01:06:00.690
합성 데이터 생성, 강화 학습을 수행합니다.

01:06:00.690 --> 01:06:02.640
AI는 이런저런 피드백을 줍니다.

01:06:02.640 --> 01:06:05.310
이것이 바로 AI의 디지털 트윈입니다.

01:06:05.310 --> 01:06:08.070
이 세 대의 컴퓨터는 상호 작용하여 작업하게 됩니다.

01:06:08.070 --> 01:06:11.610
산업계를 위한 NVIDIA의 전략.

01:06:11.610 --> 01:06:13.530
그리고 우리는 이것에 대해 꽤 오랫동안 이야기해 왔습니다.

01:06:13.530 --> 01:06:16.860
이게 세 대의 컴퓨터 시스템이에요, 알죠?

01:06:16.860 --> 01:06:19.140
33체 문제 대신에,

01:06:19.140 --> 01:06:21.420
우리는 3대의 컴퓨터 솔루션을 가지고 있습니다.

01:06:21.420 --> 01:06:24.063
이것이 바로 NVIDIA 로봇공학입니다.

01:06:25.178 --> 01:06:28.178
(청중 박수)

01:06:30.270 --> 01:06:32.580
그럼 세 가지 예를 들어보겠습니다.

01:06:32.580 --> 01:06:37.290
좋습니다. 첫 번째 예는 우리가 적용하는 방법입니다.

01:06:37.290 --> 01:06:41.310
이 모든 것을 산업 디지털화에 적용합니다.

01:06:41.310 --> 01:06:44.610
공장은 수백만 개, 수십만 개가 있습니다.

01:06:44.610 --> 01:06:48.180
기본적으로 창고의 중추입니다.

01:06:48.180 --> 01:06:51.630
50조 달러 규모의 제조업.

01:06:51.630 --> 01:06:54.150
이 모든 것이 소프트웨어로 정의되어야 합니다.

01:06:54.150 --> 01:06:57.630
이 모든 것이 미래에는 자동화되어야 합니다.

01:06:57.630 --> 01:07:00.180
그리고 이 모든 것에는 로봇공학이 접목될 겁니다.

01:07:00.180 --> 01:07:02.640
우리는 KION과 협력하고 있습니다.

01:07:02.640 --> 01:07:07.640
세계 최고의 창고 자동화 솔루션 제공업체

01:07:07.830 --> 01:07:09.420
그리고 Accenture,

01:07:09.420 --> 01:07:12.240
세계 최대의 전문 서비스 제공업체

01:07:12.240 --> 01:07:15.900
그들은 디지털 제조에 많은 중점을 두고 있습니다.

01:07:15.900 --> 01:07:18.750
그리고 우리는 함께 무언가를 만들기 위해 노력하고 있습니다

01:07:18.750 --> 01:07:21.000
정말 특별하네요. 곧 보여드리겠습니다.

01:07:21.000 --> 01:07:24.600
하지만 우리가 진출하는 시장은
기본적으로 모든 시장과 동일합니다.

01:07:24.600 --> 01:07:26.520
다른 소프트웨어 플랫폼의

01:07:26.520 --> 01:07:28.440
그리고 우리가 가지고 있는 모든 기술 플랫폼,

01:07:28.440 --> 01:07:33.440
개발자 및 생태계 파트너를 통해.

01:07:33.450 --> 01:07:36.870
그리고 우리는 계속 늘어나고 있습니다

01:07:36.870 --> 01:07:39.750
Omniverse에 연결하는 생태계 파트너의 수입니다.

01:07:39.750 --> 01:07:41.580
그 이유는 매우 분명합니다.

01:07:41.580 --> 01:07:44.670
모든 사람이 산업의 미래를 디지털화하고 싶어합니다.

01:07:44.670 --> 01:07:48.570
낭비가 너무 많고 자동화의 기회도 너무 많습니다.

01:07:48.570 --> 01:07:51.450
세계 GDP의 50조 달러에 해당합니다.

01:07:51.450 --> 01:07:52.680
그럼, 그것을 살펴보도록 하죠.

01:07:52.680 --> 01:07:56.463
KION과 Accenture에서
진행하는 한 가지 사례가 있습니다.

01:07:59.829 --> 01:08:02.910
<v 아나운서 5>공급망 솔루션 기업 KION입니다.</v>

01:08:02.910 --> 01:08:06.540
전문 서비스 분야의 글로벌 리더인 Accenture

01:08:06.540 --> 01:08:09.540
그리고 NVIDIA는 물리적 AI를 제공합니다.

01:08:09.540 --> 01:08:13.743
1조 달러 규모의 창고 및 유통센터 시장으로 진출.

01:08:14.610 --> 01:08:17.580
고성능 창고 물류 관리

01:08:17.580 --> 01:08:21.240
영향을 받는 복잡한 결정의 망을 탐색하는 것을 포함합니다.

01:08:21.240 --> 01:08:23.850
끊임없이 변화하는 변수에 의해서.

01:08:23.850 --> 01:08:27.090
여기에는 일일 및 계절별 수요 변화가 포함됩니다.

01:08:27.090 --> 01:08:30.240
공간 제약, 인력 가용성,

01:08:30.240 --> 01:08:32.820
다양한 로봇 기술의 통합

01:08:32.820 --> 01:08:34.890
및 자동화 시스템.

01:08:34.890 --> 01:08:37.410
그리고 운영 KPI 예측

01:08:37.410 --> 01:08:40.773
오늘날 물리적인 창고를 갖는 것은 거의 불가능합니다.

01:08:41.730 --> 01:08:43.470
이러한 과제를 해결하기 위해

01:08:43.470 --> 01:08:47.190
KION은 NVIDIA Omniverse
청사진인 Mega를 채택합니다.

01:08:47.190 --> 01:08:50.040
테스트를 위한 산업용 디지털 트윈 구축을 위해

01:08:50.040 --> 01:08:52.650
로봇 함대를 최적화합니다.

01:08:52.650 --> 01:08:57.030
첫째, KION의 창고 관리 솔루션은 작업을 할당합니다.

01:08:57.030 --> 01:09:00.480
디지털 트윈의 산업용 AI 두뇌에,

01:09:00.480 --> 01:09:02.880
버퍼 위치에서 하중을 이동하는 것과 같습니다.

01:09:02.880 --> 01:09:04.563
셔틀 보관 솔루션을 소개합니다.

01:09:05.520 --> 01:09:07.890
로봇의 뇌는 시뮬레이션 중입니다.

01:09:07.890 --> 01:09:11.370
실제 창고를 Omniverse로 디지털화하여

01:09:11.370 --> 01:09:15.840
OpenUSD 커넥터를 사용하여 CAD, 비디오 집계

01:09:15.840 --> 01:09:19.650
이미지를 3D로, LiDAR를 포인트 클라우드로,

01:09:19.650 --> 01:09:21.930
AI가 생성한 데이터.

01:09:21.930 --> 01:09:26.250
로봇 함대는 인식을 통해 작업을 실행합니다.

01:09:26.250 --> 01:09:27.740
그리고 추론

01:09:27.740 --> 01:09:29.730
Omniverse 디지털 트윈 환경에 대해

01:09:29.730 --> 01:09:32.610
다음 동작을 계획하고 행동하고,

01:09:32.610 --> 01:09:35.280
로봇의 뇌는 결과 상태를 볼 수 있습니다

01:09:35.280 --> 01:09:39.330
센서 시뮬레이션을 통해 다음 행동을 결정합니다.

01:09:39.330 --> 01:09:43.200
루프는 Mega가 상태를 정확하게
추적하는 동안 계속됩니다.

01:09:43.200 --> 01:09:45.093
디지털 트윈의 모든 것.

01:09:46.145 --> 01:09:50.130
이제 KION은 무한한 시나리오를
대규모로 시뮬레이션할 수 있습니다.

01:09:50.130 --> 01:09:54.240
처리량과 같은 운영 KPI를 측정하는 동안

01:09:54.240 --> 01:09:56.610
효율성과 활용성,

01:09:56.610 --> 01:09:59.673
모든 변경 사항을 물리적 창고에 배포하기 전에

01:10:00.750 --> 01:10:01.860
NVIDIA와 함께

01:10:01.860 --> 01:10:06.153
KION과 Accenture는 산업
자율성을 재창조하고 있습니다.

01:10:08.725 --> 01:10:11.493
<v ->놀랍네요, 모든 게 시뮬레이션이에요.</v>

01:10:12.630 --> 01:10:14.130
미래에,

01:10:14.130 --> 01:10:18.900
미래에는 모든 공장에 디지털 트윈이 생길 것이다.

01:10:18.900 --> 01:10:21.150
그리고 그 디지털 트윈은 정확히 작동합니다.

01:10:21.150 --> 01:10:22.560
진짜 공장과 같습니다.

01:10:22.560 --> 01:10:26.460
실제로 Cosmos와 함께
Omniverse를 사용할 수 있습니다.

01:10:26.460 --> 01:10:29.160
다양한 미래 시나리오를 생성합니다.

01:10:29.160 --> 01:10:31.950
그리고 당신이 선택하면 AI가 어떤 것을 결정합니다.

01:10:31.950 --> 01:10:35.130
어떤 시나리오가 어떤 KPI에 가장 적합한지 알아보세요.

01:10:35.130 --> 01:10:37.590
그리고 그것이 프로그래밍 제약이 됩니다.

01:10:37.590 --> 01:10:39.690
프로그램이라면 AI가 될 것입니다.

01:10:39.690 --> 01:10:42.330
실제 공장에 배치될 예정입니다.

01:10:42.330 --> 01:10:44.580
다음 예는 자율주행차입니다.

01:10:44.580 --> 01:10:47.610
AV 혁명이 도래했습니다.

01:10:47.610 --> 01:10:50.790
Waymo의 성공과 함께 수년간

01:10:50.790 --> 01:10:52.080
그리고 테슬라의 성공.

01:10:52.080 --> 01:10:53.760
매우, 매우 명확하죠.

01:10:53.760 --> 01:10:56.400
자율주행차가 드디어 등장했습니다.

01:10:56.400 --> 01:11:00.300
글쎄요, 우리가 이 산업에
제공하는 것은 세 대의 컴퓨터예요.

01:11:00.300 --> 01:11:02.580
AI를 훈련하기 위한 훈련 시스템

01:11:02.580 --> 01:11:04.000
시뮬레이션 시스템

01:11:05.129 --> 01:11:07.350
그리고 합성 데이터 생성 시스템, Omniverse

01:11:07.350 --> 01:11:11.970
그리고 이제 코스모스와 자동차 내부에 있는 컴퓨터도 있죠.

01:11:11.970 --> 01:11:13.650
각 자동차 회사에서는 일할 수 있습니다.

01:11:13.650 --> 01:11:15.750
다른 방법으로 우리와 함께,
하나 또는 두 가지를 사용하세요

01:11:15.750 --> 01:11:17.160
또는 컴퓨터 3대.

01:11:17.160 --> 01:11:18.030
우리는 함께 일하고 있어요

01:11:18.030 --> 01:11:20.880
전 세계 거의 모든 주요 자동차 회사가 그렇습니다.

01:11:20.880 --> 01:11:24.300
물론 Waymo, Zoox, Tesla도
데이터 센터에 있습니다.

01:11:24.300 --> 01:11:27.390
세계 최대의 전기자동차 회사인 BYD.

01:11:27.390 --> 01:11:29.400
JLR에서 정말 멋진 자동차가 출시될 예정이에요.

01:11:29.400 --> 01:11:32.310
Mercedes는 NVIDIA가 탑재된
차량을 다수 보유하고 있습니다.

01:11:32.310 --> 01:11:35.070
올해부터 생산에 들어갑니다.

01:11:35.070 --> 01:11:38.910
그리고 오늘 저는 매우, 매우 기쁘게 발표합니다.

01:11:38.910 --> 01:11:41.490
Toyota와 NVIDIA가 협력할 예정입니다.

01:11:41.490 --> 01:11:43.623
차세대 AV를 개발하고자 합니다.

01:11:44.719 --> 01:11:47.719
(청중 박수)

01:11:50.940 --> 01:11:53.340
멋진 회사가 너무나 많죠.

01:11:53.340 --> 01:11:56.100
루시드와 리비안과 샤오미,

01:11:56.100 --> 01:11:59.520
물론 볼보도 있고, 정말 다양한 회사들이 있죠.

01:11:59.520 --> 01:12:02.310
와비는 자율주행 트럭을 개발하고 있습니다.

01:12:02.310 --> 01:12:04.620
오로라, 이번 주에도 발표했어요

01:12:04.620 --> 01:12:06.000
Aurora가 NVIDIA를 사용할 거라고요

01:12:06.000 --> 01:12:08.130
자율 주행 트럭을 만들다.

01:12:08.130 --> 01:12:12.030
자율주행차, 매년 1억 대가 생산됩니다.

01:12:12.030 --> 01:12:15.570
전 세계 도로를 달리는 10억 대의 자동차,

01:12:15.570 --> 01:12:19.290
매년 전 세계를 돌며 주행하는
거리는 1조 마일에 달합니다.

01:12:19.290 --> 01:12:22.320
그것은 모두 매우 자율적일 것입니다

01:12:22.320 --> 01:12:25.200
아니면 완전 자율 주행차가 나올 거예요.

01:12:25.200 --> 01:12:27.780
그래서 이건 정말 엄청나게 큰 산업이 될 거예요.

01:12:27.780 --> 01:12:29.760
나는 이것이 아마도 그럴 것이라고 예측합니다.

01:12:29.760 --> 01:12:33.480
최초의 수조 달러 규모의 로봇 산업.

01:12:33.480 --> 01:12:35.850
이 사업은 우리에게 중요합니다.

01:12:35.850 --> 01:12:40.260
이 차량 중 몇 대에서만 시작되는 것을 확인하십시오.

01:12:40.260 --> 01:12:44.130
세계로 진출하기 위해 우리
사업은 이미 40억 달러 규모입니다.

01:12:44.130 --> 01:12:47.130
그리고 올해는 아마 50억 달러 정도가 될 겁니다.

01:12:47.130 --> 01:12:48.870
그러니 이미 정말 중요한 사업이죠.

01:12:48.870 --> 01:12:50.340
매우 큰 규모일 거예요.

01:12:50.340 --> 01:12:52.080
글쎄요, 오늘 우리는 발표합니다

01:12:52.080 --> 01:12:55.410
자동차용 차세대 프로세서는

01:12:55.410 --> 01:12:58.290
자동차에 사용되는 차세대 컴퓨터의 이름은 토르입니다.

01:12:58.290 --> 01:13:00.203
여기 하나 있어요. 잠깐만요.

01:13:02.910 --> 01:13:06.243
알았어, 이 사람이 토르야, 이 사람이 토르야.

01:13:07.920 --> 01:13:11.613
이것은 로봇 컴퓨터입니다.

01:13:12.690 --> 01:13:14.010
이것은 로봇 컴퓨터입니다.

01:13:14.010 --> 01:13:17.400
센서를 엄청난 양으로 사용합니다.

01:13:17.400 --> 01:13:21.693
센서 정보를 처리하고, 알다시피요.

01:13:21.693 --> 01:13:26.693
수많은 카메라, 고해상도, 레이더, 라이더,

01:13:27.300 --> 01:13:28.920
그들은 모두 이 칩에 들어와요.

01:13:28.920 --> 01:13:31.710
그리고 이 칩은 모든 센서를 처리해야 합니다.

01:13:31.710 --> 01:13:34.830
토큰으로 바꿔서 변압기에 넣어

01:13:34.830 --> 01:13:37.710
다음 경로를 예측해보세요.

01:13:37.710 --> 01:13:41.550
그리고 이 AV 컴퓨터는 현재
본격적으로 생산되고 있습니다.

01:13:41.550 --> 01:13:45.840
토르는 처리 능력이 20배 더 뛰어납니다.

01:13:45.840 --> 01:13:48.750
우리의 마지막 세대인 Orin은 실제로 표준입니다.

01:13:48.750 --> 01:13:50.700
오늘날 자율주행차의 수는 1억 8천만 명에 달합니다.

01:13:50.700 --> 01:13:53.580
이건 정말, 정말 놀라운 일이에요.

01:13:53.580 --> 01:13:54.960
토르는 현재 제작 중이다.

01:13:54.960 --> 01:13:56.730
그런데 이 로봇 프로세서는,

01:13:56.730 --> 01:13:58.650
완전한 로봇에도 들어갑니다.

01:13:58.650 --> 01:14:02.670
그래서 그것은 AMR일 수도 있고,
인간일 수도 있고, 로봇일 수도 있습니다.

01:14:02.670 --> 01:14:05.940
뇌일 수도 있고, 조작자일 수도 있습니다.

01:14:05.940 --> 01:14:07.620
이 프로세서는 기본적으로

01:14:07.620 --> 01:14:09.963
범용 로봇 컴퓨터.

01:14:11.370 --> 01:14:14.310
우리 드라이브 시스템의 두 번째 부분

01:14:14.310 --> 01:14:18.420
제가 가장 자랑스러워하는 것은 안전에 대한 헌신입니다.

01:14:18.420 --> 01:14:21.510
DriveOS를 발표하게 되어 기쁩니다.

01:14:21.510 --> 01:14:26.510
최초의 소프트웨어 정의 프로그래밍 가능 AI 컴퓨터

01:14:27.060 --> 01:14:29.160
인증되었습니다

01:14:29.160 --> 01:14:33.360
ASIL-D는 가장 높은 표준입니다.

01:14:33.360 --> 01:14:36.480
자동차의 기능적 안전에 관한 것입니다.

01:14:36.480 --> 01:14:38.430
유일하고 가장 높은 것.

01:14:38.430 --> 01:14:43.290
그래서 저는 ASIL-D, ISO 26262를
정말 정말 자랑스럽게 생각합니다.

01:14:43.290 --> 01:14:48.270
이는 약 15,000년의 공학적 세월이 걸린 작업입니다.

01:14:48.270 --> 01:14:50.370
이건 정말 놀라운 일이네요.

01:14:50.370 --> 01:14:51.600
그리고 그 결과로,

01:14:51.600 --> 01:14:55.143
CUDA는 이제 정상적으로 작동하는 안전한 컴퓨터입니다.

01:14:56.130 --> 01:14:59.163
따라서 로봇을 만든다면 NVIDIA CUDA가 정답입니다.

01:15:04.690 --> 01:15:06.030
좋아요, 그럼 이제 내가 원했던 것은,

01:15:06.030 --> 01:15:10.230
내가 Omniverse를 어떻게
사용할지 보여줄 거라고 했잖아

01:15:10.230 --> 01:15:15.230
그리고 Cosmos는 자율주행차와 관련된 일을 합니다.

01:15:15.300 --> 01:15:17.760
그리고 오늘, 여러분에게 모든 것을 보여주는 대신

01:15:17.760 --> 01:15:21.600
도로를 주행하는 자동차의 비디오,

01:15:21.600 --> 01:15:23.150
그 중 일부도 보여 드릴게요.

01:15:23.150 --> 01:15:27.180
하지만 우리가 차를 어떻게 사용하는지 보여주고 싶어요

01:15:27.180 --> 01:15:31.020
AI를 사용하여 디지털 트윈을 자동으로 재구성합니다.

01:15:31.020 --> 01:15:36.000
그 기능을 활용해 미래의 AI 모델을 훈련시킵니다.

01:15:36.000 --> 01:15:37.000
좋습니다. 시작해 볼까요.

01:15:41.310 --> 01:15:44.580
<v 아나운서 6>자율주행차 혁명이 도래했습니다.</v>

01:15:44.580 --> 01:15:48.390
모든 로봇과 마찬가지로 자율 주행차 제작

01:15:48.390 --> 01:15:50.460
컴퓨터 3대가 필요합니다.

01:15:50.460 --> 01:15:55.260
NVIDIA DGX, AI 모델 훈련,
Omniverse 테스트 드라이브

01:15:55.260 --> 01:15:57.330
합성 데이터를 생성합니다.

01:15:57.330 --> 01:16:00.963
그리고 자동차용 슈퍼컴퓨터, Drive AGX.

01:16:01.950 --> 01:16:04.020
안전한 자율주행차 구축

01:16:04.020 --> 01:16:06.600
에지 시나리오를 처리하는 것을 의미합니다.

01:16:06.600 --> 01:16:08.940
하지만 실제 데이터는 제한적입니다.

01:16:08.940 --> 01:16:12.693
그래서 합성 데이터는 훈련에 필수적입니다.

01:16:14.077 --> 01:16:15.756
자율주행차 데이터 팩토리,

01:16:15.756 --> 01:16:19.170
NVIDIA Omniverse, AI 모델로 구동

01:16:19.170 --> 01:16:22.950
그리고 Cosmos는 합성 주행 시나리오를 생성합니다.

01:16:22.950 --> 01:16:26.163
이는 훈련 데이터를 엄청나게 향상시킵니다.

01:16:27.660 --> 01:16:30.270
첫째, OmniMap은 지도를 융합합니다.

01:16:30.270 --> 01:16:35.103
주행 가능한 3D 환경을 구축하기 위한 공간 데이터입니다.

01:16:38.310 --> 01:16:41.100
운전 시나리오 변형이 생성될 수 있습니다.

01:16:41.100 --> 01:16:44.943
재생 드라이브 로그나 AI 트래픽 생성기에서.

01:16:46.230 --> 01:16:49.200
다음으로, 신경 재구성 엔진

01:16:49.200 --> 01:16:51.900
자율주행차 센서 로그 사용

01:16:51.900 --> 01:16:56.850
높은 충실도의 4D 시뮬레이션 환경을 만듭니다.

01:16:56.850 --> 01:16:59.400
이전 드라이브를 3D로 재생합니다.

01:16:59.400 --> 01:17:03.423
훈련 데이터를 확대하기 위해 시나리오 변형을 생성합니다.

01:17:04.620 --> 01:17:08.160
마지막으로 Edify 3DS는 자동으로 검색합니다.

01:17:08.160 --> 01:17:10.000
기존 자산 라이브러리를 통해

01:17:10.874 --> 01:17:15.513
또는 시뮬레이션에 적합한 장면을
만들기 위해 새로운 자산을 생성합니다.

01:17:18.930 --> 01:17:22.590
Omniverse 시나리오는 Cosmos를
조건화하는 데 사용됩니다.

01:17:22.590 --> 01:17:26.160
엄청난 양의 사실적인 데이터를 생성하려면

01:17:26.160 --> 01:17:28.060
시뮬레이션을 실제 갭으로 줄이기

01:17:29.490 --> 01:17:34.080
텍스트 프롬프트를 사용하면 거의 무한한 변형이 생성됩니다.

01:17:34.080 --> 01:17:35.493
운전 시나리오의.

01:17:37.200 --> 01:17:40.140
Cosmos Nemotron 비디오 검색을 사용하면

01:17:40.140 --> 01:17:43.260
대규모로 확장된 합성 데이터 세트

01:17:43.260 --> 01:17:46.410
기록된 드라이브와 결합하여 큐레이션할 수 있습니다.

01:17:46.410 --> 01:17:47.493
모델을 훈련시키다.

01:17:50.130 --> 01:17:53.460
NVIDIA의 AI 데이터 팩토리는 수백 개로 확장됩니다.

01:17:53.460 --> 01:17:57.090
수십억 마일에 달하는 효과적인 주행.

01:17:57.090 --> 01:17:59.220
안전을 위한 표준 설정

01:17:59.220 --> 01:18:00.993
그리고 자율주행이 더욱 발전했습니다.

01:18:05.992 --> 01:18:08.242
<v ->정말 놀랍지 않나요, 우리</v>

01:18:10.522 --> 01:18:14.040
수천 번의 운전을 하다

01:18:14.040 --> 01:18:16.980
그것을 수십억 마일로 바꾸죠.

01:18:16.980 --> 01:18:20.190
우리는 엄청난 양의 훈련 데이터를 갖게 될 것입니다.

01:18:20.190 --> 01:18:21.690
자율 주행차에 대한.

01:18:21.690 --> 01:18:24.810
물론, 우리는 여전히 도로에 실제 자동차가 필요합니다.

01:18:24.810 --> 01:18:27.300
물론, 우리는 지속적으로 데이터를 수집할 것입니다.

01:18:27.300 --> 01:18:28.530
우리가 살아있는 한.

01:18:28.530 --> 01:18:33.300
하지만 이 멀티버스를 이용한 합성 데이터 생성은

01:18:33.300 --> 01:18:37.272
물리적 기반, 물리적으로 근거한 역량

01:18:37.272 --> 01:18:40.260
AI 훈련을 위한 데이터를 생성하기 위해서

01:18:40.260 --> 01:18:42.120
물리적으로 근거가 있고 정확합니다

01:18:42.120 --> 01:18:45.420
또는 그럴듯하게 말해서 우리는
엄청난 양을 가질 수 있었습니다.

01:18:45.420 --> 01:18:48.510
학습할 데이터의 양이 풍부한 AV 산업이 이미 존재합니다.

01:18:48.510 --> 01:18:50.580
지금은 정말 흥미로운 시기입니다.

01:18:50.580 --> 01:18:54.240
앞으로의 몇 년이 정말, 정말, 정말 기대됩니다.

01:18:54.240 --> 01:18:55.380
너도 보게 될 거라고 생각해.

01:18:55.380 --> 01:18:58.110
컴퓨터 그래픽이 혁명을 일으킨 것처럼

01:18:58.110 --> 01:19:01.050
정말 놀라운 속도예요, 그 속도를 꼭 보게 될 거예요

01:19:01.050 --> 01:19:03.750
AV 개발이 엄청나게 증가하고 있습니다

01:19:03.750 --> 01:19:05.150
향후 몇 년 동안.

01:19:09.734 --> 01:19:12.734
(청중 박수)

01:19:15.780 --> 01:19:16.613
제 생각에는,

01:19:16.613 --> 01:19:21.590
다음 부분은 로봇공학이라고 생각해요.

01:19:24.450 --> 01:19:25.283
그래서.

01:19:33.171 --> 01:19:34.838
로봇을 기억하시나요?

01:19:37.980 --> 01:19:38.813
내 친구들.

01:19:45.030 --> 01:19:47.220
ChatGPT 순간

01:19:47.220 --> 01:19:49.833
일반 로봇공학이 곧 실현될 것입니다.

01:19:50.730 --> 01:19:52.800
실제로 이를 가능하게 하는 모든 기술은

01:19:52.800 --> 01:19:57.060
내가 말했던 것이 가능하게 될 거야

01:19:57.060 --> 01:19:59.160
우리에게는 앞으로 몇 년 동안

01:19:59.160 --> 01:20:01.140
매우 빠른 돌파구를 보려고,

01:20:01.140 --> 01:20:04.350
일반 로봇공학에서 놀라운 혁신이 이루어졌습니다.

01:20:04.350 --> 01:20:05.640
이제, 일반 로봇공학이

01:20:05.640 --> 01:20:09.060
매우 중요한 것은 트랙이 있는 로봇입니다.

01:20:09.060 --> 01:20:13.590
그리고 바퀴는 이를 수용하기
위해 특수한 환경이 필요합니다.

01:20:13.590 --> 01:20:17.580
세상에는 로봇이 세 대 있다, 로봇이 세 대 있다

01:20:17.580 --> 01:20:22.140
우리는 녹지가 필요 없는 것을 만들 수 있습니다.

01:20:22.140 --> 01:20:24.663
브라운필드적 적응은 완벽합니다.

01:20:25.620 --> 01:20:28.320
만약 우리가 이 놀라운 로봇을 만들 수 있다면,

01:20:28.320 --> 01:20:30.600
우리는 그것들을 정확히 전 세계에 배치할 수 있습니다

01:20:30.600 --> 01:20:32.460
우리가 우리 자신을 위해 만든 것입니다.

01:20:32.460 --> 01:20:35.370
이 세 로봇은 하나입니다.

01:20:35.370 --> 01:20:38.280
에이전트 로봇과 에이전트 AI,

01:20:38.280 --> 01:20:40.470
아시다시피 그들은 정보 근로자이거든요.

01:20:40.470 --> 01:20:42.870
그들이 컴퓨터를 수용할 수 있는 한

01:20:42.870 --> 01:20:45.360
우리 사무실에 설치하면 좋을 것 같아요.

01:20:45.360 --> 01:20:47.790
두 번째는 자율주행 자동차입니다.

01:20:47.790 --> 01:20:50.460
그 이유는 우리가 100년 이상을 보냈기 때문입니다.

01:20:50.460 --> 01:20:52.770
도로와 도시 건설,

01:20:52.770 --> 01:20:55.170
그리고 세 번째는 인간형 로봇입니다.

01:20:55.170 --> 01:20:58.920
만약 우리가 이 세 가지를 해결할
수 있는 기술을 가지고 있다면,

01:20:58.920 --> 01:21:01.350
이것은 가장 큰 기술 산업이 될 것입니다

01:21:01.350 --> 01:21:03.270
세상에서 가장 아름다운 것.

01:21:03.270 --> 01:21:08.270
그래서 우리는 로봇 시대가 바로
코앞에 다가왔다고 생각합니다.

01:21:08.520 --> 01:21:13.140
중요한 역량은 로봇을 어떻게 훈련시키느냐는 것이다.

01:21:13.140 --> 01:21:14.793
인간형 로봇의 경우,

01:21:15.720 --> 01:21:19.860
모방에 대한 정보는 수집하기가 다소 어렵다.

01:21:19.860 --> 01:21:21.540
그 이유는 다음과 같습니다.

01:21:21.540 --> 01:21:23.070
자동차의 경우 그냥 운전하면 됩니다.

01:21:23.070 --> 01:21:24.690
우리는 항상 자동차를 운전하고 있어요.

01:21:24.690 --> 01:21:26.850
이러한 인간형 로봇의 경우,

01:21:26.850 --> 01:21:28.320
모방 정보

01:21:28.320 --> 01:21:31.890
인간이 직접 시연하는 것은 매우 힘들다.

01:21:31.890 --> 01:21:36.030
그래서 우리는 수백 가지를 가져갈 수
있는 영리한 방법을 생각해내야 합니다.

01:21:36.030 --> 01:21:39.480
시위의 수, 수천 개의 인간 시위,

01:21:39.480 --> 01:21:42.390
그리고 어떻게든 인공지능을 써서

01:21:42.390 --> 01:21:47.290
그리고 Omniverse는 수백만
달러를 합성적으로 생성합니다.

01:21:48.571 --> 01:21:53.571
합성적으로 생성된 동작.

01:21:54.960 --> 01:21:58.470
그리고 이러한 동작을 통해 AI는 학습할 수 있습니다.

01:21:58.470 --> 01:21:59.640
작업을 수행하는 방법.

01:21:59.640 --> 01:22:01.240
그 방법을 보여드리겠습니다.

01:22:12.510 --> 01:22:13.920
<v 아나운서 7>전 세계 개발자 여러분</v>

01:22:13.920 --> 01:22:15.180
다음 물결을 만들고 있습니다

01:22:15.180 --> 01:22:18.933
물리적 AI를 구현한 로봇, 휴머노이드.

01:22:19.890 --> 01:22:23.010
일반 목적 로봇 모델을 개발하려면 다음이 필요합니다.

01:22:23.010 --> 01:22:26.460
비용이 많이 드는 엄청난 양의 실제 세계 데이터

01:22:26.460 --> 01:22:27.783
포착하고 정리합니다.

01:22:28.920 --> 01:22:32.070
NVIDIA Isaac GR00T는 이러한
과제를 해결하는 데 도움이 됩니다.

01:22:32.070 --> 01:22:34.110
휴머노이드 로봇 개발자 제공

01:22:34.110 --> 01:22:37.173
4가지로 구성된 로봇 기초 모델,

01:22:38.250 --> 01:22:42.123
데이터 파이프라인, 시뮬레이션 프레임워크

01:22:43.350 --> 01:22:45.423
그리고 토르 로봇 컴퓨터.

01:22:47.640 --> 01:22:49.740
NVIDIA Isaac GR00T 청사진

01:22:49.740 --> 01:22:53.550
합성 모션 생성을 위한 시뮬레이션 워크플로입니다.

01:22:53.550 --> 01:22:56.250
모방 학습을 위해 개발자를 지원합니다.

01:22:56.250 --> 01:22:59.190
기하급수적으로 큰 데이터 세트를 생성하려면

01:22:59.190 --> 01:23:02.460
소수의 인간 시범을 통해.

01:23:02.460 --> 01:23:06.690
첫째, GR00T-Teleop은 숙련된
인간 근로자를 지원합니다.

01:23:06.690 --> 01:23:08.760
디지털 트윈으로 포털로 이동

01:23:08.760 --> 01:23:11.253
Apple Vision Pro를 사용하여
로봇을 조종하는 모습입니다.

01:23:12.690 --> 01:23:14.730
이는 운영자가 데이터를 캡처할 수 있음을 의미합니다.

01:23:14.730 --> 01:23:16.620
물리적인 로봇이 없더라도

01:23:16.620 --> 01:23:18.030
그리고 그들은 로봇을 조작할 수 있습니다

01:23:18.030 --> 01:23:21.120
위험 없는 환경에서 기회를 제거합니다.

01:23:21.120 --> 01:23:23.103
물리적 손상이나 마모.

01:23:25.200 --> 01:23:27.510
로봇에게 단일 작업을 가르치려면,

01:23:27.510 --> 01:23:30.600
운영자는 소수의 사람을 통해 동작 궤적을 포착합니다.

01:23:30.600 --> 01:23:34.680
원격 조작 시연의 경우 GR00T-Mimic을 사용하세요.

01:23:34.680 --> 01:23:38.403
이러한 궤적을 훨씬 더 큰 데이터 세트로 곱합니다.

01:23:40.230 --> 01:23:43.530
다음으로, Omniverse를 기반으로
구축된 GR00T-Gen을 사용합니다.

01:23:43.530 --> 01:23:46.290
그리고 도메인 무작위화를 위한 Cosmos

01:23:46.290 --> 01:23:48.213
3D에서 실제 업스케일링으로,

01:23:49.770 --> 01:23:52.773
기하급수적으로 더 큰 데이터 세트를 생성합니다.

01:23:55.020 --> 01:23:58.530
Omniverse 및 Cosmos 멀티버스 시뮬레이션 엔진

01:23:58.530 --> 01:24:01.200
대규모로 확장된 데이터 세트를 제공합니다

01:24:01.200 --> 01:24:02.943
로봇 정책을 훈련합니다.

01:24:04.260 --> 01:24:05.970
정책이 훈련되면,

01:24:05.970 --> 01:24:09.390
개발자는 루프 테스트를 통해
소프트웨어를 수행할 수 있습니다.

01:24:09.390 --> 01:24:11.520
그리고 Isaac Sim에서의 검증

01:24:11.520 --> 01:24:13.593
실제 로봇에 배치되기 전에.

01:24:15.630 --> 01:24:18.330
일반 로봇 시대가 도래하고 있습니다.

01:24:18.330 --> 01:24:20.163
NVIDIA Isaac GR00T로 구동됩니다.

01:24:25.050 --> 01:24:27.950
<v ->우리는 로봇을 훈련할 수 있는
엄청난 양의 데이터를 갖게 될 거예요.</v>

01:24:30.780 --> 01:24:34.260
엔비디아 아이작 GR00T, 엔비디아 아이작 GR00T.

01:24:34.260 --> 01:24:37.050
이것은 우리가 기술을 제공하는 플랫폼입니다.

01:24:37.050 --> 01:24:40.170
로봇 산업에 플랫폼 기술 요소를 도입하다

01:24:40.170 --> 01:24:43.290
일반 로봇공학의 개발을 가속화합니다.

01:24:43.290 --> 01:24:47.826
그리고, 보여드리고 싶은 게 하나 더 있어요.

01:24:47.826 --> 01:24:50.400
이 중 어느 것도 가능하지 않을 것입니다

01:24:50.400 --> 01:24:53.430
이 놀라운 프로젝트가 없었다면

01:24:53.430 --> 01:24:56.220
우리는 10년 전쯤에 시작했습니다.

01:24:56.220 --> 01:25:00.120
회사 내부에서는 Project DIGITS라고 불렸는데,

01:25:00.120 --> 01:25:05.120
딥러닝 GPU 지능 훈련 시스템, DIGITS.

01:25:07.410 --> 01:25:09.813
우리가 그것을 출시하기 훨씬 전에,

01:25:11.070 --> 01:25:14.580
DGX로 축소하고 조화시키려고 했습니다.

01:25:14.580 --> 01:25:19.387
RTX, AGX, OVX를 사용하여

01:25:19.387 --> 01:25:21.935
그리고 우리 회사에 있는 다른 모든 X도요.

01:25:21.935 --> 01:25:26.935
그리고 그것은 정말 혁명적이었습니다.

01:25:27.030 --> 01:25:30.927
DGX-1은 정말 혁명적이었습니다.
DGX-1은 어디에 있나요?

01:25:30.927 --> 01:25:35.010
DGX-1은 인공지능에 혁명을 일으켰습니다.

01:25:35.010 --> 01:25:36.990
우리가 그것을 만든 이유는

01:25:36.990 --> 01:25:40.440
연구자들이 이를 가능하게 만들고 싶었기 때문입니다.

01:25:40.440 --> 01:25:44.010
그리고 스타트업들은 획기적인 AI
슈퍼컴퓨터를 보유하게 되었습니다.

01:25:44.010 --> 01:25:46.620
과거에 슈퍼컴퓨터가 만들어진 방식을 상상해 보세요.

01:25:46.620 --> 01:25:49.380
당신은 정말로 자신의 시설을 건설해야합니다

01:25:49.380 --> 01:25:51.240
그리고 당신은 당신 자신의 인프라를 구축해야 합니다

01:25:51.240 --> 01:25:53.790
그리고 그것을 실제로 존재하게 만들었습니다.

01:25:53.790 --> 01:25:56.670
그래서 우리는 AI를 위한 슈퍼컴퓨터를 만들었습니다.

01:25:56.670 --> 01:25:59.130
AI 개발, 연구자, 스타트업을 위한.

01:25:59.130 --> 01:26:01.380
그건 말 그대로 상자에서 나온 거예요.

01:26:01.380 --> 01:26:03.510
첫번째는 스타트업 회사에 전달했어요

01:26:03.510 --> 01:26:06.480
2016년에 OpenAI라고 불리는

01:26:06.480 --> 01:26:09.030
그리고 Elon도 거기에 있었고 Ilia
Sutskever도 거기에 있었습니다.

01:26:09.030 --> 01:26:12.184
그리고 NVIDIA 엔지니어 중
다수가 그 자리에 있었습니다.

01:26:12.184 --> 01:26:15.420
그리고 우리는 DGX-1의 도착을 축하했습니다.

01:26:15.420 --> 01:26:20.420
그리고 그것은 분명히 인공지능에 혁명을 일으켰습니다.

01:26:20.670 --> 01:26:22.260
그리고 컴퓨팅.

01:26:22.260 --> 01:26:24.330
하지만 이제 인공지능은 어디에나 있습니다.

01:26:24.330 --> 01:26:27.630
이것은 연구자나 스타트업
연구실에서만 가능한 일이 아닙니다.

01:26:27.630 --> 01:26:29.250
아시죠, 우리는 인공지능을 원해요.

01:26:29.250 --> 01:26:31.260
제가 이야기의 시작 부분에서 언급했듯이,

01:26:31.260 --> 01:26:33.570
이는 이제 컴퓨팅을 수행하는 새로운 방식입니다.

01:26:33.570 --> 01:26:35.310
이는 소프트웨어를 만드는 새로운 방법입니다.

01:26:35.310 --> 01:26:37.320
모든 소프트웨어 엔지니어, 모든 엔지니어,

01:26:37.320 --> 01:26:42.320
모든 창의적인 예술가, 오늘날 컴퓨터를 사용하는 모든 사람

01:26:42.330 --> 01:26:46.560
도구로는 AI 슈퍼컴퓨터가 필요합니다.

01:26:46.560 --> 01:26:51.560
그래서 저는 DGX-1이 더 작았으면 좋겠다고 바랐습니다.

01:26:51.930 --> 01:26:56.930
그리고, 알다시피, 알다시피, 상상해보세요

01:27:01.920 --> 01:27:02.970
신사 숙녀 여러분.

01:27:04.713 --> 01:27:07.713
(청중 박수)

01:27:11.940 --> 01:27:15.573
이것은 NVIDIA의 최신 AI 슈퍼컴퓨터입니다.

01:27:19.867 --> 01:27:23.867
그리고 지금은 이를 '프로젝트
DIGITS'라고 애정 어린 이름으로 부릅니다.

01:27:25.140 --> 01:27:27.753
좋은 이름이 있다면 저희에게 연락해 주세요.

01:27:30.750 --> 01:27:33.120
놀라운 점은 이것이 AI 슈퍼컴퓨터라는 점입니다.

01:27:33.120 --> 01:27:36.033
NVIDIA AI 스택 전체를 실행합니다.

01:27:37.680 --> 01:27:40.170
모든 NVIDIA 소프트웨어는 이것에 기반하여 실행됩니다.

01:27:40.170 --> 01:27:45.170
DGX Cloud는 이것에 실행되며 여기에 있습니다.

01:27:45.270 --> 01:27:47.130
글쎄 어딘가에 있고 무선이야

01:27:47.130 --> 01:27:49.230
또는 컴퓨터에 연결되어 있다는 뜻이죠.

01:27:49.230 --> 01:27:51.510
원한다면 워크스테이션으로도 쓸 수 있습니다.

01:27:51.510 --> 01:27:54.868
그리고 당신은 그것에 접근할 수 있었습니다.
당신은 그것에 도달할 수 있었습니다.

01:27:54.868 --> 01:27:57.810
클라우드 슈퍼컴퓨터와 같습니다.

01:27:57.810 --> 01:28:00.180
그리고 NVIDIA의 AI가 이를 위해 작동합니다.

01:28:00.180 --> 01:28:03.300
그리고 그것은 최고로 비밀스러운 칩을 기반으로 합니다.

01:28:03.300 --> 01:28:06.630
우리가 작업하고 있는 GB110이라는 것인데요.

01:28:06.630 --> 01:28:09.990
우리가 만드는 가장 작은 그레이스 블랙웰입니다.

01:28:09.990 --> 01:28:11.850
그리고 저는, 글쎄요, 아시죠?

01:28:11.850 --> 01:28:13.593
모두에게 안을 보여드리죠.

01:28:40.650 --> 01:28:43.920
이거 정말 귀엽지 않나요?

01:28:43.920 --> 01:28:45.670
그리고 이게 안에 있는 칩이에요.

01:28:48.120 --> 01:28:50.190
현재 생산 중입니다.

01:28:50.190 --> 01:28:53.580
우리가 협업해서 만든 이 극비 칩은

01:28:53.580 --> 01:28:58.560
CPU, Grace CPU는
NVIDIA를 위해 제작되었습니다.

01:28:58.560 --> 01:29:01.260
MediaTek과 협력하여.

01:29:01.260 --> 01:29:03.600
그들은 세계를 선도하는 SOC 기업입니다.

01:29:03.600 --> 01:29:05.490
그리고 그들은 우리와 함께 이 CPU를 만들었습니다.

01:29:05.490 --> 01:29:10.020
이 CPU SOC를 칩 대 칩 NVLink로 연결합니다.

01:29:10.020 --> 01:29:12.570
Blackwell GPU에.

01:29:12.570 --> 01:29:17.570
그리고 여기 이 작은 것은 현재 생산 중입니다.

01:29:17.580 --> 01:29:21.720
이 컴퓨터가 사용 가능할 것으로 예상합니다.

01:29:21.720 --> 01:29:23.520
5월경입니다.

01:29:23.520 --> 01:29:25.350
그리고 그것이 당신에게 다가오고 있습니다.

01:29:25.350 --> 01:29:27.510
우리가 무엇을 할 수 있는지 정말 놀랍습니다.

01:29:27.510 --> 01:29:30.813
그리고 그것은 그냥, 나는 그것이 당신이 정말로,

01:29:33.570 --> 01:29:34.500
나는 알아내려고 노력하고 있었다

01:29:34.500 --> 01:29:36.350
손이 더 필요한가, 아니면 주머니가 더 필요한가?

01:29:37.410 --> 01:29:41.013
좋습니다. 이것이 어떤 모습일지 상상해보세요.

01:29:42.690 --> 01:29:45.090
아시죠, 이런 걸 원하지 않는 사람이 누가 있겠어요?

01:29:45.090 --> 01:29:49.800
그리고 PC, Mac을 사용한다면,

01:29:49.800 --> 01:29:50.700
너는 뭐든 알잖아,

01:29:51.960 --> 01:29:55.356
아시다시피, 그게 클라우드 플랫폼이거든요.

01:29:55.356 --> 01:29:57.030
이는 책상 위에 놓이는 클라우드 컴퓨팅 플랫폼입니다.

01:29:57.030 --> 01:30:00.390
원한다면 Linux 워크스테이션으로도 사용할 수 있습니다.

01:30:00.390 --> 01:30:03.630
두자리 숫자를 원하시면,

01:30:03.630 --> 01:30:04.980
이것이 그 모습입니다.

01:30:06.000 --> 01:30:11.000
그리고 Connect X로 연결해 주세요

01:30:11.040 --> 01:30:15.300
그리고 니켈, GPU Direct가 있습니다.

01:30:15.300 --> 01:30:16.920
이 모든 것이 상자에서 꺼내졌습니다.

01:30:16.920 --> 01:30:18.090
마치 슈퍼컴퓨터와 같습니다.

01:30:18.090 --> 01:30:21.600
우리의 슈퍼컴퓨팅 스택 전체를 이용할 수 있습니다.

01:30:21.600 --> 01:30:24.993
이것이 NVIDIA Project
DIGITS의 시작입니다.

01:30:26.299 --> 01:30:29.299
(청중 박수)

01:30:34.007 --> 01:30:38.310
좋아요, 제가 말한 내용을 말씀드리겠습니다.

01:30:38.310 --> 01:30:41.130
우리가 생산 중이라고 말했잖아

01:30:41.130 --> 01:30:44.760
새로운 블랙웰 3개 포함.

01:30:44.760 --> 01:30:47.670
그레이스 블랙웰은 슈퍼컴퓨터일 뿐만 아니라,

01:30:47.670 --> 01:30:50.490
NVLink 72는 전 세계적으로 생산되고 있습니다.

01:30:50.490 --> 01:30:55.110
현재 우리는 3개의 새로운 블랙웰
시스템을 생산하고 있습니다.

01:30:55.110 --> 01:31:00.110
놀라운 AI 기반, 세계 기반 모델입니다.

01:31:00.330 --> 01:31:03.870
세계 최초의 물리적 AI 기반 모델이 공개됐다.

01:31:03.870 --> 01:31:07.680
세계 로봇 산업 활성화에 활용 가능

01:31:07.680 --> 01:31:10.680
그리고 그런 것들, 그리고 세 가지,

01:31:10.680 --> 01:31:15.680
그리고 3개의 로봇, 에이전트
AI에서 작업하는 3개의 로봇,

01:31:16.350 --> 01:31:18.483
인간형 로봇과 자율주행 자동차.

01:31:20.100 --> 01:31:21.720
올해는 정말 놀라운 한 해였습니다.

01:31:21.720 --> 01:31:23.910
여러분 모두의 협력에 감사드리고 싶습니다.

01:31:23.910 --> 01:31:25.200
여러분 모두 참석해 주셔서 감사합니다.

01:31:25.200 --> 01:31:27.660
저는 당신이 작년을 돌아볼 수
있도록 짧은 영상을 만들었습니다.

01:31:27.660 --> 01:31:30.047
그리고 내년도 기대하겠습니다. 많이 놀아주세요.

01:31:41.851 --> 01:31:44.601
(극적인 음악)

01:32:15.481 --> 01:32:19.064
(극적인 음악이 계속됩니다)

01:32:44.679 --> 01:32:48.262
(극적인 음악이 계속됩니다)

01:33:15.594 --> 01:33:19.177
(극적인 음악이 계속됩니다)

01:33:46.279 --> 01:33:49.862
(극적인 음악이 계속됩니다)

01:34:14.101 --> 01:34:17.684
(극적인 음악이 계속됩니다)

01:34:21.326 --> 01:34:25.909
모두들 즐거운 CES를 보내시고,
새해 복 많이 받으세요. 감사합니다.

01:34:31.642 --> 01:34:34.225
(경쾌한 음악)

