WEBVTT Kind: captions Language: en 00:00:01.589 --> 00:00:01.599 align:start position:0% 00:00:01.599 --> 00:00:03.510 align:start position:0% Many people are interested in data crawling to collect data. 00:00:03.510 --> 00:00:03.520 align:start position:0% Many people are interested in data crawling to collect data. 00:00:03.520 --> 00:00:05.590 align:start position:0% Many people are interested in data crawling to collect data. In fact, in cases where an 00:00:05.590 --> 00:00:05.600 align:start position:0% In fact, in cases where an 00:00:05.600 --> 00:00:08.150 align:start position:0% In fact, in cases where an official API is provided directly by a service like YouTube, it is 00:00:08.150 --> 00:00:10.310 align:start position:0% official API is provided directly by a service like YouTube, it is 00:00:10.310 --> 00:00:10.320 align:start position:0% 00:00:10.320 --> 00:00:12.870 align:start position:0% more stable and 00:00:12.870 --> 00:00:12.880 align:start position:0% more stable and 00:00:12.880 --> 00:00:14.869 align:start position:0% more stable and easy to obtain accurate data by utilizing the official API for data crawling. 00:00:14.869 --> 00:00:14.879 align:start position:0% easy to obtain accurate data by utilizing the official API for data crawling. 00:00:14.879 --> 00:00:17.349 align:start position:0% easy to obtain accurate data by utilizing the official API for data crawling. Make helps you 00:00:17.349 --> 00:00:17.359 align:start position:0% Make helps you 00:00:17.359 --> 00:00:19.950 align:start position:0% Make helps you easily connect by utilizing the API module, 00:00:19.950 --> 00:00:19.960 align:start position:0% easily connect by utilizing the API module, 00:00:19.960 --> 00:00:21.910 align:start position:0% easily connect by utilizing the API module, but this 00:00:21.910 --> 00:00:21.920 align:start position:0% but this 00:00:21.920 --> 00:00:24.189 align:start position:0% but this module is not supported for all APIs. 00:00:24.189 --> 00:00:24.199 align:start position:0% module is not supported for all APIs. 00:00:24.199 --> 00:00:26.269 align:start position:0% module is not supported for all APIs. So today, we will 00:00:26.269 --> 00:00:28.550 align:start position:0% So today, we will 00:00:28.550 --> 00:00:31.390 align:start position:0% 00:00:31.390 --> 00:00:33.389 align:start position:0% 00:00:33.389 --> 00:00:33.399 align:start position:0% 00:00:33.399 --> 00:00:35.549 align:start position:0% look at how to collect all video data on a YouTube channel for free without coding by utilizing the official YouTube API in Make. If you 00:00:35.549 --> 00:00:35.559 align:start position:0% look at how to collect all video data on a YouTube channel for free without coding by utilizing the official YouTube API in Make. If you 00:00:35.559 --> 00:00:37.350 align:start position:0% look at how to collect all video data on a YouTube channel for free without coding by utilizing the official YouTube API in Make. If you want to collect YouTube data for free or 00:00:37.350 --> 00:00:39.790 align:start position:0% want to collect YouTube data for free or 00:00:39.790 --> 00:00:39.800 align:start position:0% 00:00:39.800 --> 00:00:42.029 align:start position:0% want to use the API of another service that does not provide a module in Make, I recommend 00:00:42.029 --> 00:00:42.039 align:start position:0% want to use the API of another service that does not provide a module in Make, I recommend 00:00:42.039 --> 00:00:44.029 align:start position:0% want to use the API of another service that does not provide a module in Make, I recommend watching the video until the end and 00:00:44.029 --> 00:00:44.039 align:start position:0% watching the video until the end and 00:00:44.039 --> 00:00:46.310 align:start position:0% watching the video until the end and applying it to your own system. 00:00:46.310 --> 00:00:46.320 align:start position:0% applying it to your own system. 00:00:46.320 --> 00:00:48.150 align:start position:0% applying it to your own system. Previously, I introduced a method to collect 00:00:48.150 --> 00:00:48.160 align:start position:0% Previously, I introduced a method to collect 00:00:48.160 --> 00:00:50.549 align:start position:0% Previously, I introduced a method to collect YouTube data by utilizing the surve API file. 00:00:50.549 --> 00:00:52.270 align:start position:0% YouTube data by utilizing the surve API file. 00:00:52.270 --> 00:00:52.280 align:start position:0% 00:00:52.280 --> 00:00:54.029 align:start position:0% These 00:00:54.029 --> 00:00:54.039 align:start position:0% These 00:00:54.039 --> 00:00:56.310 align:start position:0% These services are not provided directly by YouTube, 00:00:56.310 --> 00:00:56.320 align:start position:0% services are not provided directly by YouTube, 00:00:56.320 --> 00:00:58.349 align:start position:0% services are not provided directly by YouTube, but rather by a third party that 00:00:58.349 --> 00:00:58.359 align:start position:0% but rather by a third party that 00:00:58.359 --> 00:01:01.630 align:start position:0% but rather by a third party that collects YouTube data on your behalf and provides it in the form of an API. 00:01:01.630 --> 00:01:01.640 align:start position:0% collects YouTube data on your behalf and provides it in the form of an API. 00:01:01.640 --> 00:01:04.429 align:start position:0% collects YouTube data on your behalf and provides it in the form of an API. Here, the API is 00:01:04.429 --> 00:01:04.439 align:start position:0% Here, the API is 00:01:04.439 --> 00:01:06.510 align:start position:0% Here, the API is simply an 00:01:06.510 --> 00:01:06.520 align:start position:0% simply an 00:01:06.520 --> 00:01:08.910 align:start position:0% simply an official manual that defines how we communicate with a service. 00:01:08.910 --> 00:01:08.920 align:start position:0% official manual that defines how we communicate with a service. 00:01:08.920 --> 00:01:10.950 align:start position:0% official manual that defines how we communicate with a service. So if you 00:01:10.950 --> 00:01:10.960 align:start position:0% So if you 00:01:10.960 --> 00:01:12.789 align:start position:0% So if you follow this manual, you can 00:01:12.789 --> 00:01:12.799 align:start position:0% follow this manual, you can 00:01:12.799 --> 00:01:15.149 align:start position:0% follow this manual, you can read, create, update, or 00:01:15.149 --> 00:01:15.159 align:start position:0% read, create, update, or 00:01:15.159 --> 00:01:17.109 align:start position:0% read, create, update, or delete data. In particular, 00:01:17.109 --> 00:01:17.119 align:start position:0% delete data. In particular, 00:01:17.119 --> 00:01:19.590 align:start position:0% delete data. In particular, when collecting data, you can 00:01:19.590 --> 00:01:19.600 align:start position:0% when collecting data, you can 00:01:19.600 --> 00:01:21.950 align:start position:0% when collecting data, you can collect and store data by utilizing the API method called gay. 00:01:21.950 --> 00:01:23.630 align:start position:0% collect and store data by utilizing the API method called gay. 00:01:23.630 --> 00:01:23.640 align:start position:0% 00:01:23.640 --> 00:01:26.990 align:start position:0% Services like YouTube The official API is also 00:01:26.990 --> 00:01:27.000 align:start position:0% Services like YouTube The official API is also 00:01:27.000 --> 00:01:28.870 align:start position:0% Services like YouTube The official API is also provided free of charge to general users, so if you 00:01:28.870 --> 00:01:28.880 align:start position:0% provided free of charge to general users, so if you 00:01:28.880 --> 00:01:30.950 align:start position:0% provided free of charge to general users, so if you use this API, you can 00:01:30.950 --> 00:01:30.960 align:start position:0% use this API, you can 00:01:30.960 --> 00:01:32.990 align:start position:0% use this API, you can collect and use data for free within the allocated quota. 00:01:32.990 --> 00:01:34.910 align:start position:0% collect and use data for free within the allocated quota. 00:01:34.910 --> 00:01:37.230 align:start position:0% 00:01:37.230 --> 00:01:37.240 align:start position:0% 00:01:37.240 --> 00:01:39.510 align:start position:0% Unless you collect a huge amount of data that exceeds the quota, it is more stable and efficient to use this official API than the web crawling method. The 00:01:39.510 --> 00:01:41.389 align:start position:0% Unless you collect a huge amount of data that exceeds the quota, it is more stable and efficient to use this official API than the web crawling method. The 00:01:41.389 --> 00:01:43.510 align:start position:0% 00:01:43.510 --> 00:01:43.520 align:start position:0% 00:01:43.520 --> 00:01:45.469 align:start position:0% API provided by YouTube is largely 00:01:45.469 --> 00:01:45.479 align:start position:0% API provided by YouTube is largely 00:01:45.479 --> 00:01:47.190 align:start position:0% API provided by YouTube is largely divided into two types. First, if you 00:01:47.190 --> 00:01:47.200 align:start position:0% divided into two types. First, if you 00:01:47.200 --> 00:01:49.350 align:start position:0% divided into two types. First, if you access YouTube, 00:01:49.350 --> 00:01:49.360 align:start position:0% access YouTube, 00:01:49.360 --> 00:01:51.590 align:start position:0% access YouTube, there is public data that anyone can check, and private data that 00:01:51.590 --> 00:01:51.600 align:start position:0% there is public data that anyone can check, and private data that 00:01:51.600 --> 00:01:53.950 align:start position:0% there is public data that anyone can check, and private data that only those who operate or manage the channel can see. 00:01:53.950 --> 00:01:53.960 align:start position:0% only those who operate or manage the channel can see. 00:01:53.960 --> 00:01:56.109 align:start position:0% only those who operate or manage the channel can see. Public 00:01:56.109 --> 00:01:56.119 align:start position:0% Public 00:01:56.119 --> 00:01:58.429 align:start position:0% Public data can be accessed with YouTube Data API Version 00:01:58.429 --> 00:01:58.439 align:start position:0% data can be accessed with YouTube Data API Version 00:01:58.439 --> 00:02:00.670 align:start position:0% data can be accessed with YouTube Data API Version 3. 00:02:00.670 --> 00:02:00.680 align:start position:0% 3. 00:02:00.680 --> 00:02:02.950 align:start position:0% 3. If you use this, there is public data on the channel. If 00:02:02.950 --> 00:02:02.960 align:start position:0% If you use this, there is public data on the channel. If 00:02:02.960 --> 00:02:04.510 align:start position:0% If you use this, there is public data on the channel. If we go to a specific channel on YouTube, we can check the 00:02:04.510 --> 00:02:04.520 align:start position:0% we go to a specific channel on YouTube, we can check the 00:02:04.520 --> 00:02:06.830 align:start position:0% we go to a specific channel on YouTube, we can check the video list, the title, the number of views, the 00:02:06.830 --> 00:02:06.840 align:start position:0% video list, the title, the number of views, the 00:02:06.840 --> 00:02:09.389 align:start position:0% video list, the title, the number of views, the number of comments, and the content of the comments. 00:02:09.389 --> 00:02:09.399 align:start position:0% number of comments, and the content of the comments. 00:02:09.399 --> 00:02:10.830 align:start position:0% number of comments, and the content of the comments. So the 00:02:10.830 --> 00:02:10.840 align:start position:0% So the 00:02:10.840 --> 00:02:13.309 align:start position:0% So the API that allows you to access such information is 00:02:13.309 --> 00:02:13.319 align:start position:0% API that allows you to access such information is 00:02:13.319 --> 00:02:15.350 align:start position:0% API that allows you to access such information is YouTube Data API Version 3. 00:02:15.350 --> 00:02:15.360 align:start position:0% YouTube Data API Version 3. 00:02:15.360 --> 00:02:17.309 align:start position:0% YouTube Data API Version 3. On the other hand, private data can be accessed using the YouTube 00:02:17.309 --> 00:02:17.319 align:start position:0% On the other hand, private data can be accessed using the YouTube 00:02:17.319 --> 00:02:19.869 align:start position:0% On the other hand, private data can be accessed using the YouTube Analytics API, YouTube Reporting API. If you use this 00:02:19.869 --> 00:02:21.750 align:start position:0% Analytics API, YouTube Reporting API. If you use this 00:02:21.750 --> 00:02:21.760 align:start position:0% 00:02:21.760 --> 00:02:23.710 align:start position:0% YouTube Analytics API, there are indicators that 00:02:23.710 --> 00:02:23.720 align:start position:0% YouTube Analytics API, there are indicators that 00:02:23.720 --> 00:02:26.150 align:start position:0% YouTube Analytics API, there are indicators that only the channel owner or manager 00:02:26.150 --> 00:02:26.160 align:start position:0% only the channel owner or manager 00:02:26.160 --> 00:02:27.949 align:start position:0% only the channel owner or manager can see. The 00:02:27.949 --> 00:02:27.959 align:start position:0% can see. The 00:02:27.959 --> 00:02:30.670 align:start position:0% can see. The number of shares of the video, the viewing time, the increase or decrease in the number of subscribers, 00:02:30.670 --> 00:02:30.680 align:start position:0% number of shares of the video, the viewing time, the increase or decrease in the number of subscribers, 00:02:30.680 --> 00:02:32.869 align:start position:0% number of shares of the video, the viewing time, the increase or decrease in the number of subscribers, and now you can cut the number of views by period and 00:02:32.869 --> 00:02:32.879 align:start position:0% and now you can cut the number of views by period and 00:02:32.879 --> 00:02:34.270 align:start position:0% and now you can cut the number of views by period and see them again. So 00:02:34.270 --> 00:02:34.280 align:start position:0% see them again. So 00:02:34.280 --> 00:02:36.390 align:start position:0% see them again. So if you want to see such information, you can actually see it 00:02:36.390 --> 00:02:36.400 align:start position:0% if you want to see such information, you can actually see it 00:02:36.400 --> 00:02:38.830 align:start position:0% if you want to see such information, you can actually see it on the channel. If you have permission, you can use this YouTube 00:02:38.830 --> 00:02:38.840 align:start position:0% on the channel. If you have permission, you can use this YouTube 00:02:38.840 --> 00:02:40.869 align:start position:0% on the channel. If you have permission, you can use this YouTube Analytics API to 00:02:40.869 --> 00:02:40.879 align:start position:0% Analytics API to 00:02:40.879 --> 00:02:42.990 align:start position:0% Analytics API to collect information in YouTube Studio. 00:02:42.990 --> 00:02:45.149 align:start position:0% collect information in YouTube Studio. 00:02:45.149 --> 00:02:47.390 align:start position:0% 00:02:47.390 --> 00:02:47.400 align:start position:0% 00:02:47.400 --> 00:02:49.990 align:start position:0% Since the information provided by the YouTube API is so vast, these APIs are usually 00:02:49.990 --> 00:02:52.470 align:start position:0% Since the information provided by the YouTube API is so vast, these APIs are usually 00:02:52.470 --> 00:02:52.480 align:start position:0% 00:02:52.480 --> 00:02:54.910 align:start position:0% categorized according to the classification of the information they provide, called endpoints, and a 00:02:54.910 --> 00:02:57.190 align:start position:0% categorized according to the classification of the information they provide, called endpoints, and a 00:02:57.190 --> 00:02:57.200 align:start position:0% 00:02:57.200 --> 00:02:59.190 align:start position:0% separate address that can be accessed for each category is specified. 00:02:59.190 --> 00:02:59.200 align:start position:0% separate address that can be accessed for each category is specified. 00:02:59.200 --> 00:03:00.430 align:start position:0% separate address that can be accessed for each category is specified. So that's why they're now 00:03:00.430 --> 00:03:00.440 align:start position:0% So that's why they're now 00:03:00.440 --> 00:03:02.110 align:start position:0% So that's why they're now called endpoints. If you look at this public 00:03:02.110 --> 00:03:02.120 align:start position:0% called endpoints. If you look at this public 00:03:02.120 --> 00:03:04.070 align:start position:0% called endpoints. If you look at this public data YouTube data API version 00:03:04.070 --> 00:03:04.080 align:start position:0% data YouTube data API version 00:03:04.080 --> 00:03:06.110 align:start position:0% data YouTube data API version 3, the endpoints are divided into channels, playlist 00:03:06.110 --> 00:03:06.120 align:start position:0% 3, the endpoints are divided into channels, playlist 00:03:06.120 --> 00:03:07.869 align:start position:0% 3, the endpoints are divided into channels, playlist items, videos, Search, 00:03:07.869 --> 00:03:07.879 align:start position:0% items, videos, Search, 00:03:07.879 --> 00:03:09.350 align:start position:0% items, videos, Search, com, threads, and comments. 00:03:09.350 --> 00:03:11.390 align:start position:0% com, threads, and comments. 00:03:11.390 --> 00:03:13.110 align:start position:0% 00:03:13.110 --> 00:03:13.120 align:start position:0% 00:03:13.120 --> 00:03:14.949 align:start position:0% As you can see from this keyword, if it's channel information, you 00:03:14.949 --> 00:03:14.959 align:start position:0% As you can see from this keyword, if it's channel information, you 00:03:14.959 --> 00:03:16.470 align:start position:0% As you can see from this keyword, if it's channel information, you have to find it in the channel. Playlist information is a 00:03:16.470 --> 00:03:16.480 align:start position:0% have to find it in the channel. Playlist information is a 00:03:16.480 --> 00:03:18.270 align:start position:0% have to find it in the channel. Playlist information is a playlist item, and video information is a 00:03:18.270 --> 00:03:18.280 align:start position:0% playlist item, and video information is a 00:03:18.280 --> 00:03:20.710 align:start position:0% playlist item, and video information is a video. It provides data by dividing it into these categories. 00:03:20.710 --> 00:03:20.720 align:start position:0% video. It provides data by dividing it into these categories. 00:03:20.720 --> 00:03:22.630 align:start position:0% video. It provides data by dividing it into these categories. Today, 00:03:22.630 --> 00:03:22.640 align:start position:0% Today, 00:03:22.640 --> 00:03:24.350 align:start position:0% Today, among these various APIs, we'll look at how to collect basic information and indicators of videos by 00:03:24.350 --> 00:03:26.789 align:start position:0% among these various APIs, we'll look at how to collect basic information and indicators of videos by 00:03:26.789 --> 00:03:28.910 align:start position:0% 00:03:28.910 --> 00:03:28.920 align:start position:0% 00:03:28.920 --> 00:03:31.429 align:start position:0% utilizing YouTube data API version 3, which is the most widely available, and using points, chs, playlist 00:03:31.429 --> 00:03:31.439 align:start position:0% utilizing YouTube data API version 3, which is the most widely available, and using points, chs, playlist 00:03:31.439 --> 00:03:32.869 align:start position:0% utilizing YouTube data API version 3, which is the most widely available, and using points, chs, playlist items, videos, and Search. 00:03:32.869 --> 00:03:35.309 align:start position:0% items, videos, and Search. 00:03:35.309 --> 00:03:37.070 align:start position:0% 00:03:37.070 --> 00:03:37.080 align:start position:0% 00:03:37.080 --> 00:03:39.390 align:start position:0% Do you like pop music? 00:03:39.390 --> 00:03:39.400 align:start position:0% Do you like pop music? 00:03:39.400 --> 00:03:41.789 align:start position:0% Do you like pop music? I watched 00:03:41.789 --> 00:03:41.799 align:start position:0% I watched 00:03:41.799 --> 00:03:43.949 align:start position:0% I watched Baby Monster's audition program, which debuted last year, 00:03:43.949 --> 00:03:43.959 align:start position:0% Baby Monster's audition program, which debuted last year, 00:03:43.959 --> 00:03:46.350 align:start position:0% Baby Monster's audition program, which debuted last year, as YouTube content and cheered them on enthusiastically and even 00:03:46.350 --> 00:03:46.360 align:start position:0% as YouTube content and cheered them on enthusiastically and even 00:03:46.360 --> 00:03:48.910 align:start position:0% as YouTube content and cheered them on enthusiastically and even went to their concert recently. 00:03:48.910 --> 00:03:48.920 align:start position:0% went to their concert recently. 00:03:48.920 --> 00:03:50.789 align:start position:0% went to their concert recently. These days, K-pop groups are using 00:03:50.789 --> 00:03:50.799 align:start position:0% These days, K-pop groups are using 00:03:50.799 --> 00:03:53.110 align:start position:0% These days, K-pop groups are using YouTube content in addition to songs and performances. I 00:03:53.110 --> 00:03:55.589 align:start position:0% YouTube content in addition to songs and performances. I 00:03:55.589 --> 00:03:55.599 align:start position:0% 00:03:55.599 --> 00:03:57.509 align:start position:0% think building a fandom and communicating with fans is important. 00:03:57.509 --> 00:03:57.519 align:start position:0% think building a fandom and communicating with fans is important. 00:03:57.519 --> 00:03:59.750 align:start position:0% think building a fandom and communicating with fans is important. So today, I'm going to 00:03:59.750 --> 00:03:59.760 align:start position:0% So today, I'm going to 00:03:59.760 --> 00:04:01.710 align:start position:0% So today, I'm going to use the official YouTube API in Make to collect video data from the 00:04:01.710 --> 00:04:01.720 align:start position:0% use the official YouTube API in Make to collect video data from the 00:04:01.720 --> 00:04:04.069 align:start position:0% use the official YouTube API in Make to collect video data from the official YouTube channel of Baby Monster, which I like. I 00:04:04.069 --> 00:04:06.190 align:start position:0% official YouTube channel of Baby Monster, which I like. I 00:04:06.190 --> 00:04:08.270 align:start position:0% 00:04:08.270 --> 00:04:10.390 align:start position:0% 00:04:10.390 --> 00:04:12.589 align:start position:0% 00:04:12.589 --> 00:04:12.599 align:start position:0% 00:04:12.599 --> 00:04:14.470 align:start position:0% think it would be good if you also choose a YouTube channel you like and follow along to collect data. I'll attach the sheet structure 00:04:14.470 --> 00:04:14.480 align:start position:0% think it would be good if you also choose a YouTube channel you like and follow along to collect data. I'll attach the sheet structure 00:04:14.480 --> 00:04:16.509 align:start position:0% think it would be good if you also choose a YouTube channel you like and follow along to collect data. I'll attach the sheet structure to the video description. 00:04:16.509 --> 00:04:16.519 align:start position:0% to the video description. 00:04:16.519 --> 00:04:18.909 align:start position:0% to the video description. First, if you get YouTube channel data, you 00:04:18.909 --> 00:04:21.069 align:start position:0% First, if you get YouTube channel data, you 00:04:21.069 --> 00:04:21.079 align:start position:0% 00:04:21.079 --> 00:04:23.070 align:start position:0% need to know the channel ID value of the channel. You can actually get this with API 00:04:23.070 --> 00:04:23.080 align:start position:0% need to know the channel ID value of the channel. You can actually get this with API 00:04:23.080 --> 00:04:24.710 align:start position:0% need to know the channel ID value of the channel. You can actually get this with API Pro, but since there are only a few 00:04:24.710 --> 00:04:24.720 align:start position:0% Pro, but since there are only a few 00:04:24.720 --> 00:04:27.230 align:start position:0% Pro, but since there are only a few channels, it's easier to just collect it manually. 00:04:27.230 --> 00:04:27.240 align:start position:0% channels, it's easier to just collect it manually. 00:04:27.240 --> 00:04:29.310 align:start position:0% channels, it's easier to just collect it manually. So I'm 00:04:29.310 --> 00:04:30.950 align:start position:0% So I'm 00:04:30.950 --> 00:04:30.960 align:start position:0% 00:04:30.960 --> 00:04:32.830 align:start position:0% going to tell you how to manually check the ID of a YouTube channel. This 00:04:32.830 --> 00:04:32.840 align:start position:0% going to tell you how to manually check the ID of a YouTube channel. This 00:04:32.840 --> 00:04:35.029 align:start position:0% going to tell you how to manually check the ID of a YouTube channel. This is a good tip. These days, when you 00:04:35.029 --> 00:04:35.039 align:start position:0% is a good tip. These days, when you 00:04:35.039 --> 00:04:37.189 align:start position:0% is a good tip. These days, when you go to a YouTube channel, the channel ID 00:04:37.189 --> 00:04:37.199 align:start position:0% go to a YouTube channel, the channel ID 00:04:37.199 --> 00:04:39.590 align:start position:0% go to a YouTube channel, the channel ID doesn't appear right away. 00:04:39.590 --> 00:04:39.600 align:start position:0% doesn't appear right away. 00:04:39.600 --> 00:04:41.710 align:start position:0% doesn't appear right away. Instead, a 00:04:41.710 --> 00:04:41.720 align:start position:0% Instead, a 00:04:41.720 --> 00:04:43.469 align:start position:0% Instead, a handle related to the channel name, such as @baby monst, appears. 00:04:43.469 --> 00:04:43.479 align:start position:0% handle related to the channel name, such as @baby monst, appears. 00:04:43.479 --> 00:04:45.230 align:start position:0% handle related to the channel name, such as @baby monst, appears. So you ca 00:04:45.230 --> 00:04:45.240 align:start position:0% So you ca 00:04:45.240 --> 00:04:47.670 align:start position:0% So you ca n't check the channel ID right here. At this time, you can 00:04:47.670 --> 00:04:47.680 align:start position:0% n't check the channel ID right here. At this time, you can 00:04:47.680 --> 00:04:49.749 align:start position:0% n't check the channel ID right here. At this time, you can go to a video. 00:04:49.749 --> 00:04:49.759 align:start position:0% go to a video. 00:04:49.759 --> 00:04:51.510 align:start position:0% go to a video. So after you go to a video, 00:04:51.510 --> 00:04:53.790 align:start position:0% So after you go to a video, 00:04:53.790 --> 00:04:53.800 align:start position:0% 00:04:53.800 --> 00:04:56.350 align:start position:0% there's an information icon in the video description tab. Go to the information icon and click on it. 00:04:56.350 --> 00:04:56.360 align:start position:0% there's an information icon in the video description tab. Go to the information icon and click on it. 00:04:56.360 --> 00:04:58.510 align:start position:0% there's an information icon in the video description tab. Go to the information icon and click on it. Then, if you look above, the 00:04:58.510 --> 00:04:58.520 align:start position:0% Then, if you look above, the 00:04:58.520 --> 00:05:00.830 align:start position:0% Then, if you look above, the URL has changed. Now, the channel ID 00:05:00.830 --> 00:05:00.840 align:start position:0% URL has changed. Now, the channel ID 00:05:00.840 --> 00:05:02.790 align:start position:0% URL has changed. Now, the channel ID is displayed instead. 00:05:02.790 --> 00:05:02.800 align:start position:0% is displayed instead. 00:05:02.800 --> 00:05:06.550 align:start position:0% is displayed instead. That value that starts with "yushi" is the channel 00:05:06.550 --> 00:05:06.560 align:start position:0% 00:05:06.560 --> 00:05:09.150 align:start position:0% ID. I'll put it in so that I 00:05:09.150 --> 00:05:09.160 align:start position:0% ID. I'll put it in so that I 00:05:09.160 --> 00:05:10.909 align:start position:0% ID. I'll put it in so that I can use it later. I 00:05:10.909 --> 00:05:13.230 align:start position:0% can use it later. I 00:05:13.230 --> 00:05:13.240 align:start position:0% 00:05:13.240 --> 00:05:15.950 align:start position:0% created a separate worksheet called Public Video List and 00:05:15.950 --> 00:05:15.960 align:start position:0% created a separate worksheet called Public Video List and 00:05:15.960 --> 00:05:17.550 align:start position:0% created a separate worksheet called Public Video List and entered various column values ​​in it. So 00:05:17.550 --> 00:05:17.560 align:start position:0% entered various column values ​​in it. So 00:05:17.560 --> 00:05:19.430 align:start position:0% entered various column values ​​in it. So now I've organized the information I want to get when I go into the Baby Monster channel and 00:05:19.430 --> 00:05:19.440 align:start position:0% now I've organized the information I want to get when I go into the Baby Monster channel and 00:05:19.440 --> 00:05:21.390 align:start position:0% now I've organized the information I want to get when I go into the Baby Monster channel and collect data. It's going to be 00:05:21.390 --> 00:05:23.670 align:start position:0% collect data. It's going to be 00:05:23.670 --> 00:05:26.550 align:start position:0% 00:05:26.550 --> 00:05:29.670 align:start position:0% 00:05:29.670 --> 00:05:32.590 align:start position:0% 00:05:32.590 --> 00:05:35.350 align:start position:0% 00:05:35.350 --> 00:05:35.360 align:start position:0% 00:05:35.360 --> 00:05:37.950 align:start position:0% brought in like this: Channel ID, Channel name, Subscribers, Video ID, Upload date, Video title, Video length, Video link, Thumbnail link, Video tag, Category ID, Video description, Views, Comments, Likes. 00:05:37.950 --> 00:05:37.960 align:start position:0% brought in like this: Channel ID, Channel name, Subscribers, Video ID, Upload date, Video title, Video length, Video link, Thumbnail link, Video tag, Category ID, Video description, Views, Comments, Likes. 00:05:37.960 --> 00:05:39.469 align:start position:0% brought in like this: Channel ID, Channel name, Subscribers, Video ID, Upload date, Video title, Video length, Video link, Thumbnail link, Video tag, Category ID, Video description, Views, Comments, Likes. So basically, I've organized all the 00:05:39.469 --> 00:05:39.479 align:start position:0% So basically, I've organized all the 00:05:39.479 --> 00:05:41.710 align:start position:0% So basically, I've organized all the information we usually want to get from the channel 00:05:41.710 --> 00:05:41.720 align:start position:0% information we usually want to get from the channel 00:05:41.720 --> 00:05:43.070 align:start position:0% information we usually want to get from the channel into columns like this. 00:05:43.070 --> 00:05:43.080 align:start position:0% into columns like this. 00:05:43.080 --> 00:05:44.909 align:start position:0% into columns like this. Now, let's 00:05:44.909 --> 00:05:44.919 align:start position:0% Now, let's 00:05:44.919 --> 00:05:46.830 align:start position:0% Now, let's actually create a scenario in Make. 00:05:46.830 --> 00:05:46.840 align:start position:0% actually create a scenario in Make. 00:05:46.840 --> 00:05:49.510 align:start position:0% actually create a scenario in Make. Scenario name First, Baby 00:05:49.510 --> 00:05:49.520 align:start position:0% Scenario name First, Baby 00:05:49.520 --> 00:05:51.550 align:start position:0% Scenario name First, Baby Monster YouTube data collection. Let's 00:05:51.550 --> 00:05:51.560 align:start position:0% Monster YouTube data collection. Let's 00:05:51.560 --> 00:05:53.070 align:start position:0% Monster YouTube data collection. Let's do this. Now, we 00:05:53.070 --> 00:05:53.080 align:start position:0% do this. Now, we 00:05:53.080 --> 00:05:55.510 align:start position:0% do this. Now, we have to get channel data. 00:05:55.510 --> 00:05:58.430 align:start position:0% have to get channel data. 00:05:58.430 --> 00:05:58.440 align:start position:0% 00:05:58.440 --> 00:06:00.749 align:start position:0% When collecting data in a sheet like this and updating it, it's a good idea to check for duplicate data 00:06:00.749 --> 00:06:00.759 align:start position:0% When collecting data in a sheet like this and updating it, it's a good idea to check for duplicate data 00:06:00.759 --> 00:06:03.510 align:start position:0% When collecting data in a sheet like this and updating it, it's a good idea to check for duplicate data in advance. 00:06:03.510 --> 00:06:03.520 align:start position:0% in advance. 00:06:03.520 --> 00:06:05.150 align:start position:0% in advance. So 00:06:05.150 --> 00:06:05.160 align:start position:0% So 00:06:05.160 --> 00:06:07.350 align:start position:0% So from the beginning, we're 00:06:07.350 --> 00:06:07.360 align:start position:0% from the beginning, we're 00:06:07.360 --> 00:06:09.189 align:start position:0% from the beginning, we're going to create it with that in mind. We'll bring in the range 00:06:09.189 --> 00:06:09.199 align:start position:0% going to create it with that in mind. We'll bring in the range 00:06:09.199 --> 00:06:12.950 align:start position:0% going to create it with that in mind. We'll bring in the range vales sheet first. 00:06:12.950 --> 00:06:14.909 align:start position:0% vales sheet first. 00:06:14.909 --> 00:06:14.919 align:start position:0% 00:06:14.919 --> 00:06:17.230 align:start position:0% Select the sheet like this. Then, 00:06:17.230 --> 00:06:17.240 align:start position:0% Select the sheet like this. Then, 00:06:17.240 --> 00:06:19.070 align:start position:0% Select the sheet like this. Then, what criteria are you going to use to check for duplicate values? Now, we 00:06:19.070 --> 00:06:19.080 align:start position:0% what criteria are you going to use to check for duplicate values? Now, we 00:06:19.080 --> 00:06:21.150 align:start position:0% what criteria are you going to use to check for duplicate values? Now, we have to check for video duplication, so we have to 00:06:21.150 --> 00:06:21.160 align:start position:0% have to check for video duplication, so we have to 00:06:21.160 --> 00:06:23.150 align:start position:0% have to check for video duplication, so we have to use this video ID value. 00:06:23.150 --> 00:06:23.160 align:start position:0% use this video ID value. 00:06:23.160 --> 00:06:25.309 align:start position:0% use this video ID value. So based on the video ID value, let's 00:06:25.309 --> 00:06:25.319 align:start position:0% So based on the video ID value, let's 00:06:25.319 --> 00:06:27.950 align:start position:0% So based on the video ID value, let's do D2. Let's check up to d1 1000. 00:06:27.950 --> 00:06:27.960 align:start position:0% do D2. Let's check up to d1 1000. 00:06:27.960 --> 00:06:29.589 align:start position:0% do D2. Let's check up to d1 1000. And 00:06:29.589 --> 00:06:29.599 align:start position:0% And 00:06:29.599 --> 00:06:31.469 align:start position:0% And there's a header. I'll 00:06:31.469 --> 00:06:31.479 align:start position:0% there's a header. I'll 00:06:31.479 --> 00:06:33.870 align:start position:0% there's a header. I'll set the header as d1 man. I'll just list the values ​​of this D column. 00:06:33.870 --> 00:06:33.880 align:start position:0% set the header as d1 man. I'll just list the values ​​of this D column. 00:06:33.880 --> 00:06:35.710 align:start position:0% set the header as d1 man. I'll just list the values ​​of this D column. Okay, let's save it and 00:06:35.710 --> 00:06:35.720 align:start position:0% Okay, let's save it and 00:06:35.720 --> 00:06:37.790 align:start position:0% Okay, let's save it and run it. 00:06:37.790 --> 00:06:37.800 align:start position:0% run it. 00:06:37.800 --> 00:06:39.309 align:start position:0% run it. Right now, there are no values, so let's just set it 00:06:39.309 --> 00:06:39.319 align:start position:0% Right now, there are no values, so let's just set it 00:06:39.319 --> 00:06:41.670 align:start position:0% Right now, there are no values, so let's just set it to 0. Later, when some values 00:06:41.670 --> 00:06:41.680 align:start position:0% to 0. Later, when some values 00:06:41.680 --> 00:06:44.110 align:start position:0% to 0. Later, when some values accumulate here, we'll bring them all. But we'll bring them in 00:06:44.110 --> 00:06:44.120 align:start position:0% accumulate here, we'll bring them all. But we'll bring them in 00:06:44.120 --> 00:06:46.629 align:start position:0% accumulate here, we'll bring them all. But we'll bring them in as bundles each now. 00:06:46.629 --> 00:06:46.639 align:start position:0% as bundles each now. 00:06:46.639 --> 00:06:48.390 align:start position:0% as bundles each now. But 00:06:48.390 --> 00:06:48.400 align:start position:0% But 00:06:48.400 --> 00:06:50.710 align:start position:0% But we want to merge them into one and compare them. 00:06:50.710 --> 00:06:50.720 align:start position:0% we want to merge them into one and compare them. 00:06:50.720 --> 00:06:52.430 align:start position:0% we want to merge them into one and compare them. That's because later, 00:06:52.430 --> 00:06:54.469 align:start position:0% That's because later, 00:06:54.469 --> 00:06:54.479 align:start position:0% 00:06:54.479 --> 00:06:56.990 align:start position:0% when we actually bring in the video values ​​to update the data through the API, we have to 00:06:56.990 --> 00:06:57.000 align:start position:0% when we actually bring in the video values ​​to update the data through the API, we have to 00:06:57.000 --> 00:06:58.990 align:start position:0% when we actually bring in the video values ​​to update the data through the API, we have to compare whether the values ​​already exist in the sheet. 00:06:58.990 --> 00:06:59.000 align:start position:0% compare whether the values ​​already exist in the sheet. 00:06:59.000 --> 00:07:00.790 align:start position:0% compare whether the values ​​already exist in the sheet. So, we'll merge 00:07:00.790 --> 00:07:00.800 align:start position:0% So, we'll merge 00:07:00.800 --> 00:07:02.830 align:start position:0% So, we'll merge all the video ID values ​​that will be the comparison group into one so that we 00:07:02.830 --> 00:07:02.840 align:start position:0% all the video ID values ​​that will be the comparison group into one so that we 00:07:02.840 --> 00:07:04.589 align:start position:0% all the video ID values ​​that will be the comparison group into one so that we can compare them at once. 00:07:04.589 --> 00:07:04.599 align:start position:0% can compare them at once. 00:07:04.599 --> 00:07:06.150 align:start position:0% can compare them at once. To do that, we'll 00:07:06.150 --> 00:07:07.869 align:start position:0% To do that, we'll 00:07:07.869 --> 00:07:07.879 align:start position:0% 00:07:07.879 --> 00:07:09.589 align:start position:0% use array aggregate. As you can see here, 00:07:09.589 --> 00:07:09.599 align:start position:0% use array aggregate. As you can see here, 00:07:09.599 --> 00:07:11.350 align:start position:0% use array aggregate. As you can see here, we've brought in the video ID values. So we'll 00:07:11.350 --> 00:07:11.360 align:start position:0% we've brought in the video ID values. So we'll 00:07:11.360 --> 00:07:13.309 align:start position:0% we've brought in the video ID values. So we'll select this and merge it into one. 00:07:13.309 --> 00:07:13.319 align:start position:0% select this and merge it into one. 00:07:13.319 --> 00:07:15.950 align:start position:0% select this and merge it into one. And we'll specify the module name. 00:07:15.950 --> 00:07:15.960 align:start position:0% And we'll specify the module name. 00:07:15.960 --> 00:07:18.510 align:start position:0% And we'll specify the module name. Check for duplicate videos. Save the video list. 00:07:18.510 --> 00:07:18.520 align:start position:0% Check for duplicate videos. Save the video list. 00:07:18.520 --> 00:07:20.469 align:start position:0% Check for duplicate videos. Save the video list. Now, we've 00:07:20.469 --> 00:07:20.479 align:start position:0% Now, we've 00:07:20.479 --> 00:07:22.710 align:start position:0% Now, we've brought in all the values ​​for checking for duplicate videos and merged them. 00:07:22.710 --> 00:07:22.720 align:start position:0% brought in all the values ​​for checking for duplicate videos and merged them. 00:07:22.720 --> 00:07:24.990 align:start position:0% brought in all the values ​​for checking for duplicate videos and merged them. And now, since 00:07:24.990 --> 00:07:25.000 align:start position:0% And now, since 00:07:25.000 --> 00:07:27.110 align:start position:0% And now, since we have to use the API based on the channel ID, let's 00:07:27.110 --> 00:07:27.120 align:start position:0% we have to use the API based on the channel ID, let's 00:07:27.120 --> 00:07:28.710 align:start position:0% we have to use the API based on the channel ID, let's save the channel ID value. 00:07:28.710 --> 00:07:28.720 align:start position:0% save the channel ID value. 00:07:28.720 --> 00:07:30.189 align:start position:0% save the channel ID value. Set multiple 00:07:30.189 --> 00:07:30.199 align:start position:0% Set multiple 00:07:30.199 --> 00:07:31.990 align:start position:0% Set multiple variables. Select it, 00:07:31.990 --> 00:07:32.000 align:start position:0% variables. Select it, 00:07:32.000 --> 00:07:34.510 align:start position:0% variables. Select it, and here 00:07:34.510 --> 00:07:34.520 align:start position:0% and here 00:07:34.520 --> 00:07:36.270 align:start position:0% and here is the value we brought, right? Channel ID. Some of 00:07:36.270 --> 00:07:36.280 align:start position:0% is the value we brought, right? Channel ID. Some of 00:07:36.280 --> 00:07:37.990 align:start position:0% is the value we brought, right? Channel ID. Some of you 00:07:37.990 --> 00:07:38.000 align:start position:0% you 00:07:38.000 --> 00:07:39.670 align:start position:0% you may not be fans of Baby Monster, so you can 00:07:39.670 --> 00:07:39.680 align:start position:0% may not be fans of Baby Monster, so you can 00:07:39.680 --> 00:07:41.790 align:start position:0% may not be fans of Baby Monster, so you can get the channel ID of your favorite channel and 00:07:41.790 --> 00:07:41.800 align:start position:0% get the channel ID of your favorite channel and 00:07:41.800 --> 00:07:43.790 align:start position:0% get the channel ID of your favorite channel and put it in the value here. 00:07:43.790 --> 00:07:43.800 align:start position:0% put it in the value here. 00:07:43.800 --> 00:07:45.710 align:start position:0% put it in the value here. Put it in like this. Now, 00:07:45.710 --> 00:07:45.720 align:start position:0% Put it in like this. Now, 00:07:45.720 --> 00:07:47.710 align:start position:0% Put it in like this. Now, based on this channel ID, we need to use the official YouTube 00:07:47.710 --> 00:07:47.720 align:start position:0% based on this channel ID, we need to use the official YouTube 00:07:47.720 --> 00:07:50.110 align:start position:0% based on this channel ID, we need to use the official YouTube API to get the video information. 00:07:50.110 --> 00:07:50.120 align:start position:0% API to get the video information. 00:07:50.120 --> 00:07:52.110 align:start position:0% API to get the video information. But this can't be done all at once, 00:07:52.110 --> 00:07:52.120 align:start position:0% But this can't be done all at once, 00:07:52.120 --> 00:07:54.189 align:start position:0% But this can't be done all at once, as I explained earlier, because it's 00:07:54.189 --> 00:07:54.199 align:start position:0% as I explained earlier, because it's 00:07:54.199 --> 00:07:56.110 align:start position:0% as I explained earlier, because it's divided into several endpoints. 00:07:56.110 --> 00:07:56.120 align:start position:0% divided into several endpoints. 00:07:56.120 --> 00:07:58.309 align:start position:0% divided into several endpoints. So 00:07:58.309 --> 00:07:58.319 align:start position:0% So 00:07:58.319 --> 00:08:01.189 align:start position:0% So when you use the official API in this way, you need to check 00:08:01.189 --> 00:08:01.199 align:start position:0% when you use the official API in this way, you need to check 00:08:01.199 --> 00:08:03.830 align:start position:0% when you use the official API in this way, you need to check which endpoint to 00:08:03.830 --> 00:08:03.840 align:start position:0% which endpoint to 00:08:03.840 --> 00:08:06.270 align:start position:0% which endpoint to access and which information to get step by step while looking at the official API document. 00:08:06.270 --> 00:08:08.189 align:start position:0% access and which information to get step by step while looking at the official API document. 00:08:08.189 --> 00:08:08.199 align:start position:0% 00:08:08.199 --> 00:08:09.629 align:start position:0% So 00:08:09.629 --> 00:08:09.639 align:start position:0% So 00:08:09.639 --> 00:08:11.670 align:start position:0% So let's do that. We need to access YouTube Data API 00:08:11.670 --> 00:08:11.680 align:start position:0% let's do that. We need to access YouTube Data API 00:08:11.680 --> 00:08:13.510 align:start position:0% let's do that. We need to access YouTube Data API Version 3. 00:08:13.510 --> 00:08:13.520 align:start position:0% Version 3. 00:08:13.520 --> 00:08:15.270 align:start position:0% Version 3. So if you type YouTube Data API Version 00:08:15.270 --> 00:08:15.280 align:start position:0% So if you type YouTube Data API Version 00:08:15.280 --> 00:08:17.589 align:start position:0% So if you type YouTube Data API Version 3 into Google, YouTube 00:08:17.589 --> 00:08:17.599 align:start position:0% 3 into Google, YouTube 00:08:17.599 --> 00:08:19.390 align:start position:0% 3 into Google, YouTube Data API will appear right away. 00:08:19.390 --> 00:08:19.400 align:start position:0% Data API will appear right away. 00:08:19.400 --> 00:08:20.749 align:start position:0% Data API will appear right away. So you can go there. 00:08:20.749 --> 00:08:22.950 align:start position:0% So you can go there. 00:08:22.950 --> 00:08:22.960 align:start position:0% 00:08:22.960 --> 00:08:25.350 align:start position:0% When you go in and check this API document, you can usually 00:08:25.350 --> 00:08:25.360 align:start position:0% When you go in and check this API document, you can usually 00:08:25.360 --> 00:08:27.390 align:start position:0% When you go in and check this API document, you can usually check most of the information by going to the Reference tab. 00:08:27.390 --> 00:08:27.400 align:start position:0% check most of the information by going to the Reference tab. 00:08:27.400 --> 00:08:29.149 align:start position:0% check most of the information by going to the Reference tab. We want to collect all the 00:08:29.149 --> 00:08:29.159 align:start position:0% We want to collect all the 00:08:29.159 --> 00:08:31.390 align:start position:0% We want to collect all the video information for that channel based on the channel ID. 00:08:31.390 --> 00:08:31.400 align:start position:0% video information for that channel based on the channel ID. 00:08:31.400 --> 00:08:33.389 align:start position:0% video information for that channel based on the channel ID. So 00:08:33.389 --> 00:08:33.399 align:start position:0% So 00:08:33.399 --> 00:08:35.029 align:start position:0% So first, since we want to collect video information, if you 00:08:35.029 --> 00:08:35.039 align:start position:0% first, since we want to collect video information, if you 00:08:35.039 --> 00:08:37.070 align:start position:0% first, since we want to collect video information, if you look on the left here, there are 00:08:37.070 --> 00:08:37.080 align:start position:0% look on the left here, there are 00:08:37.080 --> 00:08:39.149 align:start position:0% look on the left here, there are several endpoints. It's all divided. 00:08:39.149 --> 00:08:39.159 align:start position:0% several endpoints. It's all divided. 00:08:39.159 --> 00:08:40.870 align:start position:0% several endpoints. It's all divided. So among these, 00:08:40.870 --> 00:08:40.880 align:start position:0% So among these, 00:08:40.880 --> 00:08:42.630 align:start position:0% So among these, since Dios seems to have video information, let's 00:08:42.630 --> 00:08:42.640 align:start position:0% since Dios seems to have video information, let's 00:08:42.640 --> 00:08:45.110 align:start position:0% since Dios seems to have video information, let's click on this and 00:08:45.110 --> 00:08:45.120 align:start position:0% click on this and 00:08:45.120 --> 00:08:46.750 align:start position:0% click on this and press Overview to check the information. 00:08:46.750 --> 00:08:46.760 align:start position:0% press Overview to check the information. 00:08:46.760 --> 00:08:49.070 align:start position:0% press Overview to check the information. First, if you look here, it explains that you can get information on 00:08:49.070 --> 00:08:49.080 align:start position:0% First, if you look here, it explains that you can get information on 00:08:49.080 --> 00:08:51.750 align:start position:0% First, if you look here, it explains that you can get information on matching videos in a list format among the methods. 00:08:51.750 --> 00:08:54.230 align:start position:0% matching videos in a list format among the methods. 00:08:54.230 --> 00:08:54.240 align:start position:0% 00:08:54.240 --> 00:08:56.110 align:start position:0% So you 00:08:56.110 --> 00:08:58.389 align:start position:0% So you 00:08:58.389 --> 00:08:58.399 align:start position:0% 00:08:58.399 --> 00:09:00.350 align:start position:0% can see that it would be good to use the list method among the methods. 00:09:00.350 --> 00:09:00.360 align:start position:0% can see that it would be good to use the list method among the methods. 00:09:00.360 --> 00:09:02.030 align:start position:0% can see that it would be good to use the list method among the methods. And if you look at the resource here, you 00:09:02.030 --> 00:09:04.269 align:start position:0% And if you look at the resource here, you 00:09:04.269 --> 00:09:04.279 align:start position:0% 00:09:04.279 --> 00:09:06.470 align:start position:0% can see how the values ​​are output from the video endpoint. If you 00:09:06.470 --> 00:09:06.480 align:start position:0% can see how the values ​​are output from the video endpoint. If you 00:09:06.480 --> 00:09:07.949 align:start position:0% can see how the values ​​are output from the video endpoint. If you look here, it 00:09:07.949 --> 00:09:10.150 align:start position:0% look here, it 00:09:10.150 --> 00:09:10.160 align:start position:0% 00:09:10.160 --> 00:09:12.470 align:start position:0% seems to be the published upload date, channel ID, title, video 00:09:12.470 --> 00:09:12.480 align:start position:0% seems to be the published upload date, channel ID, title, video 00:09:12.480 --> 00:09:14.750 align:start position:0% seems to be the published upload date, channel ID, title, video description, and such values. 00:09:14.750 --> 00:09:14.760 align:start position:0% description, and such values. 00:09:14.760 --> 00:09:17.350 align:start position:0% description, and such values. And if you look below, it gives you the number of views, 00:09:17.350 --> 00:09:17.360 align:start position:0% And if you look below, it gives you the number of views, 00:09:17.360 --> 00:09:20.430 align:start position:0% And if you look below, it gives you the number of views, likes, and comments. 00:09:20.430 --> 00:09:20.440 align:start position:0% likes, and comments. 00:09:20.440 --> 00:09:22.110 align:start position:0% likes, and comments. So you can see that 00:09:22.110 --> 00:09:22.120 align:start position:0% So you can see that 00:09:22.120 --> 00:09:24.509 align:start position:0% So you can see that most of the video information we want is included here. 00:09:24.509 --> 00:09:26.310 align:start position:0% most of the video information we want is included here. 00:09:26.310 --> 00:09:26.320 align:start position:0% 00:09:26.320 --> 00:09:28.230 align:start position:0% In fact, 00:09:28.230 --> 00:09:28.240 align:start position:0% In fact, 00:09:28.240 --> 00:09:30.269 align:start position:0% In fact, since I know how YouTube data is structured, I 00:09:30.269 --> 00:09:30.279 align:start position:0% since I know how YouTube data is structured, I 00:09:30.279 --> 00:09:32.310 align:start position:0% since I know how YouTube data is structured, I explained it right away after looking at this representation, but it might 00:09:32.310 --> 00:09:32.320 align:start position:0% explained it right away after looking at this representation, but it might 00:09:32.320 --> 00:09:34.509 align:start position:0% explained it right away after looking at this representation, but it might not be familiar at first. 00:09:34.509 --> 00:09:34.519 align:start position:0% not be familiar at first. 00:09:34.519 --> 00:09:36.829 align:start position:0% not be familiar at first. So, below here, it says F, and it explains 00:09:36.829 --> 00:09:36.839 align:start position:0% So, below here, it says F, and it explains 00:09:36.839 --> 00:09:39.069 align:start position:0% So, below here, it says F, and it explains what each key value 00:09:39.069 --> 00:09:39.079 align:start position:0% what each key value 00:09:39.079 --> 00:09:40.949 align:start position:0% what each key value means. 00:09:40.949 --> 00:09:40.959 align:start position:0% means. 00:09:40.959 --> 00:09:43.190 align:start position:0% means. So you can check it by looking at this. 00:09:43.190 --> 00:09:43.200 align:start position:0% So you can check it by looking at this. 00:09:43.200 --> 00:09:44.550 align:start position:0% So you can check it by looking at this. Now, 00:09:44.550 --> 00:09:44.560 align:start position:0% Now, 00:09:44.560 --> 00:09:46.509 align:start position:0% Now, if you want to get a list of videos, it would 00:09:46.509 --> 00:09:46.519 align:start position:0% if you want to get a list of videos, it would 00:09:46.519 --> 00:09:48.509 align:start position:0% if you want to get a list of videos, it would be good to take a closer look at this list method. Let's take a look at the 00:09:48.509 --> 00:09:48.519 align:start position:0% be good to take a closer look at this list method. Let's take a look at the 00:09:48.519 --> 00:09:50.069 align:start position:0% be good to take a closer look at this list method. Let's take a look at the list. If you go into the list, 00:09:50.069 --> 00:09:50.079 align:start position:0% list. If you go into the list, 00:09:50.079 --> 00:09:52.069 align:start position:0% list. If you go into the list, first of all, here is a common use 00:09:52.069 --> 00:09:52.079 align:start position:0% first of all, here is a common use 00:09:52.079 --> 00:09:53.630 align:start position:0% first of all, here is a common use case. Here's how it's mainly 00:09:53.630 --> 00:09:53.640 align:start position:0% case. Here's how it's mainly 00:09:53.640 --> 00:09:55.350 align:start position:0% case. Here's how it's mainly used. If you look here, it 00:09:55.350 --> 00:09:57.110 align:start position:0% used. If you look here, it 00:09:57.110 --> 00:09:58.590 align:start position:0% 00:09:58.590 --> 00:09:58.600 align:start position:0% 00:09:58.600 --> 00:10:00.550 align:start position:0% says List by Video ID List by mti Video IDS. So you 00:10:00.550 --> 00:10:03.110 align:start position:0% says List by Video ID List by mti Video IDS. So you 00:10:03.110 --> 00:10:03.120 align:start position:0% 00:10:03.120 --> 00:10:04.910 align:start position:0% can see that if you know the ID of the video, you can extract the video information. 00:10:04.910 --> 00:10:04.920 align:start position:0% can see that if you know the ID of the video, you can extract the video information. 00:10:04.920 --> 00:10:06.710 align:start position:0% can see that if you know the ID of the video, you can extract the video information. But we 00:10:06.710 --> 00:10:06.720 align:start position:0% But we 00:10:06.720 --> 00:10:08.550 align:start position:0% But we only have the channel ID now. But here, you 00:10:08.550 --> 00:10:10.790 align:start position:0% only have the channel ID now. But here, you 00:10:10.790 --> 00:10:10.800 align:start position:0% 00:10:10.800 --> 00:10:12.710 align:start position:0% can see that the video ID is needed to get the video information. 00:10:12.710 --> 00:10:12.720 align:start position:0% can see that the video ID is needed to get the video information. 00:10:12.720 --> 00:10:14.470 align:start position:0% can see that the video ID is needed to get the video information. Then, what we can think about is that we can't get the 00:10:14.470 --> 00:10:14.480 align:start position:0% Then, what we can think about is that we can't get the 00:10:14.480 --> 00:10:16.430 align:start position:0% Then, what we can think about is that we can't get the video information right away with the channel ID now. If we 00:10:16.430 --> 00:10:18.630 align:start position:0% video information right away with the channel ID now. If we 00:10:18.630 --> 00:10:18.640 align:start position:0% 00:10:18.640 --> 00:10:20.670 align:start position:0% use this video endpoint, we need to extract the video ID 00:10:20.670 --> 00:10:20.680 align:start position:0% use this video endpoint, we need to extract the video ID 00:10:20.680 --> 00:10:22.670 align:start position:0% use this video endpoint, we need to extract the video ID separately. 00:10:22.670 --> 00:10:22.680 align:start position:0% separately. 00:10:22.680 --> 00:10:24.150 align:start position:0% separately. So now, you can look for 00:10:24.150 --> 00:10:24.160 align:start position:0% So now, you can look for 00:10:24.160 --> 00:10:25.750 align:start position:0% So now, you can look for where to get the video ID 00:10:25.750 --> 00:10:25.760 align:start position:0% where to get the video ID 00:10:25.760 --> 00:10:27.630 align:start position:0% where to get the video ID in another endpoint. 00:10:27.630 --> 00:10:27.640 align:start position:0% in another endpoint. 00:10:27.640 --> 00:10:29.430 align:start position:0% in another endpoint. For example, let's 00:10:29.430 --> 00:10:29.440 align:start position:0% For example, let's 00:10:29.440 --> 00:10:31.230 align:start position:0% For example, let's go into this search. If you go into the search, you 00:10:31.230 --> 00:10:33.550 align:start position:0% go into this search. If you go into the search, you 00:10:33.550 --> 00:10:35.949 align:start position:0% 00:10:35.949 --> 00:10:35.959 align:start position:0% 00:10:35.959 --> 00:10:38.269 align:start position:0% can see that the video ID values ​​are output like this in the search. And if you go to the list, it's 00:10:38.269 --> 00:10:38.279 align:start position:0% can see that the video ID values ​​are output like this in the search. And if you go to the list, it's 00:10:38.279 --> 00:10:40.470 align:start position:0% can see that the video ID values ​​are output like this in the search. And if you go to the list, it's called List my video. If you 00:10:40.470 --> 00:10:40.480 align:start position:0% called List my video. If you 00:10:40.480 --> 00:10:42.750 align:start position:0% called List my video. If you look at the optional parameter, 00:10:42.750 --> 00:10:42.760 align:start position:0% look at the optional parameter, 00:10:42.760 --> 00:10:44.230 align:start position:0% look at the optional parameter, there's a channel ID value. So you can see that you can 00:10:44.230 --> 00:10:44.240 align:start position:0% there's a channel ID value. So you can see that you can 00:10:44.240 --> 00:10:46.670 align:start position:0% there's a channel ID value. So you can see that you can input the channel ID value and check the video ID. 00:10:46.670 --> 00:10:46.680 align:start position:0% input the channel ID value and check the video ID. 00:10:46.680 --> 00:10:48.350 align:start position:0% input the channel ID value and check the video ID. But the 00:10:48.350 --> 00:10:48.360 align:start position:0% But the 00:10:48.360 --> 00:10:50.590 align:start position:0% But the important thing here is that if you look at the top, it says Quarter 00:10:50.590 --> 00:10:50.600 align:start position:0% important thing here is that if you look at the top, it says Quarter 00:10:50.600 --> 00:10:52.870 align:start position:0% important thing here is that if you look at the top, it says Quarter Impact, so the quarter cost is in 00:10:52.870 --> 00:10:52.880 align:start position:0% Impact, so the quarter cost is in 00:10:52.880 --> 00:10:55.110 align:start position:0% Impact, so the quarter cost is in units. 00:10:55.110 --> 00:10:55.120 align:start position:0% units. 00:10:55.120 --> 00:10:57.190 align:start position:0% units. If you go into the quarter cost, the quarter that we can use the API 00:10:57.190 --> 00:10:57.200 align:start position:0% If you go into the quarter cost, the quarter that we can use the API 00:10:57.200 --> 00:10:59.590 align:start position:0% If you go into the quarter cost, the quarter that we can use the API costs 10,000 units per day. 00:10:59.590 --> 00:10:59.600 align:start position:0% costs 10,000 units per day. 00:10:59.600 --> 00:11:02.069 align:start position:0% costs 10,000 units per day. But if it's 100, it's a pretty big cost. So 00:11:02.069 --> 00:11:02.079 align:start position:0% But if it's 100, it's a pretty big cost. So 00:11:02.079 --> 00:11:04.629 align:start position:0% But if it's 100, it's a pretty big cost. So In fact, you can extract the video ID right away by using the search API, but the 00:11:04.629 --> 00:11:06.990 align:start position:0% In fact, you can extract the video ID right away by using the search API, but the 00:11:06.990 --> 00:11:07.000 align:start position:0% 00:11:07.000 --> 00:11:08.910 align:start position:0% cost is too high. This is an 00:11:08.910 --> 00:11:10.790 align:start position:0% cost is too high. This is an 00:11:10.790 --> 00:11:13.150 align:start position:0% 00:11:13.150 --> 00:11:15.269 align:start position:0% 00:11:15.269 --> 00:11:15.279 align:start position:0% 00:11:15.279 --> 00:11:17.190 align:start position:0% API that can check which videos are appearing on YouTube with keywords, so the cost is a bit high. 00:11:17.190 --> 00:11:17.200 align:start position:0% API that can check which videos are appearing on YouTube with keywords, so the cost is a bit high. 00:11:17.200 --> 00:11:18.829 align:start position:0% API that can check which videos are appearing on YouTube with keywords, so the cost is a bit high. So we will try to find another way to extract 00:11:18.829 --> 00:11:18.839 align:start position:0% So we will try to find another way to extract 00:11:18.839 --> 00:11:21.629 align:start position:0% So we will try to find another way to extract only the video ID more efficiently and at a lower cost. 00:11:21.629 --> 00:11:23.269 align:start position:0% only the video ID more efficiently and at a lower cost. 00:11:23.269 --> 00:11:23.279 align:start position:0% 00:11:23.279 --> 00:11:24.949 align:start position:0% Then, another thing you can think about 00:11:24.949 --> 00:11:27.110 align:start position:0% Then, another thing you can think about 00:11:27.110 --> 00:11:27.120 align:start position:0% 00:11:27.120 --> 00:11:29.590 align:start position:0% is the playlist. So, you can 00:11:29.590 --> 00:11:29.600 align:start position:0% is the playlist. So, you can 00:11:29.600 --> 00:11:31.870 align:start position:0% is the playlist. So, you can get another video from a playlist item. If you 00:11:31.870 --> 00:11:31.880 align:start position:0% get another video from a playlist item. If you 00:11:31.880 --> 00:11:34.550 align:start position:0% get another video from a playlist item. If you look here, the 00:11:34.550 --> 00:11:34.560 align:start position:0% look here, the 00:11:34.560 --> 00:11:36.829 align:start position:0% look here, the video ID is in the content detail. 00:11:36.829 --> 00:11:36.839 align:start position:0% video ID is in the content detail. 00:11:36.839 --> 00:11:38.949 align:start position:0% video ID is in the content detail. Then, knowing the playlist item, 00:11:38.949 --> 00:11:38.959 align:start position:0% Then, knowing the playlist item, 00:11:38.959 --> 00:11:40.910 align:start position:0% Then, knowing the playlist item, we can configure a playlist on the YouTube channel. 00:11:40.910 --> 00:11:40.920 align:start position:0% we can configure a playlist on the YouTube channel. 00:11:40.920 --> 00:11:42.990 align:start position:0% we can configure a playlist on the YouTube channel. Then, if we 00:11:42.990 --> 00:11:43.000 align:start position:0% Then, if we 00:11:43.000 --> 00:11:44.829 align:start position:0% Then, if we know the ID value of the configured playlist, we 00:11:44.829 --> 00:11:47.310 align:start position:0% know the ID value of the configured playlist, we 00:11:47.310 --> 00:11:47.320 align:start position:0% 00:11:47.320 --> 00:11:49.030 align:start position:0% can extract the video ID belonging to it. 00:11:49.030 --> 00:11:49.040 align:start position:0% can extract the video ID belonging to it. 00:11:49.040 --> 00:11:50.350 align:start position:0% can extract the video ID belonging to it. However, there may be 00:11:50.350 --> 00:11:50.360 align:start position:0% However, there may be 00:11:50.360 --> 00:11:52.269 align:start position:0% However, there may be videos for which we have not specified a playlist. 00:11:52.269 --> 00:11:52.279 align:start position:0% videos for which we have not specified a playlist. 00:11:52.279 --> 00:11:53.990 align:start position:0% videos for which we have not specified a playlist. However, YouTube 00:11:53.990 --> 00:11:54.000 align:start position:0% However, YouTube 00:11:54.000 --> 00:11:56.509 align:start position:0% However, YouTube basically groups 00:11:56.509 --> 00:11:56.519 align:start position:0% basically groups 00:11:56.519 --> 00:11:58.870 align:start position:0% basically groups all uploaded videos 00:11:58.870 --> 00:11:58.880 align:start position:0% all uploaded videos 00:11:58.880 --> 00:12:01.110 align:start position:0% all uploaded videos into one default playlist. 00:12:01.110 --> 00:12:01.120 align:start position:0% into one default playlist. 00:12:01.120 --> 00:12:03.230 align:start position:0% into one default playlist. So 00:12:03.230 --> 00:12:03.240 align:start position:0% So 00:12:03.240 --> 00:12:05.350 align:start position:0% So if we know the ID of the default playlist, we can extract all the 00:12:05.350 --> 00:12:05.360 align:start position:0% if we know the ID of the default playlist, we can extract all the 00:12:05.360 --> 00:12:07.870 align:start position:0% if we know the ID of the default playlist, we can extract all the video ID values ​​through the playlist item. 00:12:07.870 --> 00:12:07.880 align:start position:0% video ID values ​​through the playlist item. 00:12:07.880 --> 00:12:10.110 align:start position:0% video ID values ​​through the playlist item. Then, we need to be able to get 00:12:10.110 --> 00:12:10.120 align:start position:0% Then, we need to be able to get 00:12:10.120 --> 00:12:12.269 align:start position:0% Then, we need to be able to get the default playlist ID 00:12:12.269 --> 00:12:12.279 align:start position:0% the default playlist ID 00:12:12.279 --> 00:12:14.069 align:start position:0% the default playlist ID value first. 00:12:14.069 --> 00:12:14.079 align:start position:0% value first. 00:12:14.079 --> 00:12:15.750 align:start position:0% value first. Where can we get that? This can be 00:12:15.750 --> 00:12:15.760 align:start position:0% Where can we get that? This can be 00:12:15.760 --> 00:12:17.310 align:start position:0% Where can we get that? This can be seen as a property of the channel. 00:12:17.310 --> 00:12:17.320 align:start position:0% seen as a property of the channel. 00:12:17.320 --> 00:12:18.990 align:start position:0% seen as a property of the channel. So let's go to the channel tab. 00:12:18.990 --> 00:12:19.000 align:start position:0% So let's go to the channel tab. 00:12:19.000 --> 00:12:21.350 align:start position:0% So let's go to the channel tab. Then, if we check the resource presentation in the channel tab, 00:12:21.350 --> 00:12:23.389 align:start position:0% Then, if we check the resource presentation in the channel tab, 00:12:23.389 --> 00:12:23.399 align:start position:0% 00:12:23.399 --> 00:12:25.189 align:start position:0% this time, let's go to the description tab. If we 00:12:25.189 --> 00:12:25.199 align:start position:0% this time, let's go to the description tab. If we 00:12:25.199 --> 00:12:27.389 align:start position:0% this time, let's go to the description tab. If we look here, there 00:12:27.389 --> 00:12:27.399 align:start position:0% look here, there 00:12:27.399 --> 00:12:29.790 align:start position:0% look here, there is content details. Related 00:12:29.790 --> 00:12:29.800 align:start position:0% is content details. Related 00:12:29.800 --> 00:12:32.030 align:start position:0% is content details. Related playlist upload. So, it's telling us the playlist ID value 00:12:32.030 --> 00:12:32.040 align:start position:0% playlist upload. So, it's telling us the playlist ID value 00:12:32.040 --> 00:12:34.110 align:start position:0% playlist upload. So, it's telling us the playlist ID value corresponding to all the videos uploaded to this channel. 00:12:34.110 --> 00:12:36.509 align:start position:0% corresponding to all the videos uploaded to this channel. 00:12:36.509 --> 00:12:36.519 align:start position:0% 00:12:36.519 --> 00:12:38.150 align:start position:0% So now, what we 00:12:38.150 --> 00:12:38.160 align:start position:0% So now, what we 00:12:38.160 --> 00:12:40.590 align:start position:0% So now, what we can do is, we'll use the channels endpoint to 00:12:40.590 --> 00:12:42.790 align:start position:0% can do is, we'll use the channels endpoint to 00:12:42.790 --> 00:12:42.800 align:start position:0% 00:12:42.800 --> 00:12:44.790 align:start position:0% get the basic playlist ID that contains all the uploaded videos. 00:12:44.790 --> 00:12:44.800 align:start position:0% get the basic playlist ID that contains all the uploaded videos. 00:12:44.800 --> 00:12:47.150 align:start position:0% get the basic playlist ID that contains all the uploaded videos. Then, we can 00:12:47.150 --> 00:12:47.160 align:start position:0% Then, we can 00:12:47.160 --> 00:12:49.110 align:start position:0% Then, we can use the playlist item to get the 00:12:49.110 --> 00:12:50.910 align:start position:0% use the playlist item to get the 00:12:50.910 --> 00:12:50.920 align:start position:0% 00:12:50.920 --> 00:12:53.189 align:start position:0% video ID values ​​of all the videos in that playlist, that is, all the videos on the channel. 00:12:53.189 --> 00:12:53.199 align:start position:0% video ID values ​​of all the videos in that playlist, that is, all the videos on the channel. 00:12:53.199 --> 00:12:54.629 align:start position:0% video ID values ​​of all the videos in that playlist, that is, all the videos on the channel. Then, 00:12:54.629 --> 00:12:54.639 align:start position:0% Then, 00:12:54.639 --> 00:12:56.509 align:start position:0% Then, after getting the video ID, we can 00:12:56.509 --> 00:12:56.519 align:start position:0% after getting the video ID, we can 00:12:56.519 --> 00:12:58.590 align:start position:0% after getting the video ID, we can use the videos endpoint to get the video information. 00:12:58.590 --> 00:13:00.629 align:start position:0% use the videos endpoint to get the video information. 00:13:00.629 --> 00:13:00.639 align:start position:0% 00:13:00.639 --> 00:13:02.629 align:start position:0% And if you configure it like this, the 00:13:02.629 --> 00:13:02.639 align:start position:0% And if you configure it like this, the 00:13:02.639 --> 00:13:04.230 align:start position:0% And if you configure it like this, the search cost was 100 units, but the 00:13:04.230 --> 00:13:04.240 align:start position:0% search cost was 100 units, but the 00:13:04.240 --> 00:13:06.230 align:start position:0% search cost was 100 units, but the channels list is 1 unit and the 00:13:06.230 --> 00:13:06.240 align:start position:0% channels list is 1 unit and the 00:13:06.240 --> 00:13:08.509 align:start position:0% channels list is 1 unit and the playlist ice also costs 1 00:13:08.509 --> 00:13:08.519 align:start position:0% playlist ice also costs 1 00:13:08.519 --> 00:13:11.069 align:start position:0% playlist ice also costs 1 unit. So, even though we 00:13:11.069 --> 00:13:11.079 align:start position:0% unit. So, even though we 00:13:11.079 --> 00:13:12.790 align:start position:0% unit. So, even though we could have solved it with one search, we divided it into 00:13:12.790 --> 00:13:12.800 align:start position:0% could have solved it with one search, we divided it into 00:13:12.800 --> 00:13:14.509 align:start position:0% could have solved it with one search, we divided it into two, channels playlist items, but the 00:13:14.509 --> 00:13:14.519 align:start position:0% two, channels playlist items, but the 00:13:14.519 --> 00:13:16.949 align:start position:0% two, channels playlist items, but the actual cost is much cheaper. 00:13:16.949 --> 00:13:16.959 align:start position:0% actual cost is much cheaper. 00:13:16.959 --> 00:13:18.949 align:start position:0% actual cost is much cheaper. So now, let's set up the channels endpoint. 00:13:18.949 --> 00:13:20.629 align:start position:0% So now, let's set up the channels endpoint. 00:13:20.629 --> 00:13:20.639 align:start position:0% 00:13:20.639 --> 00:13:23.150 align:start position:0% In Make, we're using an API that is no longer supported as a module. 00:13:23.150 --> 00:13:23.160 align:start position:0% In Make, we're using an API that is no longer supported as a module. 00:13:23.160 --> 00:13:25.949 align:start position:0% In Make, we're using an API that is no longer supported as a module. When you want, you 00:13:25.949 --> 00:13:25.959 align:start position:0% When you want, you 00:13:25.959 --> 00:13:27.629 align:start position:0% When you want, you can select the http module. 00:13:27.629 --> 00:13:27.639 align:start position:0% can select the http module. 00:13:27.639 --> 00:13:29.870 align:start position:0% can select the http module. This is access to public data. 00:13:29.870 --> 00:13:29.880 align:start position:0% This is access to public data. 00:13:29.880 --> 00:13:31.710 align:start position:0% This is access to public data. So, you don't need a separate authentication process. You can 00:13:31.710 --> 00:13:31.720 align:start position:0% So, you don't need a separate authentication process. You can 00:13:31.720 --> 00:13:33.590 align:start position:0% So, you don't need a separate authentication process. You can just use the API key. Just 00:13:33.590 --> 00:13:35.230 align:start position:0% just use the API key. Just 00:13:35.230 --> 00:13:35.240 align:start position:0% 00:13:35.240 --> 00:13:36.910 align:start position:0% select the maker request module. 00:13:36.910 --> 00:13:36.920 align:start position:0% select the maker request module. 00:13:36.920 --> 00:13:38.910 align:start position:0% select the maker request module. And if you 00:13:38.910 --> 00:13:38.920 align:start position:0% And if you 00:13:38.920 --> 00:13:40.750 align:start position:0% And if you go into the URL list here, you can 00:13:40.750 --> 00:13:40.760 align:start position:0% go into the URL list here, you can 00:13:40.760 --> 00:13:42.990 align:start position:0% go into the URL list here, you can copy and paste the endpoint URL. 00:13:42.990 --> 00:13:43.000 align:start position:0% copy and paste the endpoint URL. 00:13:43.000 --> 00:13:44.550 align:start position:0% copy and paste the endpoint URL. Then, you 00:13:44.550 --> 00:13:44.560 align:start position:0% Then, you 00:13:44.560 --> 00:13:46.550 align:start position:0% Then, you will access the channel endpoint. And 00:13:46.550 --> 00:13:46.560 align:start position:0% will access the channel endpoint. And 00:13:46.560 --> 00:13:49.310 align:start position:0% will access the channel endpoint. And the method should be gay to 00:13:49.310 --> 00:13:49.320 align:start position:0% the method should be gay to 00:13:49.320 --> 00:13:51.069 align:start position:0% the method should be gay to read the data. In addition, you 00:13:51.069 --> 00:13:51.079 align:start position:0% read the data. In addition, you 00:13:51.079 --> 00:13:52.990 align:start position:0% read the data. In addition, you need to make some settings. 00:13:52.990 --> 00:13:53.000 align:start position:0% need to make some settings. 00:13:53.000 --> 00:13:55.470 align:start position:0% need to make some settings. What is this header? When we do an http request 00:13:55.470 --> 00:13:55.480 align:start position:0% What is this header? When we do an http request 00:13:55.480 --> 00:13:57.629 align:start position:0% What is this header? When we do an http request API code, we use this header when we need to 00:13:57.629 --> 00:13:57.639 align:start position:0% API code, we use this header when we need to 00:13:57.639 --> 00:13:59.949 align:start position:0% API code, we use this header when we need to attach additional information related to authentication. 00:13:59.949 --> 00:14:02.230 align:start position:0% attach additional information related to authentication. 00:14:02.230 --> 00:14:02.240 align:start position:0% 00:14:02.240 --> 00:14:04.350 align:start position:0% Right now, we said that there is no such thing in public data. 00:14:04.350 --> 00:14:04.360 align:start position:0% Right now, we said that there is no such thing in public data. 00:14:04.360 --> 00:14:06.509 align:start position:0% Right now, we said that there is no such thing in public data. So, you can just leave this blank. 00:14:06.509 --> 00:14:06.519 align:start position:0% So, you can just leave this blank. 00:14:06.519 --> 00:14:08.030 align:start position:0% So, you can just leave this blank. Then, in this query 00:14:08.030 --> 00:14:08.040 align:start position:0% Then, in this query 00:14:08.040 --> 00:14:10.629 align:start position:0% Then, in this query string, enter the parameter values ​​that we want to include when we make a request. 00:14:10.629 --> 00:14:12.590 align:start position:0% string, enter the parameter values ​​that we want to include when we make a request. 00:14:12.590 --> 00:14:12.600 align:start position:0% 00:14:12.600 --> 00:14:14.710 align:start position:0% For example, you need to 00:14:14.710 --> 00:14:14.720 align:start position:0% For example, you need to 00:14:14.720 --> 00:14:16.710 align:start position:0% For example, you need to enter the API key value to authenticate who is using it. 00:14:16.710 --> 00:14:16.720 align:start position:0% enter the API key value to authenticate who is using it. 00:14:16.720 --> 00:14:18.910 align:start position:0% enter the API key value to authenticate who is using it. In addition, you need to 00:14:18.910 --> 00:14:18.920 align:start position:0% In addition, you need to 00:14:18.920 --> 00:14:20.470 align:start position:0% In addition, you need to enter the criteria for filtering and the 00:14:20.470 --> 00:14:20.480 align:start position:0% enter the criteria for filtering and the 00:14:20.480 --> 00:14:22.550 align:start position:0% enter the criteria for filtering and the values ​​you want to receive 00:14:22.550 --> 00:14:22.560 align:start position:0% values ​​you want to receive 00:14:22.560 --> 00:14:24.389 align:start position:0% values ​​you want to receive in the request value. You can 00:14:24.389 --> 00:14:24.399 align:start position:0% in the request value. You can 00:14:24.399 --> 00:14:26.069 align:start position:0% in the request value. You can put those in the query string. If you 00:14:26.069 --> 00:14:26.079 align:start position:0% put those in the query string. If you 00:14:26.079 --> 00:14:27.870 align:start position:0% put those in the query string. If you think about it, the first 00:14:27.870 --> 00:14:27.880 align:start position:0% think about it, the first 00:14:27.880 --> 00:14:29.749 align:start position:0% think about it, the first thing you need to enter is the API key. 00:14:29.749 --> 00:14:29.759 align:start position:0% thing you need to enter is the API key. 00:14:29.759 --> 00:14:31.509 align:start position:0% thing you need to enter is the API key. When you enter the API key, YouTube 00:14:31.509 --> 00:14:31.519 align:start position:0% When you enter the API key, YouTube 00:14:31.519 --> 00:14:33.590 align:start position:0% When you enter the API key, YouTube just names it as a key in lowercase letters and 00:14:33.590 --> 00:14:35.509 align:start position:0% just names it as a key in lowercase letters and 00:14:35.509 --> 00:14:35.519 align:start position:0% 00:14:35.519 --> 00:14:37.110 align:start position:0% enters the key value here. However, we have 00:14:37.110 --> 00:14:37.120 align:start position:0% enters the key value here. However, we have 00:14:37.120 --> 00:14:39.509 align:start position:0% enters the key value here. However, we have not created a separate API key yet. 00:14:39.509 --> 00:14:39.519 align:start position:0% not created a separate API key yet. 00:14:39.519 --> 00:14:41.389 align:start position:0% not created a separate API key yet. So I will first create an API key and 00:14:41.389 --> 00:14:41.399 align:start position:0% So I will first create an API key and 00:14:41.399 --> 00:14:43.110 align:start position:0% So I will first create an API key and bring it here. 00:14:43.110 --> 00:14:43.120 align:start position:0% bring it here. 00:14:43.120 --> 00:14:45.710 align:start position:0% bring it here. When you create an API key, go to the console 00:14:45.710 --> 00:14:45.720 align:start position:0% When you create an API key, go to the console 00:14:45.720 --> 00:14:46.710 align:start position:0% When you create an API key, go to the console cloud.google.com and 00:14:46.710 --> 00:14:46.720 align:start position:0% cloud.google.com and 00:14:46.720 --> 00:14:48.710 align:start position:0% cloud.google.com and log in to Google. If you 00:14:48.710 --> 00:14:48.720 align:start position:0% log in to Google. If you 00:14:48.720 --> 00:14:51.069 align:start position:0% log in to Google. If you do not have a project, 00:14:51.069 --> 00:14:51.079 align:start position:0% do not have a project, 00:14:51.079 --> 00:14:53.189 align:start position:0% do not have a project, click the button above project selection and create a new project. 00:14:53.189 --> 00:14:53.199 align:start position:0% click the button above project selection and create a new project. 00:14:53.199 --> 00:14:55.189 align:start position:0% click the button above project selection and create a new project. Create it and 00:14:55.189 --> 00:14:55.199 align:start position:0% Create it and 00:14:55.199 --> 00:14:57.470 align:start position:0% Create it and specify it. Then, in the menu bar, there 00:14:57.470 --> 00:14:57.480 align:start position:0% specify it. Then, in the menu bar, there 00:14:57.480 --> 00:14:59.509 align:start position:0% specify it. Then, in the menu bar, there is something called API and services. 00:14:59.509 --> 00:14:59.519 align:start position:0% is something called API and services. 00:14:59.519 --> 00:15:00.910 align:start position:0% is something called API and services. Select this. When you 00:15:00.910 --> 00:15:00.920 align:start position:0% Select this. When you 00:15:00.920 --> 00:15:03.069 align:start position:0% Select this. When you select it and enter, there 00:15:03.069 --> 00:15:03.079 align:start position:0% select it and enter, there 00:15:03.079 --> 00:15:05.150 align:start position:0% select it and enter, there is an option called user authentication information. 00:15:05.150 --> 00:15:05.160 align:start position:0% is an option called user authentication information. 00:15:05.160 --> 00:15:06.710 align:start position:0% is an option called user authentication information. Select the menu. Then, there 00:15:06.710 --> 00:15:06.720 align:start position:0% Select the menu. Then, there 00:15:06.720 --> 00:15:08.949 align:start position:0% Select the menu. Then, there is an API key here. Click Create user authentication information at the top and 00:15:08.949 --> 00:15:11.670 align:start position:0% is an API key here. Click Create user authentication information at the top and 00:15:11.670 --> 00:15:11.680 align:start position:0% 00:15:11.680 --> 00:15:13.790 align:start position:0% select the API key to create it. Then, the 00:15:13.790 --> 00:15:13.800 align:start position:0% select the API key to create it. Then, the 00:15:13.800 --> 00:15:15.590 align:start position:0% select the API key to create it. Then, the key value is created like this. 00:15:15.590 --> 00:15:15.600 align:start position:0% key value is created like this. 00:15:15.600 --> 00:15:17.910 align:start position:0% key value is created like this. Copy this and enter it in Make. 00:15:17.910 --> 00:15:17.920 align:start position:0% Copy this and enter it in Make. 00:15:17.920 --> 00:15:20.069 align:start position:0% Copy this and enter it in Make. By the way, the API key is like a password, 00:15:20.069 --> 00:15:20.079 align:start position:0% By the way, the API key is like a password, 00:15:20.079 --> 00:15:22.470 align:start position:0% By the way, the API key is like a password, so you need to be careful not to leak it to the outside. 00:15:22.470 --> 00:15:22.480 align:start position:0% so you need to be careful not to leak it to the outside. 00:15:22.480 --> 00:15:24.430 align:start position:0% so you need to be careful not to leak it to the outside. Mine 00:15:24.430 --> 00:15:24.440 align:start position:0% Mine 00:15:24.440 --> 00:15:26.590 align:start position:0% Mine was leaked, but I will discard it right after using it. 00:15:26.590 --> 00:15:26.600 align:start position:0% was leaked, but I will discard it right after using it. 00:15:26.600 --> 00:15:28.550 align:start position:0% was leaked, but I will discard it right after using it. So instead of my API key, 00:15:28.550 --> 00:15:28.560 align:start position:0% So instead of my API key, 00:15:28.560 --> 00:15:30.629 align:start position:0% So instead of my API key, create and use your API key. 00:15:30.629 --> 00:15:30.639 align:start position:0% create and use your API key. 00:15:30.639 --> 00:15:32.629 align:start position:0% create and use your API key. I 00:15:32.629 --> 00:15:32.639 align:start position:0% I 00:15:32.639 --> 00:15:34.590 align:start position:0% I will enter it like this. And now, what 00:15:34.590 --> 00:15:34.600 align:start position:0% will enter it like this. And now, what 00:15:34.600 --> 00:15:36.949 align:start position:0% will enter it like this. And now, what values ​​are you going to receive? You 00:15:36.949 --> 00:15:36.959 align:start position:0% values ​​are you going to receive? You 00:15:36.959 --> 00:15:39.470 align:start position:0% values ​​are you going to receive? You have to specify it. If you go into the document, you will see that 00:15:39.470 --> 00:15:41.550 align:start position:0% have to specify it. If you go into the document, you will see that 00:15:41.550 --> 00:15:43.470 align:start position:0% 00:15:43.470 --> 00:15:43.480 align:start position:0% 00:15:43.480 --> 00:15:46.590 align:start position:0% there is a parameter part that is required. This part specifies which attribute values ​​to 00:15:46.590 --> 00:15:46.600 align:start position:0% there is a parameter part that is required. This part specifies which attribute values ​​to 00:15:46.600 --> 00:15:48.710 align:start position:0% there is a parameter part that is required. This part specifies which attribute values ​​to receive. 00:15:48.710 --> 00:15:48.720 align:start position:0% receive. 00:15:48.720 --> 00:15:50.670 align:start position:0% receive. So, here, we just have to 00:15:50.670 --> 00:15:50.680 align:start position:0% So, here, we just have to 00:15:50.680 --> 00:15:52.550 align:start position:0% So, here, we just have to specify the information we need. So, 00:15:52.550 --> 00:15:52.560 align:start position:0% specify the information we need. So, 00:15:52.560 --> 00:15:54.269 align:start position:0% specify the information we need. So, what are we going to get here? Let's 00:15:54.269 --> 00:15:54.279 align:start position:0% what are we going to get here? Let's 00:15:54.279 --> 00:15:57.110 align:start position:0% what are we going to get here? Let's go into the overview and check the list. 00:15:57.110 --> 00:15:57.120 align:start position:0% go into the overview and check the list. 00:15:57.120 --> 00:15:59.350 align:start position:0% go into the overview and check the list. First, let's just get the ID value and the basic ID value 00:15:59.350 --> 00:15:59.360 align:start position:0% First, let's just get the ID value and the basic ID value 00:15:59.360 --> 00:16:01.470 align:start position:0% First, let's just get the ID value and the basic ID value as a reference. 00:16:01.470 --> 00:16:01.480 align:start position:0% as a reference. 00:16:01.480 --> 00:16:03.350 align:start position:0% as a reference. What we want 00:16:03.350 --> 00:16:03.360 align:start position:0% What we want 00:16:03.360 --> 00:16:05.309 align:start position:0% What we want is subscriber information. Subscriber information 00:16:05.309 --> 00:16:07.910 align:start position:0% is subscriber information. Subscriber information 00:16:07.910 --> 00:16:07.920 align:start position:0% 00:16:07.920 --> 00:16:10.069 align:start position:0% is in the status text of the subscriber count. So, you have to put the status text in. 00:16:10.069 --> 00:16:10.079 align:start position:0% is in the status text of the subscriber count. So, you have to put the status text in. 00:16:10.079 --> 00:16:11.749 align:start position:0% is in the status text of the subscriber count. So, you have to put the status text in. And if you 00:16:11.749 --> 00:16:11.759 align:start position:0% And if you 00:16:11.759 --> 00:16:14.189 align:start position:0% And if you look below, what we want is the playlist ID. It will be in the 00:16:14.189 --> 00:16:14.199 align:start position:0% look below, what we want is the playlist ID. It will be in the 00:16:14.199 --> 00:16:16.949 align:start position:0% look below, what we want is the playlist ID. It will be in the relay playlist 00:16:16.949 --> 00:16:16.959 align:start position:0% relay playlist 00:16:16.959 --> 00:16:18.350 align:start position:0% relay playlist here. So, it's the 00:16:18.350 --> 00:16:18.360 align:start position:0% here. So, it's the 00:16:18.360 --> 00:16:20.309 align:start position:0% here. So, it's the content details. So, you can get this. 00:16:20.309 --> 00:16:22.150 align:start position:0% content details. So, you can get this. 00:16:22.150 --> 00:16:22.160 align:start position:0% 00:16:22.160 --> 00:16:24.309 align:start position:0% When you check this separately, the 00:16:24.309 --> 00:16:24.319 align:start position:0% When you check this separately, the 00:16:24.319 --> 00:16:26.389 align:start position:0% When you check this separately, the playlist ID 00:16:26.389 --> 00:16:26.399 align:start position:0% playlist ID 00:16:26.399 --> 00:16:28.509 align:start position:0% playlist ID is in the list here. 00:16:28.509 --> 00:16:28.519 align:start position:0% is in the list here. 00:16:28.519 --> 00:16:30.069 align:start position:0% is in the list here. So, we will get three things: content details, 00:16:30.069 --> 00:16:30.079 align:start position:0% So, we will get three things: content details, 00:16:30.079 --> 00:16:32.030 align:start position:0% So, we will get three things: content details, statistics, and ID. 00:16:32.030 --> 00:16:32.040 align:start position:0% statistics, and ID. 00:16:32.040 --> 00:16:33.790 align:start position:0% statistics, and ID. So, we will 00:16:33.790 --> 00:16:36.110 align:start position:0% So, we will 00:16:36.110 --> 00:16:38.590 align:start position:0% 00:16:38.590 --> 00:16:38.600 align:start position:0% 00:16:38.600 --> 00:16:40.629 align:start position:0% get three values: part, ID, statistics, and content details. Next, we 00:16:40.629 --> 00:16:40.639 align:start position:0% get three values: part, ID, statistics, and content details. Next, we 00:16:40.639 --> 00:16:42.030 align:start position:0% get three values: part, ID, statistics, and content details. Next, we have to specify the channel ID. So, we will 00:16:42.030 --> 00:16:42.040 align:start position:0% have to specify the channel ID. So, we will 00:16:42.040 --> 00:16:44.430 align:start position:0% have to specify the channel ID. So, we will get the value for that channel. Then let's take a look at 00:16:44.430 --> 00:16:44.440 align:start position:0% get the value for that channel. Then let's take a look at 00:16:44.440 --> 00:16:45.910 align:start position:0% get the value for that channel. Then let's take a look at how to filter the channel ID. If you 00:16:45.910 --> 00:16:45.920 align:start position:0% how to filter the channel ID. If you 00:16:45.920 --> 00:16:47.910 align:start position:0% how to filter the channel ID. If you look at the list, you can 00:16:47.910 --> 00:16:47.920 align:start position:0% look at the list, you can 00:16:47.920 --> 00:16:50.150 align:start position:0% look at the list, you can filter the channel by the value called ID. 00:16:50.150 --> 00:16:50.160 align:start position:0% filter the channel by the value called ID. 00:16:50.160 --> 00:16:51.949 align:start position:0% filter the channel by the value called ID. Enter the name as the ID and 00:16:51.949 --> 00:16:51.959 align:start position:0% Enter the name as the ID and 00:16:51.959 --> 00:16:53.990 align:start position:0% Enter the name as the ID and we have collected the channel ID value in advance. 00:16:53.990 --> 00:16:55.710 align:start position:0% we have collected the channel ID value in advance. 00:16:55.710 --> 00:16:55.720 align:start position:0% 00:16:55.720 --> 00:16:57.870 align:start position:0% Let's map this. And let's set the path response 00:16:57.870 --> 00:16:57.880 align:start position:0% Let's map this. And let's set the path response 00:16:57.880 --> 00:16:59.629 align:start position:0% Let's map this. And let's set the path response to yes. It's just to 00:16:59.629 --> 00:16:59.639 align:start position:0% to yes. It's just to 00:16:59.639 --> 00:17:01.629 align:start position:0% to yes. It's just to distinguish it for better use. Let's do this and 00:17:01.629 --> 00:17:01.639 align:start position:0% distinguish it for better use. Let's do this and 00:17:01.639 --> 00:17:03.790 align:start position:0% distinguish it for better use. Let's do this and just specify the name and 00:17:03.790 --> 00:17:03.800 align:start position:0% just specify the name and 00:17:03.800 --> 00:17:05.590 align:start position:0% just specify the name and run it. We 00:17:05.590 --> 00:17:05.600 align:start position:0% run it. We 00:17:05.600 --> 00:17:07.189 align:start position:0% run it. We want to get the playlist ID. 00:17:07.189 --> 00:17:07.199 align:start position:0% want to get the playlist ID. 00:17:07.199 --> 00:17:10.630 align:start position:0% want to get the playlist ID. If you look at the number of subscribers and the output, this is the playlist ID in the content details. We 00:17:10.630 --> 00:17:12.029 align:start position:0% If you look at the number of subscribers and the output, this is the playlist ID in the content details. We 00:17:12.029 --> 00:17:12.039 align:start position:0% 00:17:12.039 --> 00:17:14.069 align:start position:0% got the ID correctly. And you 00:17:14.069 --> 00:17:14.079 align:start position:0% got the ID correctly. And you 00:17:14.079 --> 00:17:16.510 align:start position:0% got the ID correctly. And you can see that the number of subscribers is also being brought in. It 00:17:16.510 --> 00:17:16.520 align:start position:0% can see that the number of subscribers is also being brought in. It 00:17:16.520 --> 00:17:18.990 align:start position:0% can see that the number of subscribers is also being brought in. It also tells you the number of videos. There 00:17:18.990 --> 00:17:19.000 align:start position:0% also tells you the number of videos. There 00:17:19.000 --> 00:17:21.350 align:start position:0% also tells you the number of videos. There are 427 videos. Now that we've 00:17:21.350 --> 00:17:22.990 align:start position:0% are 427 videos. Now that we've 00:17:22.990 --> 00:17:23.000 align:start position:0% 00:17:23.000 --> 00:17:24.909 align:start position:0% got the playlist ID, we need to 00:17:24.909 --> 00:17:24.919 align:start position:0% got the playlist ID, we need to 00:17:24.919 --> 00:17:26.470 align:start position:0% got the playlist ID, we need to get the video ID value in the playlist. 00:17:26.470 --> 00:17:28.150 align:start position:0% get the video ID value in the playlist. 00:17:28.150 --> 00:17:28.160 align:start position:0% 00:17:28.160 --> 00:17:30.270 align:start position:0% Let's do that right away. We've already created one. 00:17:30.270 --> 00:17:30.280 align:start position:0% Let's do that right away. We've already created one. 00:17:30.280 --> 00:17:32.190 align:start position:0% Let's do that right away. We've already created one. Since we've created an http module, 00:17:32.190 --> 00:17:33.990 align:start position:0% Since we've created an http module, 00:17:33.990 --> 00:17:34.000 align:start position:0% 00:17:34.000 --> 00:17:35.990 align:start position:0% let's copy and paste this. We'll just change the module name. We're 00:17:35.990 --> 00:17:36.000 align:start position:0% let's copy and paste this. We'll just change the module name. We're 00:17:36.000 --> 00:17:37.470 align:start position:0% let's copy and paste this. We'll just change the module name. We're getting the video ID. The 00:17:37.470 --> 00:17:37.480 align:start position:0% getting the video ID. The 00:17:37.480 --> 00:17:39.630 align:start position:0% getting the video ID. The endpoint will be different. The endpoint is 00:17:39.630 --> 00:17:39.640 align:start position:0% endpoint will be different. The endpoint is 00:17:39.640 --> 00:17:41.669 align:start position:0% endpoint will be different. The endpoint is from the playlist items side. So go to the 00:17:41.669 --> 00:17:41.679 align:start position:0% from the playlist items side. So go to the 00:17:41.679 --> 00:17:43.510 align:start position:0% from the playlist items side. So go to the playlist items A 00:17:43.510 --> 00:17:43.520 align:start position:0% playlist items A 00:17:43.520 --> 00:17:45.870 align:start position:0% playlist items A list and copy this and put it in. 00:17:45.870 --> 00:17:45.880 align:start position:0% list and copy this and put it in. 00:17:45.880 --> 00:17:47.669 align:start position:0% list and copy this and put it in. And the key will be the same. You can just 00:17:47.669 --> 00:17:47.679 align:start position:0% And the key will be the same. You can just 00:17:47.679 --> 00:17:49.830 align:start position:0% And the key will be the same. You can just write it, and then you need to input the part and the 00:17:49.830 --> 00:17:49.840 align:start position:0% write it, and then you need to input the part and the 00:17:49.840 --> 00:17:51.310 align:start position:0% write it, and then you need to input the part and the playlist ID, 00:17:51.310 --> 00:17:51.320 align:start position:0% playlist ID, 00:17:51.320 --> 00:17:53.110 align:start position:0% playlist ID, right? Let's check the 00:17:53.110 --> 00:17:53.120 align:start position:0% right? Let's check the 00:17:53.120 --> 00:17:54.870 align:start position:0% right? Let's check the document to see how to set the filtering values. You 00:17:54.870 --> 00:17:57.029 align:start position:0% document to see how to set the filtering values. You 00:17:57.029 --> 00:17:57.039 align:start position:0% 00:17:57.039 --> 00:17:59.510 align:start position:0% can use the part as it is, but here, you 00:17:59.510 --> 00:18:01.590 align:start position:0% can use the part as it is, but here, you 00:18:01.590 --> 00:18:01.600 align:start position:0% 00:18:01.600 --> 00:18:03.430 align:start position:0% need to specify the value to get what values. 00:18:03.430 --> 00:18:03.440 align:start position:0% need to specify the value to get what values. 00:18:03.440 --> 00:18:05.710 align:start position:0% need to specify the value to get what values. Let's see what we want to get now. The video ID 00:18:05.710 --> 00:18:05.720 align:start position:0% Let's see what we want to get now. The video ID 00:18:05.720 --> 00:18:08.310 align:start position:0% Let's see what we want to get now. The video ID value is, ah, the video ID value. It's 00:18:08.310 --> 00:18:08.320 align:start position:0% value is, ah, the video ID value. It's 00:18:08.320 --> 00:18:09.990 align:start position:0% value is, ah, the video ID value. It's in the content details. Then, you can 00:18:09.990 --> 00:18:10.000 align:start position:0% in the content details. Then, you can 00:18:10.000 --> 00:18:12.750 align:start position:0% in the content details. Then, you can get the content details. 00:18:12.750 --> 00:18:12.760 align:start position:0% get the content details. 00:18:12.760 --> 00:18:14.750 align:start position:0% get the content details. Next, let's check how to filter the ID 00:18:14.750 --> 00:18:14.760 align:start position:0% Next, let's check how to filter the ID 00:18:14.760 --> 00:18:16.750 align:start position:0% Next, let's check how to filter the ID in the list method. If you 00:18:16.750 --> 00:18:18.549 align:start position:0% in the list method. If you 00:18:18.549 --> 00:18:18.559 align:start position:0% 00:18:18.559 --> 00:18:20.270 align:start position:0% look at the filter here, 00:18:20.270 --> 00:18:20.280 align:start position:0% look at the filter here, 00:18:20.280 --> 00:18:22.350 align:start position:0% look at the filter here, there's something called a playlist ID. You can specify it with this. 00:18:22.350 --> 00:18:22.360 align:start position:0% there's something called a playlist ID. You can specify it with this. 00:18:22.360 --> 00:18:23.990 align:start position:0% there's something called a playlist ID. You can specify it with this. So this time, the name is 00:18:23.990 --> 00:18:24.000 align:start position:0% So this time, the name is 00:18:24.000 --> 00:18:26.350 align:start position:0% So this time, the name is playlist. Here, we need to specify the 00:18:26.350 --> 00:18:26.360 align:start position:0% playlist. Here, we need to specify the 00:18:26.360 --> 00:18:27.950 align:start position:0% playlist. Here, we need to specify the playlist ID that we've already extracted. Yes, 00:18:27.950 --> 00:18:30.029 align:start position:0% playlist ID that we've already extracted. Yes, 00:18:30.029 --> 00:18:30.039 align:start position:0% 00:18:30.039 --> 00:18:32.789 align:start position:0% upload. This is the playlist ID. If you 00:18:32.789 --> 00:18:32.799 align:start position:0% upload. This is the playlist ID. If you 00:18:32.799 --> 00:18:35.070 align:start position:0% upload. This is the playlist ID. If you specify this, you 00:18:35.070 --> 00:18:35.080 align:start position:0% specify this, you 00:18:35.080 --> 00:18:36.750 align:start position:0% specify this, you can now extract the video ID. And 00:18:36.750 --> 00:18:36.760 align:start position:0% can now extract the video ID. And 00:18:36.760 --> 00:18:39.029 align:start position:0% can now extract the video ID. And pass the resp. Oh, and if you 00:18:39.029 --> 00:18:39.039 align:start position:0% pass the resp. Oh, and if you 00:18:39.039 --> 00:18:41.669 align:start position:0% pass the resp. Oh, and if you look here, it's called Max Lee, and it goes 00:18:41.669 --> 00:18:41.679 align:start position:0% look here, it's called Max Lee, and it goes 00:18:41.679 --> 00:18:43.549 align:start position:0% look here, it's called Max Lee, and it goes from 0 to 50, so you can 00:18:43.549 --> 00:18:43.559 align:start position:0% from 0 to 50, so you can 00:18:43.559 --> 00:18:45.950 align:start position:0% from 0 to 50, so you can get up to 50 video IDs at a time. The 00:18:45.950 --> 00:18:45.960 align:start position:0% get up to 50 video IDs at a time. The 00:18:45.960 --> 00:18:47.669 align:start position:0% get up to 50 video IDs at a time. The default is five. If you 00:18:47.669 --> 00:18:47.679 align:start position:0% default is five. If you 00:18:47.679 --> 00:18:48.909 align:start position:0% default is five. If you don't enter anything, you'll only 00:18:48.909 --> 00:18:48.919 align:start position:0% don't enter anything, you'll only 00:18:48.919 --> 00:18:50.710 align:start position:0% don't enter anything, you'll only get five, and if you enter 50, you'll get them all at once. You 00:18:50.710 --> 00:18:50.720 align:start position:0% get five, and if you enter 50, you'll get them all at once. You 00:18:50.720 --> 00:18:52.590 align:start position:0% get five, and if you enter 50, you'll get them all at once. You can get up to 50, so it would be 00:18:52.590 --> 00:18:52.600 align:start position:0% can get up to 50, so it would be 00:18:52.600 --> 00:18:54.590 align:start position:0% can get up to 50, so it would be better to get the maximum. Let's 00:18:54.590 --> 00:18:54.600 align:start position:0% better to get the maximum. Let's 00:18:54.600 --> 00:18:56.510 align:start position:0% better to get the maximum. Let's put 50 as max results. Okay. 00:18:56.510 --> 00:18:56.520 align:start position:0% put 50 as max results. Okay. 00:18:56.520 --> 00:18:58.230 align:start position:0% put 50 as max results. Okay. Then, let's do this and 00:18:58.230 --> 00:18:58.240 align:start position:0% Then, let's do this and 00:18:58.240 --> 00:19:01.149 align:start position:0% Then, let's do this and run it again. Then, 00:19:01.149 --> 00:19:01.159 align:start position:0% run it again. Then, 00:19:01.159 --> 00:19:03.630 align:start position:0% run it again. Then, like this, we're listing all the video ID values ​​in one bundle 00:19:03.630 --> 00:19:03.640 align:start position:0% like this, we're listing all the video ID values ​​in one bundle 00:19:03.640 --> 00:19:06.190 align:start position:0% like this, we're listing all the video ID values ​​in one bundle by dividing them into items. 00:19:06.190 --> 00:19:07.750 align:start position:0% by dividing them into items. 00:19:07.750 --> 00:19:07.760 align:start position:0% 00:19:07.760 --> 00:19:09.669 align:start position:0% But, instead of one bundle, we're going to 00:19:09.669 --> 00:19:09.679 align:start position:0% But, instead of one bundle, we're going to 00:19:09.679 --> 00:19:12.070 align:start position:0% But, instead of one bundle, we're going to divide this into multiple bundles to 00:19:12.070 --> 00:19:12.080 align:start position:0% divide this into multiple bundles to 00:19:12.080 --> 00:19:14.270 align:start position:0% divide this into multiple bundles to make it easier to access each video ID. 00:19:14.270 --> 00:19:14.280 align:start position:0% make it easier to access each video ID. 00:19:14.280 --> 00:19:16.590 align:start position:0% make it easier to access each video ID. To do that, we can use an iterator in the flow control to 00:19:16.590 --> 00:19:16.600 align:start position:0% To do that, we can use an iterator in the flow control to 00:19:16.600 --> 00:19:18.549 align:start position:0% To do that, we can use an iterator in the flow control to distinguish them. The 00:19:18.549 --> 00:19:21.110 align:start position:0% distinguish them. The 00:19:21.110 --> 00:19:21.120 align:start position:0% 00:19:21.120 --> 00:19:22.669 align:start position:0% video ID is now in the items, 00:19:22.669 --> 00:19:22.679 align:start position:0% video ID is now in the items, 00:19:22.679 --> 00:19:24.430 align:start position:0% video ID is now in the items, so let's 00:19:24.430 --> 00:19:24.440 align:start position:0% so let's 00:19:24.440 --> 00:19:26.110 align:start position:0% so let's select the items array and distinguish them. 00:19:26.110 --> 00:19:26.120 align:start position:0% select the items array and distinguish them. 00:19:26.120 --> 00:19:27.950 align:start position:0% select the items array and distinguish them. And after dividing them, 00:19:27.950 --> 00:19:27.960 align:start position:0% And after dividing them, 00:19:27.960 --> 00:19:29.710 align:start position:0% And after dividing them, let's run it again. 00:19:29.710 --> 00:19:29.720 align:start position:0% let's run it again. 00:19:29.720 --> 00:19:32.149 align:start position:0% let's run it again. Then, the iterator ES has divided all the 00:19:32.149 --> 00:19:32.159 align:start position:0% Then, the iterator ES has divided all the 00:19:32.159 --> 00:19:34.350 align:start position:0% Then, the iterator ES has divided all the video information that contains each video ID 00:19:34.350 --> 00:19:34.360 align:start position:0% video information that contains each video ID 00:19:34.360 --> 00:19:36.669 align:start position:0% video information that contains each video ID into bundles. So, if we 00:19:36.669 --> 00:19:36.679 align:start position:0% into bundles. So, if we 00:19:36.679 --> 00:19:38.230 align:start position:0% into bundles. So, if we divide it like this, we can now 00:19:38.230 --> 00:19:38.240 align:start position:0% divide it like this, we can now 00:19:38.240 --> 00:19:40.070 align:start position:0% divide it like this, we can now access each of these video ID values. 00:19:40.070 --> 00:19:40.080 align:start position:0% access each of these video ID values. 00:19:40.080 --> 00:19:41.669 align:start position:0% access each of these video ID values. Then, we'll access them all and 00:19:41.669 --> 00:19:44.070 align:start position:0% Then, we'll access them all and 00:19:44.070 --> 00:19:44.080 align:start position:0% 00:19:44.080 --> 00:19:46.029 align:start position:0% merge them into one text with commas. That's because 00:19:46.029 --> 00:19:46.039 align:start position:0% merge them into one text with commas. That's because 00:19:46.039 --> 00:19:47.950 align:start position:0% merge them into one text with commas. That's because when we looked at the official API earlier, 00:19:47.950 --> 00:19:50.470 align:start position:0% when we looked at the official API earlier, 00:19:50.470 --> 00:19:50.480 align:start position:0% 00:19:50.480 --> 00:19:52.630 align:start position:0% when listing video information in the video, we 00:19:52.630 --> 00:19:52.640 align:start position:0% when listing video information in the video, we 00:19:52.640 --> 00:19:55.149 align:start position:0% when listing video information in the video, we can access multiple IDs with commas instead of just one ID. We 00:19:55.149 --> 00:19:55.159 align:start position:0% can access multiple IDs with commas instead of just one ID. We 00:19:55.159 --> 00:19:57.470 align:start position:0% can access multiple IDs with commas instead of just one ID. We did it, so we don't forget several of them. 00:19:57.470 --> 00:19:57.480 align:start position:0% did it, so we don't forget several of them. 00:19:57.480 --> 00:20:00.549 align:start position:0% did it, so we don't forget several of them. If we 00:20:00.549 --> 00:20:00.559 align:start position:0% If we 00:20:00.559 --> 00:20:03.390 align:start position:0% If we make API calls for each video information by video ID, we'll have to 00:20:03.390 --> 00:20:06.510 align:start position:0% make API calls for each video information by video ID, we'll have to 00:20:06.510 --> 00:20:06.520 align:start position:0% 00:20:06.520 --> 00:20:08.390 align:start position:0% use the API 50 times to get 50 videos. Of course, that'll 00:20:08.390 --> 00:20:08.400 align:start position:0% use the API 50 times to get 50 videos. Of course, that'll 00:20:08.400 --> 00:20:10.070 align:start position:0% use the API 50 times to get 50 videos. Of course, that'll cost more. But if we can combine these at once and 00:20:10.070 --> 00:20:10.080 align:start position:0% cost more. But if we can combine these at once and 00:20:10.080 --> 00:20:12.070 align:start position:0% cost more. But if we can combine these at once and request them, we 00:20:12.070 --> 00:20:12.080 align:start position:0% request them, we 00:20:12.080 --> 00:20:13.789 align:start position:0% request them, we can get 50 at once. So 00:20:13.789 --> 00:20:13.799 align:start position:0% can get 50 at once. So 00:20:13.799 --> 00:20:15.270 align:start position:0% can get 50 at once. So we'll set it up like that. Then we'll have to 00:20:15.270 --> 00:20:15.280 align:start position:0% we'll set it up like that. Then we'll have to 00:20:15.280 --> 00:20:16.990 align:start position:0% we'll set it up like that. Then we'll have to combine the ID values, so 00:20:16.990 --> 00:20:17.000 align:start position:0% combine the ID values, so 00:20:17.000 --> 00:20:18.870 align:start position:0% combine the ID values, so we know about the text ligator. We'll 00:20:18.870 --> 00:20:18.880 align:start position:0% we know about the text ligator. We'll 00:20:18.880 --> 00:20:21.070 align:start position:0% we know about the text ligator. We'll use this to get the iterator has value. 00:20:21.070 --> 00:20:21.080 align:start position:0% use this to get the iterator has value. 00:20:21.080 --> 00:20:23.230 align:start position:0% use this to get the iterator has value. What do we get? 00:20:23.230 --> 00:20:23.240 align:start position:0% What do we get? 00:20:23.240 --> 00:20:25.310 align:start position:0% What do we get? Specify the video ID value, and 00:20:25.310 --> 00:20:25.320 align:start position:0% Specify the video ID value, and 00:20:25.320 --> 00:20:27.590 align:start position:0% Specify the video ID value, and then specify the row separator as a comma. 00:20:27.590 --> 00:20:27.600 align:start position:0% then specify the row separator as a comma. 00:20:27.600 --> 00:20:29.270 align:start position:0% then specify the row separator as a comma. And 00:20:29.270 --> 00:20:29.280 align:start position:0% And 00:20:29.280 --> 00:20:31.590 align:start position:0% And if there's no video ID, we 00:20:31.590 --> 00:20:31.600 align:start position:0% if there's no video ID, we 00:20:31.600 --> 00:20:34.029 align:start position:0% if there's no video ID, we 'll set it to stop. You can 00:20:34.029 --> 00:20:34.039 align:start position:0% 'll set it to stop. You can 00:20:34.039 --> 00:20:35.510 align:start position:0% 'll set it to stop. You can save it like this. Then, 00:20:35.510 --> 00:20:35.520 align:start position:0% save it like this. Then, 00:20:35.520 --> 00:20:37.310 align:start position:0% save it like this. Then, this becomes a list of video IDs. And 00:20:37.310 --> 00:20:39.750 align:start position:0% this becomes a list of video IDs. And 00:20:39.750 --> 00:20:39.760 align:start position:0% 00:20:39.760 --> 00:20:42.149 align:start position:0% before creating the list, we checked for duplicate videos 00:20:42.149 --> 00:20:42.159 align:start position:0% before creating the list, we checked for duplicate videos 00:20:42.159 --> 00:20:43.630 align:start position:0% before creating the list, we checked for duplicate videos in the sheet, so we've already 00:20:43.630 --> 00:20:43.640 align:start position:0% in the sheet, so we've already 00:20:43.640 --> 00:20:45.590 align:start position:0% in the sheet, so we've already loaded the updated video ID values. We'll 00:20:45.590 --> 00:20:45.600 align:start position:0% loaded the updated video ID values. We'll 00:20:45.600 --> 00:20:47.590 align:start position:0% loaded the updated video ID values. We'll use that to filter here. We 00:20:47.590 --> 00:20:49.350 align:start position:0% use that to filter here. We 00:20:49.350 --> 00:20:49.360 align:start position:0% 00:20:49.360 --> 00:20:51.190 align:start position:0% 'll check for duplicate content. And using the map, the 00:20:51.190 --> 00:20:53.029 align:start position:0% 'll check for duplicate content. And using the map, the 00:20:53.029 --> 00:20:53.039 align:start position:0% 00:20:53.039 --> 00:20:55.310 align:start position:0% video ID log in the previously imported laser array 00:20:55.310 --> 00:20:55.320 align:start position:0% video ID log in the previously imported laser array 00:20:55.320 --> 00:20:57.230 align:start position:0% video ID log in the previously imported laser array is 0. When we did it with the video ID, 00:20:57.230 --> 00:20:57.240 align:start position:0% is 0. When we did it with the video ID, 00:20:57.240 --> 00:20:59.310 align:start position:0% is 0. When we did it with the video ID, on the left. It will say 0 in the row. 00:20:59.310 --> 00:20:59.320 align:start position:0% on the left. It will say 0 in the row. 00:20:59.320 --> 00:21:00.990 align:start position:0% on the left. It will say 0 in the row. Then, you can enter the value 0. 00:21:00.990 --> 00:21:01.000 align:start position:0% Then, you can enter the value 0. 00:21:01.000 --> 00:21:03.310 align:start position:0% Then, you can enter the value 0. Then, there is an attribute called video ID in the array, and the 00:21:03.310 --> 00:21:05.510 align:start position:0% Then, there is an attribute called video ID in the array, and the 00:21:05.510 --> 00:21:05.520 align:start position:0% 00:21:05.520 --> 00:21:07.750 align:start position:0% values ​​included here are extracted and made into a single array. 00:21:07.750 --> 00:21:07.760 align:start position:0% values ​​included here are extracted and made into a single array. 00:21:07.760 --> 00:21:09.190 align:start position:0% values ​​included here are extracted and made into a single array. Then, 00:21:09.190 --> 00:21:09.200 align:start position:0% Then, 00:21:09.200 --> 00:21:10.750 align:start position:0% Then, all the video IDs included in the sheet are 00:21:10.750 --> 00:21:10.760 align:start position:0% all the video IDs included in the sheet are 00:21:10.760 --> 00:21:12.909 align:start position:0% all the video IDs included in the sheet are listed here. 00:21:12.909 --> 00:21:12.919 align:start position:0% listed here. 00:21:12.919 --> 00:21:15.269 align:start position:0% listed here. This is now set to pass the filter only if the 00:21:15.269 --> 00:21:16.470 align:start position:0% This is now set to pass the filter only if the 00:21:16.470 --> 00:21:16.480 align:start position:0% 00:21:16.480 --> 00:21:18.750 align:start position:0% newly extracted video ID value is 00:21:18.750 --> 00:21:18.760 align:start position:0% newly extracted video ID value is 00:21:18.760 --> 00:21:20.909 align:start position:0% newly extracted video ID value is not included in this array in the array operator. The ones that 00:21:20.909 --> 00:21:23.149 align:start position:0% not included in this array in the array operator. The ones that 00:21:23.149 --> 00:21:23.159 align:start position:0% 00:21:23.159 --> 00:21:24.750 align:start position:0% passed are now merged into one. 00:21:24.750 --> 00:21:24.760 align:start position:0% passed are now merged into one. 00:21:24.760 --> 00:21:26.310 align:start position:0% passed are now merged into one. After merging with this, you 00:21:26.310 --> 00:21:28.630 align:start position:0% After merging with this, you 00:21:28.630 --> 00:21:28.640 align:start position:0% 00:21:28.640 --> 00:21:30.430 align:start position:0% can now get the video information from the video endpoint with an http request. Before you 00:21:30.430 --> 00:21:30.440 align:start position:0% can now get the video information from the video endpoint with an http request. Before you 00:21:30.440 --> 00:21:32.510 align:start position:0% can now get the video information from the video endpoint with an http request. Before you get it, you will 00:21:32.510 --> 00:21:32.520 align:start position:0% get it, you will 00:21:32.520 --> 00:21:34.390 align:start position:0% get it, you will put a sleep mode. Since we are going to 00:21:34.390 --> 00:21:34.400 align:start position:0% put a sleep mode. Since we are going to 00:21:34.400 --> 00:21:36.230 align:start position:0% put a sleep mode. Since we are going to do the API code multiple times in a row, in 00:21:36.230 --> 00:21:36.240 align:start position:0% do the API code multiple times in a row, in 00:21:36.240 --> 00:21:38.750 align:start position:0% do the API code multiple times in a row, in case we hit the limit, 00:21:38.750 --> 00:21:38.760 align:start position:0% case we hit the limit, 00:21:38.760 --> 00:21:41.269 align:start position:0% case we hit the limit, turn on the sleep module tools sleep module and 00:21:41.269 --> 00:21:41.279 align:start position:0% turn on the sleep module tools sleep module and 00:21:41.279 --> 00:21:43.310 align:start position:0% turn on the sleep module tools sleep module and delay it for about 3 seconds. 00:21:43.310 --> 00:21:43.320 align:start position:0% delay it for about 3 seconds. 00:21:43.320 --> 00:21:45.549 align:start position:0% delay it for about 3 seconds. Then, select http again by 00:21:45.549 --> 00:21:45.559 align:start position:0% Then, select http again by 00:21:45.559 --> 00:21:47.710 align:start position:0% Then, select http again by holding down shift and dragging to the left, and then 00:21:47.710 --> 00:21:47.720 align:start position:0% holding down shift and dragging to the left, and then 00:21:47.720 --> 00:21:50.070 align:start position:0% holding down shift and dragging to the left, and then copy and 00:21:50.070 --> 00:21:50.080 align:start position:0% copy and 00:21:50.080 --> 00:21:52.110 align:start position:0% copy and paste it here. This time, you 00:21:52.110 --> 00:21:52.120 align:start position:0% paste it here. This time, you 00:21:52.120 --> 00:21:54.669 align:start position:0% paste it here. This time, you need to get the video information. Then, 00:21:54.669 --> 00:21:54.679 align:start position:0% need to get the video information. Then, 00:21:54.679 --> 00:21:57.470 align:start position:0% need to get the video information. Then, go to the video endpoint, copy the URL, 00:21:57.470 --> 00:21:57.480 align:start position:0% go to the video endpoint, copy the URL, 00:21:57.480 --> 00:21:59.950 align:start position:0% go to the video endpoint, copy the URL, change it, use the same key, and 00:21:59.950 --> 00:21:59.960 align:start position:0% change it, use the same key, and 00:21:59.960 --> 00:22:01.990 align:start position:0% change it, use the same key, and set which part to get. 00:22:01.990 --> 00:22:02.000 align:start position:0% set which part to get. 00:22:02.000 --> 00:22:04.470 align:start position:0% set which part to get. Here, you can see the resource section and the 00:22:04.470 --> 00:22:04.480 align:start position:0% Here, you can see the resource section and the 00:22:04.480 --> 00:22:07.230 align:start position:0% Here, you can see the resource section and the petit below. What is it? 00:22:07.230 --> 00:22:07.240 align:start position:0% petit below. What is it? 00:22:07.240 --> 00:22:09.029 align:start position:0% petit below. What is it? You can specify if it's necessary. Well, even if you 00:22:09.029 --> 00:22:09.039 align:start position:0% You can specify if it's necessary. Well, even if you 00:22:09.039 --> 00:22:11.430 align:start position:0% You can specify if it's necessary. Well, even if you look at it, it looks like ID, snippet, content 00:22:11.430 --> 00:22:11.440 align:start position:0% look at it, it looks like ID, snippet, content 00:22:11.440 --> 00:22:13.750 align:start position:0% look at it, it looks like ID, snippet, content detail, and statistics below. 00:22:13.750 --> 00:22:13.760 align:start position:0% detail, and statistics below. 00:22:13.760 --> 00:22:15.630 align:start position:0% detail, and statistics below. I think it'll be fine to bring it like this. I'll put it in like that. 00:22:15.630 --> 00:22:15.640 align:start position:0% I think it'll be fine to bring it like this. I'll put it in like that. 00:22:15.640 --> 00:22:17.430 align:start position:0% I think it'll be fine to bring it like this. I'll put it in like that. And 00:22:17.430 --> 00:22:17.440 align:start position:0% And 00:22:17.440 --> 00:22:19.310 align:start position:0% And this time, it's not a playlist ID. I have to put in the video ID value. If you go 00:22:19.310 --> 00:22:21.149 align:start position:0% this time, it's not a playlist ID. I have to put in the video ID value. If you go 00:22:21.149 --> 00:22:21.159 align:start position:0% 00:22:21.159 --> 00:22:23.750 align:start position:0% to the 00:22:23.750 --> 00:22:23.760 align:start position:0% to the 00:22:23.760 --> 00:22:25.710 align:start position:0% to the video ID list, you have to check the filter. I'll 00:22:25.710 --> 00:22:25.720 align:start position:0% video ID list, you have to check the filter. I'll 00:22:25.720 --> 00:22:27.470 align:start position:0% video ID list, you have to check the filter. I'll put the video ID value as the ID. I'll say ID, and the video 00:22:27.470 --> 00:22:27.480 align:start position:0% put the video ID value as the ID. I'll say ID, and the video 00:22:27.480 --> 00:22:29.909 align:start position:0% put the video ID value as the ID. I'll say ID, and the video ID is this text aggregator. 00:22:29.909 --> 00:22:29.919 align:start position:0% ID is this text aggregator. 00:22:29.919 --> 00:22:31.830 align:start position:0% ID is this text aggregator. Put this text in. There's 00:22:31.830 --> 00:22:31.840 align:start position:0% Put this text in. There's 00:22:31.840 --> 00:22:33.630 align:start position:0% Put this text in. There's no need for Max Lit. 00:22:33.630 --> 00:22:33.640 align:start position:0% no need for Max Lit. 00:22:33.640 --> 00:22:35.470 align:start position:0% no need for Max Lit. Anyway, since we're putting 50 here and 00:22:35.470 --> 00:22:35.480 align:start position:0% Anyway, since we're putting 50 here and 00:22:35.480 --> 00:22:37.230 align:start position:0% Anyway, since we're putting 50 here and making a request at once, 00:22:37.230 --> 00:22:37.240 align:start position:0% making a request at once, 00:22:37.240 --> 00:22:39.070 align:start position:0% making a request at once, all 50 values ​​will come out. So, I've 00:22:39.070 --> 00:22:41.789 align:start position:0% all 50 values ​​will come out. So, I've 00:22:41.789 --> 00:22:41.799 align:start position:0% 00:22:41.799 --> 00:22:43.630 align:start position:0% set up the API to bring in the video information like this. 00:22:43.630 --> 00:22:43.640 align:start position:0% set up the API to bring in the video information like this. 00:22:43.640 --> 00:22:45.549 align:start position:0% set up the API to bring in the video information like this. I'll test it again. I 00:22:45.549 --> 00:22:45.559 align:start position:0% I'll test it again. I 00:22:45.559 --> 00:22:48.310 align:start position:0% I'll test it again. I gave it a short delay with sleep. If you look at the data, you can see that the 00:22:48.310 --> 00:22:48.320 align:start position:0% gave it a short delay with sleep. If you look at the data, you can see that the 00:22:48.320 --> 00:22:51.070 align:start position:0% gave it a short delay with sleep. If you look at the data, you can see that the items are divided like this and the information is brought in well. It's 00:22:51.070 --> 00:22:52.710 align:start position:0% items are divided like this and the information is brought in well. It's 00:22:52.710 --> 00:22:52.720 align:start position:0% 00:22:52.720 --> 00:22:54.630 align:start position:0% brought in well like this. But even now, it's in 00:22:54.630 --> 00:22:54.640 align:start position:0% brought in well like this. But even now, it's in 00:22:54.640 --> 00:22:57.190 align:start position:0% brought in well like this. But even now, it's in one bundle 00:22:57.190 --> 00:22:57.200 align:start position:0% one bundle 00:22:57.200 --> 00:22:59.029 align:start position:0% one bundle like this. There's a collection under the items. 00:22:59.029 --> 00:22:59.039 align:start position:0% like this. There's a collection under the items. 00:22:59.039 --> 00:23:00.990 align:start position:0% like this. There's a collection under the items. So, we 00:23:00.990 --> 00:23:01.000 align:start position:0% So, we 00:23:01.000 --> 00:23:02.510 align:start position:0% So, we have to update this on the sheet. 00:23:02.510 --> 00:23:02.520 align:start position:0% have to update this on the sheet. 00:23:02.520 --> 00:23:04.390 align:start position:0% have to update this on the sheet. In order to do that, it's better to split the information. I'll 00:23:04.390 --> 00:23:04.400 align:start position:0% In order to do that, it's better to split the information. I'll 00:23:04.400 --> 00:23:06.909 align:start position:0% In order to do that, it's better to split the information. I'll use the iterator again. It's an item. I 00:23:06.909 --> 00:23:06.919 align:start position:0% use the iterator again. It's an item. I 00:23:06.919 --> 00:23:08.669 align:start position:0% use the iterator again. It's an item. I 'll split it into items. 00:23:08.669 --> 00:23:08.679 align:start position:0% 'll split it into items. 00:23:08.679 --> 00:23:10.830 align:start position:0% 'll split it into items. Then, just like I divided it in the front, 00:23:10.830 --> 00:23:10.840 align:start position:0% Then, just like I divided it in the front, 00:23:10.840 --> 00:23:12.430 align:start position:0% Then, just like I divided it in the front, Bird. It will be divided again. 00:23:12.430 --> 00:23:12.440 align:start position:0% Bird. It will be divided again. 00:23:12.440 --> 00:23:14.070 align:start position:0% Bird. It will be divided again. Then, you can update the divided information by 00:23:14.070 --> 00:23:14.080 align:start position:0% Then, you can update the divided information by 00:23:14.080 --> 00:23:16.350 align:start position:0% Then, you can update the divided information by airing it on the sheet like this. There 00:23:16.350 --> 00:23:18.149 align:start position:0% airing it on the sheet like this. There 00:23:18.149 --> 00:23:18.159 align:start position:0% 00:23:18.159 --> 00:23:20.430 align:start position:0% is a lot of video information now. 00:23:20.430 --> 00:23:20.440 align:start position:0% is a lot of video information now. 00:23:20.440 --> 00:23:22.590 align:start position:0% is a lot of video information now. Then, if you update it by row like this, if you 00:23:22.590 --> 00:23:24.310 align:start position:0% Then, if you update it by row like this, if you 00:23:24.310 --> 00:23:24.320 align:start position:0% 00:23:24.320 --> 00:23:25.950 align:start position:0% update 400, there 00:23:25.950 --> 00:23:27.669 align:start position:0% update 400, there 00:23:27.669 --> 00:23:27.679 align:start position:0% 00:23:27.679 --> 00:23:29.669 align:start position:0% will be 400 operations that appear in a circle on the right. Then, 00:23:29.669 --> 00:23:29.679 align:start position:0% will be 400 operations that appear in a circle on the right. Then, 00:23:29.679 --> 00:23:31.950 align:start position:0% will be 400 operations that appear in a circle on the right. Then, since all of this is a cost in Make, it is 00:23:31.950 --> 00:23:33.630 align:start position:0% since all of this is a cost in Make, it is 00:23:33.630 --> 00:23:35.909 align:start position:0% 00:23:35.909 --> 00:23:35.919 align:start position:0% 00:23:35.919 --> 00:23:37.710 align:start position:0% better to collect this data at once and do a bulk update instead of updating it by row. 00:23:37.710 --> 00:23:37.720 align:start position:0% better to collect this data at once and do a bulk update instead of updating it by row. 00:23:37.720 --> 00:23:40.710 align:start position:0% better to collect this data at once and do a bulk update instead of updating it by row. To do a bulk update, select the ray ligator and then the 00:23:40.710 --> 00:23:40.720 align:start position:0% To do a bulk update, select the ray ligator and then the 00:23:40.720 --> 00:23:42.870 align:start position:0% To do a bulk update, select the ray ligator and then the rows in the bulk. 00:23:42.870 --> 00:23:42.880 align:start position:0% rows in the bulk. 00:23:42.880 --> 00:23:44.149 align:start position:0% rows in the bulk. This is how you 00:23:44.149 --> 00:23:44.159 align:start position:0% This is how you 00:23:44.159 --> 00:23:45.830 align:start position:0% This is how you set up the bulk update. 00:23:45.830 --> 00:23:45.840 align:start position:0% set up the bulk update. 00:23:45.840 --> 00:23:48.750 align:start position:0% set up the bulk update. Copy and paste the sheet name to 00:23:48.750 --> 00:23:48.760 align:start position:0% Copy and paste the sheet name to 00:23:48.760 --> 00:23:50.590 align:start position:0% Copy and paste the sheet name to find the ID value. Then, 00:23:50.590 --> 00:23:50.600 align:start position:0% find the ID value. Then, 00:23:50.600 --> 00:23:52.909 align:start position:0% find the ID value. Then, turn off the sheet name map and you can select it. 00:23:52.909 --> 00:23:52.919 align:start position:0% turn off the sheet name map and you can select it. 00:23:52.919 --> 00:23:54.990 align:start position:0% turn off the sheet name map and you can select it. Video list column range 00:23:54.990 --> 00:23:55.000 align:start position:0% Video list column range 00:23:55.000 --> 00:23:57.070 align:start position:0% Video list column range loss. We created an array aggregate in front, 00:23:57.070 --> 00:23:57.080 align:start position:0% loss. We created an array aggregate in front, 00:23:57.080 --> 00:23:59.070 align:start position:0% loss. We created an array aggregate in front, so you can 00:23:59.070 --> 00:23:59.080 align:start position:0% so you can 00:23:59.080 --> 00:24:01.549 align:start position:0% so you can input the array value. 00:24:01.549 --> 00:24:01.559 align:start position:0% input the array value. 00:24:01.559 --> 00:24:03.510 align:start position:0% input the array value. This is where you update the sheet. 00:24:03.510 --> 00:24:03.520 align:start position:0% This is where you update the sheet. 00:24:03.520 --> 00:24:05.149 align:start position:0% This is where you update the sheet. Then, you 00:24:05.149 --> 00:24:05.159 align:start position:0% Then, you 00:24:05.159 --> 00:24:07.230 align:start position:0% Then, you just need to set up the array aggregate. You 00:24:07.230 --> 00:24:07.240 align:start position:0% just need to set up the array aggregate. You 00:24:07.240 --> 00:24:09.669 align:start position:0% just need to set up the array aggregate. You can receive the iterator value that you divided in front and now you can combine the information. 00:24:09.669 --> 00:24:11.710 align:start position:0% can receive the iterator value that you divided in front and now you can combine the information. 00:24:11.710 --> 00:24:11.720 align:start position:0% 00:24:11.720 --> 00:24:13.950 align:start position:0% We attached the sheet module bulk add to the structure type. If you 00:24:13.950 --> 00:24:13.960 align:start position:0% We attached the sheet module bulk add to the structure type. If you 00:24:13.960 --> 00:24:15.950 align:start position:0% We attached the sheet module bulk add to the structure type. If you attach it, here. 00:24:15.950 --> 00:24:15.960 align:start position:0% attach it, here. 00:24:15.960 --> 00:24:18.350 align:start position:0% attach it, here. Google Sheet will appear in the structure type. You can 00:24:18.350 --> 00:24:18.360 align:start position:0% Google Sheet will appear in the structure type. You can 00:24:18.360 --> 00:24:20.230 align:start position:0% Google Sheet will appear in the structure type. You can connect this. Then, there 00:24:20.230 --> 00:24:20.240 align:start position:0% connect this. Then, there 00:24:20.240 --> 00:24:22.990 align:start position:0% connect this. Then, there is a value here. You 00:24:22.990 --> 00:24:23.000 align:start position:0% is a value here. You 00:24:23.000 --> 00:24:24.990 align:start position:0% is a value here. You can map each value to the value by column. You can 00:24:24.990 --> 00:24:25.000 align:start position:0% can map each value to the value by column. You can 00:24:25.000 --> 00:24:26.870 align:start position:0% can map each value to the value by column. You can map how you want to insert it. If there are 00:24:26.870 --> 00:24:26.880 align:start position:0% map how you want to insert it. If there are 00:24:26.880 --> 00:24:28.750 align:start position:0% map how you want to insert it. If there are multiple columns, turn it on like this and 00:24:28.750 --> 00:24:28.760 align:start position:0% multiple columns, turn it on like this and 00:24:28.760 --> 00:24:30.789 align:start position:0% multiple columns, turn it on like this and start inserting from number 1. 00:24:30.789 --> 00:24:30.799 align:start position:0% start inserting from number 1. 00:24:30.799 --> 00:24:32.710 align:start position:0% start inserting from number 1. Then, what is number 1? The first 00:24:32.710 --> 00:24:32.720 align:start position:0% Then, what is number 1? The first 00:24:32.720 --> 00:24:34.669 align:start position:0% Then, what is number 1? The first column here is the channel ID. Then, the first column will 00:24:34.669 --> 00:24:34.679 align:start position:0% column here is the channel ID. Then, the first column will 00:24:34.679 --> 00:24:36.630 align:start position:0% column here is the channel ID. Then, the first column will be the channel ID. 00:24:36.630 --> 00:24:36.640 align:start position:0% be the channel ID. 00:24:36.640 --> 00:24:38.909 align:start position:0% be the channel ID. In that channel ID, you need to insert the iterator has channel 00:24:38.909 --> 00:24:38.919 align:start position:0% In that channel ID, you need to insert the iterator has channel 00:24:38.919 --> 00:24:40.789 align:start position:0% In that channel ID, you need to insert the iterator has channel ID value. Yes, I 00:24:40.789 --> 00:24:40.799 align:start position:0% ID value. Yes, I 00:24:40.799 --> 00:24:42.430 align:start position:0% ID value. Yes, I will insert it like this. The 00:24:42.430 --> 00:24:42.440 align:start position:0% will insert it like this. The 00:24:42.440 --> 00:24:44.029 align:start position:0% will insert it like this. The second is the channel 00:24:44.029 --> 00:24:44.039 align:start position:0% second is the channel 00:24:44.039 --> 00:24:46.470 align:start position:0% second is the channel title. The scriber scribe 00:24:46.470 --> 00:24:46.480 align:start position:0% title. The scriber scribe 00:24:46.480 --> 00:24:47.909 align:start position:0% title. The scriber scribe count is what we received before. 00:24:47.909 --> 00:24:50.070 align:start position:0% count is what we received before. 00:24:50.070 --> 00:24:50.080 align:start position:0% 00:24:50.080 --> 00:24:52.350 align:start position:0% When getting the playlist ID value from the channel, 00:24:52.350 --> 00:24:52.360 align:start position:0% When getting the playlist ID value from the channel, 00:24:52.360 --> 00:24:54.190 align:start position:0% When getting the playlist ID value from the channel, there is a scribe count in statistics a. 00:24:54.190 --> 00:24:54.200 align:start position:0% there is a scribe count in statistics a. 00:24:54.200 --> 00:24:56.190 align:start position:0% there is a scribe count in statistics a. Let's insert this. The fourth is the video 00:24:56.190 --> 00:24:56.200 align:start position:0% Let's insert this. The fourth is the video 00:24:56.200 --> 00:24:57.549 align:start position:0% Let's insert this. The fourth is the video ID. The video ID again 00:24:57.549 --> 00:24:57.559 align:start position:0% ID. The video ID again 00:24:57.559 --> 00:24:59.830 align:start position:0% ID. The video ID again has the iterator ID value. The 00:24:59.830 --> 00:24:59.840 align:start position:0% has the iterator ID value. The 00:24:59.840 --> 00:25:03.110 align:start position:0% has the iterator ID value. The fifth is the bleed date. If you 00:25:03.110 --> 00:25:03.120 align:start position:0% fifth is the bleed date. If you 00:25:03.120 --> 00:25:05.230 align:start position:0% fifth is the bleed date. If you look at the value now, it has a format where the time value is included. 00:25:05.230 --> 00:25:05.240 align:start position:0% look at the value now, it has a format where the time value is included. 00:25:05.240 --> 00:25:07.310 align:start position:0% look at the value now, it has a format where the time value is included. However, since we 00:25:07.310 --> 00:25:07.320 align:start position:0% However, since we 00:25:07.320 --> 00:25:09.950 align:start position:0% However, since we just want to get the value, we 00:25:09.950 --> 00:25:12.389 align:start position:0% just want to get the value, we 00:25:12.389 --> 00:25:12.399 align:start position:0% 00:25:12.399 --> 00:25:14.269 align:start position:0% will modify the format by using the formula called for date. Format 00:25:14.269 --> 00:25:14.279 align:start position:0% will modify the format by using the formula called for date. Format 00:25:14.279 --> 00:25:16.230 align:start position:0% will modify the format by using the formula called for date. Format date like this and get the value like this. The 00:25:16.230 --> 00:25:16.240 align:start position:0% date like this and get the value like this. The 00:25:16.240 --> 00:25:18.190 align:start position:0% date like this and get the value like this. The sixth is the 00:25:18.190 --> 00:25:18.200 align:start position:0% sixth is the 00:25:18.200 --> 00:25:20.110 align:start position:0% sixth is the video title. I'll map it all like this. I'll 00:25:20.110 --> 00:25:21.830 align:start position:0% video title. I'll map it all like this. I'll 00:25:21.830 --> 00:25:21.840 align:start position:0% 00:25:21.840 --> 00:25:23.269 align:start position:0% map the easy ones first and 00:25:23.269 --> 00:25:23.279 align:start position:0% map the easy ones first and 00:25:23.279 --> 00:25:25.190 align:start position:0% map the easy ones first and explain the rest. Thumbnail URL. 00:25:25.190 --> 00:25:25.200 align:start position:0% explain the rest. Thumbnail URL. 00:25:25.200 --> 00:25:27.269 align:start position:0% explain the rest. Thumbnail URL. Next, for the tag, you can put this in. You 00:25:27.269 --> 00:25:29.870 align:start position:0% Next, for the tag, you can put this in. You 00:25:29.870 --> 00:25:31.430 align:start position:0% 00:25:31.430 --> 00:25:31.440 align:start position:0% 00:25:31.440 --> 00:25:33.750 align:start position:0% have to extract this by mapping the value below. It's row 1, right? Set it to 1. I 00:25:33.750 --> 00:25:36.269 align:start position:0% have to extract this by mapping the value below. It's row 1, right? Set it to 1. I 00:25:36.269 --> 00:25:36.279 align:start position:0% 00:25:36.279 --> 00:25:37.870 align:start position:0% 'll extract all the lists with tags attached below. 00:25:37.870 --> 00:25:37.880 align:start position:0% 'll extract all the lists with tags attached below. 00:25:37.880 --> 00:25:40.149 align:start position:0% 'll extract all the lists with tags attached below. Next, I'll set the category ID, description, 00:25:40.149 --> 00:25:40.159 align:start position:0% Next, I'll set the category ID, description, 00:25:40.159 --> 00:25:43.549 align:start position:0% Next, I'll set the category ID, description, views, comments, and likes. 00:25:43.549 --> 00:25:43.559 align:start position:0% views, comments, and likes. 00:25:43.559 --> 00:25:46.190 align:start position:0% views, comments, and likes. Next, I'll put in the video link and video length. For the 00:25:46.190 --> 00:25:46.200 align:start position:0% Next, I'll put in the video link and video length. For the 00:25:46.200 --> 00:25:48.510 align:start position:0% Next, I'll put in the video link and video length. For the video link, in the 00:25:48.510 --> 00:25:48.520 align:start position:0% video link, in the 00:25:48.520 --> 00:25:51.630 align:start position:0% video link, in the case of YouTube, use https, 00:25:51.630 --> 00:25:51.640 align:start position:0% case of YouTube, use https, 00:25:51.640 --> 00:25:53.950 align:start position:0% case of YouTube, use https, YouTube, and then a slash. Then, if you 00:25:53.950 --> 00:25:53.960 align:start position:0% YouTube, and then a slash. Then, if you 00:25:53.960 --> 00:25:55.950 align:start position:0% YouTube, and then a slash. Then, if you put in the video ID, 00:25:55.950 --> 00:25:55.960 align:start position:0% put in the video ID, 00:25:55.960 --> 00:25:58.669 align:start position:0% put in the video ID, this is a short URL. This 00:25:58.669 --> 00:25:58.679 align:start position:0% this is a short URL. This 00:25:58.679 --> 00:26:00.470 align:start position:0% this is a short URL. This can create a URL that can access the video. If 00:26:00.470 --> 00:26:02.389 align:start position:0% can create a URL that can access the video. If 00:26:02.389 --> 00:26:02.399 align:start position:0% 00:26:02.399 --> 00:26:04.230 align:start position:0% you set the ID value and video ID value like this, a 00:26:04.230 --> 00:26:04.240 align:start position:0% you set the ID value and video ID value like this, a 00:26:04.240 --> 00:26:05.990 align:start position:0% you set the ID value and video ID value like this, a link will be created and you 00:26:05.990 --> 00:26:06.000 align:start position:0% link will be created and you 00:26:06.000 --> 00:26:07.710 align:start position:0% link will be created and you can now access the video. Next, the 00:26:07.710 --> 00:26:07.720 align:start position:0% can now access the video. Next, the 00:26:07.720 --> 00:26:10.190 align:start position:0% can now access the video. Next, the video length is a bit complicated. If you 00:26:10.190 --> 00:26:10.200 align:start position:0% video length is a bit complicated. If you 00:26:10.200 --> 00:26:12.669 align:start position:0% video length is a bit complicated. If you look at the video length value here, the value is a bit unique. It's 00:26:12.669 --> 00:26:15.190 align:start position:0% look at the video length value here, the value is a bit unique. It's 00:26:15.190 --> 00:26:15.200 align:start position:0% 00:26:15.200 --> 00:26:16.909 align:start position:0% designated as PT 11 S. Then, this is an abbreviation 00:26:16.909 --> 00:26:16.919 align:start position:0% designated as PT 11 S. Then, this is an abbreviation 00:26:16.919 --> 00:26:18.909 align:start position:0% designated as PT 11 S. Then, this is an abbreviation for peri of time. This 00:26:18.909 --> 00:26:18.919 align:start position:0% for peri of time. This 00:26:18.919 --> 00:26:21.310 align:start position:0% for peri of time. This is a specific format that expresses the length. It 00:26:21.310 --> 00:26:21.320 align:start position:0% is a specific format that expresses the length. It 00:26:21.320 --> 00:26:23.470 align:start position:0% is a specific format that expresses the length. It means 11 seconds. 11s 00:26:23.470 --> 00:26:23.480 align:start position:0% means 11 seconds. 11s 00:26:23.480 --> 00:26:25.149 align:start position:0% means 11 seconds. 11s men and 1 hour. 10 minutes 00:26:25.149 --> 00:26:25.159 align:start position:0% men and 1 hour. 10 minutes 00:26:25.159 --> 00:26:28.909 align:start position:0% men and 1 hour. 10 minutes 10 seconds is expressed as 1h 10m 11S. 00:26:28.909 --> 00:26:28.919 align:start position:0% 10 seconds is expressed as 1h 10m 11S. 00:26:28.919 --> 00:26:31.110 align:start position:0% 10 seconds is expressed as 1h 10m 11S. So, if you 00:26:31.110 --> 00:26:31.120 align:start position:0% So, if you 00:26:31.120 --> 00:26:33.269 align:start position:0% So, if you just put the duration value like this, it's 00:26:33.269 --> 00:26:33.279 align:start position:0% just put the duration value like this, it's 00:26:33.279 --> 00:26:35.070 align:start position:0% just put the duration value like this, it's not a format that's easy for us to see, right? So, it would be 00:26:35.070 --> 00:26:37.029 align:start position:0% not a format that's easy for us to see, right? So, it would be 00:26:37.029 --> 00:26:37.039 align:start position:0% 00:26:37.039 --> 00:26:39.070 align:start position:0% good to change the format. When you change it, you can use the 00:26:39.070 --> 00:26:39.080 align:start position:0% good to change the format. When you change it, you can use the 00:26:39.080 --> 00:26:41.389 align:start position:0% good to change the format. When you change it, you can use the X expression after replaying and 00:26:41.389 --> 00:26:43.389 align:start position:0% X expression after replaying and 00:26:43.389 --> 00:26:43.399 align:start position:0% 00:26:43.399 --> 00:26:45.909 align:start position:0% specify the format you want to change and 00:26:45.909 --> 00:26:45.919 align:start position:0% specify the format you want to change and 00:26:45.919 --> 00:26:47.909 align:start position:0% specify the format you want to change and change it to the format you want. 00:26:47.909 --> 00:26:47.919 align:start position:0% change it to the format you want. 00:26:47.919 --> 00:26:50.750 align:start position:0% change it to the format you want. Here, X is a 00:26:50.750 --> 00:26:50.760 align:start position:0% Here, X is a 00:26:50.760 --> 00:26:53.510 align:start position:0% Here, X is a grammar that can express a text pattern. 00:26:53.510 --> 00:26:53.520 align:start position:0% grammar that can express a text pattern. 00:26:53.520 --> 00:26:55.510 align:start position:0% grammar that can express a text pattern. Using that grammar, we 00:26:55.510 --> 00:26:55.520 align:start position:0% Using that grammar, we 00:26:55.520 --> 00:26:57.710 align:start position:0% Using that grammar, we can specify the part we want and use the 00:26:57.710 --> 00:26:57.720 align:start position:0% can specify the part we want and use the 00:26:57.720 --> 00:26:59.549 align:start position:0% can specify the part we want and use the specified part to capture it and 00:26:59.549 --> 00:26:59.559 align:start position:0% specified part to capture it and 00:26:59.559 --> 00:27:01.470 align:start position:0% specified part to capture it and use it elsewhere, 00:27:01.470 --> 00:27:01.480 align:start position:0% use it elsewhere, 00:27:01.480 --> 00:27:04.029 align:start position:0% use it elsewhere, or, as in the current case, 00:27:04.029 --> 00:27:04.039 align:start position:0% or, as in the current case, 00:27:04.039 --> 00:27:05.870 align:start position:0% or, as in the current case, use it to modify the value to a different value. If 00:27:05.870 --> 00:27:08.549 align:start position:0% use it to modify the value to a different value. If 00:27:08.549 --> 00:27:08.559 align:start position:0% 00:27:08.559 --> 00:27:10.669 align:start position:0% you need an explanation of the basic structure related to X, I recommend that you 00:27:10.669 --> 00:27:10.679 align:start position:0% you need an explanation of the basic structure related to X, I recommend that you 00:27:10.679 --> 00:27:13.230 align:start position:0% you need an explanation of the basic structure related to X, I recommend that you refer to the X video that I covered previously. 00:27:13.230 --> 00:27:15.190 align:start position:0% refer to the X video that I covered previously. 00:27:15.190 --> 00:27:15.200 align:start position:0% 00:27:15.200 --> 00:27:17.430 align:start position:0% After you understand the basic concepts to some extent, when you actually use it, 00:27:17.430 --> 00:27:17.440 align:start position:0% After you understand the basic concepts to some extent, when you actually use it, 00:27:17.440 --> 00:27:19.789 align:start position:0% After you understand the basic concepts to some extent, when you actually use it, you can use the Choichi PT to explain the structure you want in 00:27:19.789 --> 00:27:19.799 align:start position:0% you can use the Choichi PT to explain the structure you want in 00:27:19.799 --> 00:27:22.350 align:start position:0% you can use the Choichi PT to explain the structure you want in detail and create an X and 00:27:22.350 --> 00:27:22.360 align:start position:0% detail and create an X and 00:27:22.360 --> 00:27:24.710 align:start position:0% detail and create an X and use it. I also created an X in advance. 00:27:24.710 --> 00:27:24.720 align:start position:0% use it. I also created an X in advance. 00:27:24.720 --> 00:27:26.950 align:start position:0% use it. I also created an X in advance. So I'll 00:27:26.950 --> 00:27:26.960 align:start position:0% So I'll 00:27:26.960 --> 00:27:29.230 align:start position:0% So I'll use the X that I created to set it. 00:27:29.230 --> 00:27:29.240 align:start position:0% use the X that I created to set it. 00:27:29.240 --> 00:27:31.470 align:start position:0% use the X that I created to set it. The X looks a bit complicated. 00:27:31.470 --> 00:27:31.480 align:start position:0% The X looks a bit complicated. 00:27:31.480 --> 00:27:33.070 align:start position:0% The X looks a bit complicated. So, I've set it up like this. Once. 00:27:33.070 --> 00:27:33.080 align:start position:0% So, I've set it up like this. Once. 00:27:33.080 --> 00:27:35.789 align:start position:0% So, I've set it up like this. Once. Then let's run once and get the video. 00:27:35.789 --> 00:27:35.799 align:start position:0% Then let's run once and get the video. 00:27:35.799 --> 00:27:40.269 align:start position:0% Then let's run once and get the video. 00:27:40.269 --> 00:27:43.149 align:start position:0% 00:27:43.149 --> 00:27:43.159 align:start position:0% 00:27:43.159 --> 00:27:45.110 align:start position:0% Since this is definitely using the official API, the speed is very 00:27:45.110 --> 00:27:45.120 align:start position:0% Since this is definitely using the official API, the speed is very 00:27:45.120 --> 00:27:46.789 align:start position:0% Since this is definitely using the official API, the speed is very fast. Since we put in a slip once, if you 00:27:46.789 --> 00:27:46.799 align:start position:0% fast. Since we put in a slip once, if you 00:27:46.799 --> 00:27:48.870 align:start position:0% fast. Since we put in a slip once, if you assume there is no slip, you 00:27:48.870 --> 00:27:50.950 align:start position:0% assume there is no slip, you 00:27:50.950 --> 00:27:50.960 align:start position:0% 00:27:50.960 --> 00:27:52.549 align:start position:0% can see that it is all executed in almost 1 second. And 00:27:52.549 --> 00:27:52.559 align:start position:0% can see that it is all executed in almost 1 second. And 00:27:52.559 --> 00:27:54.389 align:start position:0% can see that it is all executed in almost 1 second. And since we did a bulk update, we 00:27:54.389 --> 00:27:54.399 align:start position:0% since we did a bulk update, we 00:27:54.399 --> 00:27:56.110 align:start position:0% since we did a bulk update, we only have one operation now. But 00:27:56.110 --> 00:27:56.120 align:start position:0% only have one operation now. But 00:27:56.120 --> 00:27:58.149 align:start position:0% only have one operation now. But all 50 videos were imported into the sheet. 00:27:58.149 --> 00:27:58.159 align:start position:0% all 50 videos were imported into the sheet. 00:27:58.159 --> 00:28:00.269 align:start position:0% all 50 videos were imported into the sheet. Yes, up to 50 videos were 00:28:00.269 --> 00:28:00.279 align:start position:0% Yes, up to 50 videos were 00:28:00.279 --> 00:28:02.269 align:start position:0% Yes, up to 50 videos were imported. It is importing information well, 00:28:02.269 --> 00:28:02.279 align:start position:0% imported. It is importing information well, 00:28:02.279 --> 00:28:04.149 align:start position:0% imported. It is importing information well, but one thing that is 00:28:04.149 --> 00:28:04.159 align:start position:0% but one thing that is 00:28:04.159 --> 00:28:06.669 align:start position:0% but one thing that is regrettable is that when we collect API data, 00:28:06.669 --> 00:28:06.679 align:start position:0% regrettable is that when we collect API data, 00:28:06.679 --> 00:28:08.990 align:start position:0% regrettable is that when we collect API data, as I mentioned earlier, we can only 00:28:08.990 --> 00:28:09.000 align:start position:0% as I mentioned earlier, we can only 00:28:09.000 --> 00:28:11.310 align:start position:0% as I mentioned earlier, we can only import up to 50 video IDs at a time. 00:28:11.310 --> 00:28:11.320 align:start position:0% import up to 50 video IDs at a time. 00:28:11.320 --> 00:28:13.070 align:start position:0% import up to 50 video IDs at a time. But for example, if I am 00:28:13.070 --> 00:28:13.080 align:start position:0% But for example, if I am 00:28:13.080 --> 00:28:15.389 align:start position:0% But for example, if I am obsessed with Baby Monster and 00:28:15.389 --> 00:28:17.789 align:start position:0% obsessed with Baby Monster and 00:28:17.789 --> 00:28:17.799 align:start position:0% 00:28:17.799 --> 00:28:19.710 align:start position:0% want to collect all the videos on this channel at once, what 00:28:19.710 --> 00:28:19.720 align:start position:0% want to collect all the videos on this channel at once, what 00:28:19.720 --> 00:28:21.830 align:start position:0% want to collect all the videos on this channel at once, what should I do? If you 00:28:21.830 --> 00:28:21.840 align:start position:0% should I do? If you 00:28:21.840 --> 00:28:23.870 align:start position:0% should I do? If you want to import more than 50 videos like me, you have to 00:28:23.870 --> 00:28:23.880 align:start position:0% want to import more than 50 videos like me, you have to 00:28:23.880 --> 00:28:25.830 align:start position:0% want to import more than 50 videos like me, you have to use what the next page token knows. This 00:28:25.830 --> 00:28:25.840 align:start position:0% use what the next page token knows. This 00:28:25.840 --> 00:28:27.389 align:start position:0% use what the next page token knows. This next page 00:28:27.389 --> 00:28:27.399 align:start position:0% next page 00:28:27.399 --> 00:28:29.870 align:start position:0% next page token means that YouTube allows you to 00:28:29.870 --> 00:28:29.880 align:start position:0% token means that YouTube allows you to 00:28:29.880 --> 00:28:31.430 align:start position:0% token means that YouTube allows you to import up to 50 videos at once, but on the 00:28:31.430 --> 00:28:31.440 align:start position:0% import up to 50 videos at once, but on the 00:28:31.440 --> 00:28:33.269 align:start position:0% import up to 50 videos at once, but on the next page, you have to 00:28:33.269 --> 00:28:35.149 align:start position:0% next page, you have to 00:28:35.149 --> 00:28:35.159 align:start position:0% 00:28:35.159 --> 00:28:38.070 align:start position:0% set a separate key value to import from 51 to 100 and 00:28:38.070 --> 00:28:38.080 align:start position:0% set a separate key value to import from 51 to 100 and 00:28:38.080 --> 00:28:40.110 align:start position:0% set a separate key value to import from 51 to 100 and return it. Here, if you 00:28:40.110 --> 00:28:40.120 align:start position:0% return it. Here, if you 00:28:40.120 --> 00:28:42.549 align:start position:0% return it. Here, if you look at the API that gets the video ID, 00:28:42.549 --> 00:28:44.909 align:start position:0% look at the API that gets the video ID, 00:28:44.909 --> 00:28:44.919 align:start position:0% 00:28:44.919 --> 00:28:47.230 align:start position:0% there's a value called Next Page Token. If you access it with the key value, 00:28:47.230 --> 00:28:47.240 align:start position:0% there's a value called Next Page Token. If you access it with the key value, 00:28:47.240 --> 00:28:49.750 align:start position:0% there's a value called Next Page Token. If you access it with the key value, we can get the next 50 video list. 00:28:49.750 --> 00:28:49.760 align:start position:0% we can get the next 50 video list. 00:28:49.760 --> 00:28:51.230 align:start position:0% we can get the next 50 video list. So this 00:28:51.230 --> 00:28:51.240 align:start position:0% So this 00:28:51.240 --> 00:28:53.310 align:start position:0% So this Next Page Token's value 00:28:53.310 --> 00:28:53.320 align:start position:0% Next Page Token's value 00:28:53.320 --> 00:28:55.470 align:start position:0% Next Page Token's value will change every time. If you get 50 and then the next 00:28:55.470 --> 00:28:55.480 align:start position:0% will change every time. If you get 50 and then the next 00:28:55.480 --> 00:28:57.630 align:start position:0% will change every time. If you get 50 and then the next 50, there will be a 00:28:57.630 --> 00:28:57.640 align:start position:0% 50, there will be a 00:28:57.640 --> 00:28:59.269 align:start position:0% 50, there will be a different value for the Next Page Token in the ret. 00:28:59.269 --> 00:28:59.279 align:start position:0% different value for the Next Page Token in the ret. 00:28:59.279 --> 00:29:01.110 align:start position:0% different value for the Next Page Token in the ret. So you need to 00:29:01.110 --> 00:29:01.120 align:start position:0% So you need to 00:29:01.120 --> 00:29:03.389 align:start position:0% So you need to always get this and use it again to get the 00:29:03.389 --> 00:29:03.399 align:start position:0% always get this and use it again to get the 00:29:03.399 --> 00:29:05.549 align:start position:0% always get this and use it again to get the next list value and 00:29:05.549 --> 00:29:05.559 align:start position:0% next list value and 00:29:05.559 --> 00:29:07.389 align:start position:0% next list value and loop. So I 00:29:07.389 --> 00:29:07.399 align:start position:0% loop. So I 00:29:07.399 --> 00:29:09.509 align:start position:0% loop. So I 'll explain how to set it up. 00:29:09.509 --> 00:29:09.519 align:start position:0% 'll explain how to set it up. 00:29:09.519 --> 00:29:11.750 align:start position:0% 'll explain how to set it up. To set this up, I 00:29:11.750 --> 00:29:11.760 align:start position:0% To set this up, I 00:29:11.760 --> 00:29:13.789 align:start position:0% To set this up, I 'll add one more http mode. I'll 00:29:13.789 --> 00:29:13.799 align:start position:0% 'll add one more http mode. I'll 00:29:13.799 --> 00:29:15.669 align:start position:0% 'll add one more http mode. I'll add one more and put it in. 00:29:15.669 --> 00:29:15.679 align:start position:0% add one more and put it in. 00:29:15.679 --> 00:29:17.789 align:start position:0% add one more and put it in. And the reason I'm putting it in like this is that if you 00:29:17.789 --> 00:29:17.799 align:start position:0% And the reason I'm putting it in like this is that if you 00:29:17.799 --> 00:29:20.669 align:start position:0% And the reason I'm putting it in like this is that if you look at the http tool that gets the video ID, 00:29:20.669 --> 00:29:20.679 align:start position:0% look at the http tool that gets the video ID, 00:29:20.679 --> 00:29:23.269 align:start position:0% look at the http tool that gets the video ID, there's a value called Total Tr in the page info. 00:29:23.269 --> 00:29:23.279 align:start position:0% there's a value called Total Tr in the page info. 00:29:23.279 --> 00:29:25.870 align:start position:0% there's a value called Total Tr in the page info. This is the total number of videos. So 00:29:25.870 --> 00:29:25.880 align:start position:0% This is the total number of videos. So 00:29:25.880 --> 00:29:28.149 align:start position:0% This is the total number of videos. So before looping, I'll 00:29:28.149 --> 00:29:28.159 align:start position:0% before looping, I'll 00:29:28.159 --> 00:29:30.669 align:start position:0% before looping, I'll check this first. I 00:29:30.669 --> 00:29:30.679 align:start position:0% check this first. I 00:29:30.679 --> 00:29:32.549 align:start position:0% check this first. I added one more module. So 00:29:32.549 --> 00:29:32.559 align:start position:0% added one more module. So 00:29:32.559 --> 00:29:34.389 align:start position:0% added one more module. So why do I need to check this? We need to 00:29:34.389 --> 00:29:34.399 align:start position:0% why do I need to check this? We need to 00:29:34.399 --> 00:29:36.310 align:start position:0% why do I need to check this? We need to know how many videos there are in total so we 00:29:36.310 --> 00:29:36.320 align:start position:0% know how many videos there are in total so we 00:29:36.320 --> 00:29:38.630 align:start position:0% know how many videos there are in total so we can set how many times we'll loop. 00:29:38.630 --> 00:29:38.640 align:start position:0% can set how many times we'll loop. 00:29:38.640 --> 00:29:40.230 align:start position:0% can set how many times we'll loop. So check this first. And 00:29:40.230 --> 00:29:40.240 align:start position:0% So check this first. And 00:29:40.240 --> 00:29:42.470 align:start position:0% So check this first. And then 00:29:42.470 --> 00:29:42.480 align:start position:0% then 00:29:42.480 --> 00:29:44.230 align:start position:0% then before the loop, I'm going to do one more setting. I'm 00:29:44.230 --> 00:29:46.190 align:start position:0% before the loop, I'm going to do one more setting. I'm 00:29:46.190 --> 00:29:46.200 align:start position:0% 00:29:46.200 --> 00:29:48.430 align:start position:0% going to set one barrier. Set set variable and I'm going to 00:29:48.430 --> 00:29:48.440 align:start position:0% going to set one barrier. Set set variable and I'm going to 00:29:48.440 --> 00:29:50.549 align:start position:0% going to set one barrier. Set set variable and I'm going to create something called a next page token. I'm going to 00:29:50.549 --> 00:29:50.559 align:start position:0% create something called a next page token. I'm going to 00:29:50.559 --> 00:29:52.590 align:start position:0% create something called a next page token. I'm going to create something that the next page token knows. Right now, 00:29:52.590 --> 00:29:52.600 align:start position:0% create something that the next page token knows. Right now, 00:29:52.600 --> 00:29:54.710 align:start position:0% create something that the next page token knows. Right now, we still have a module to get the video ID value at 00:29:54.710 --> 00:29:54.720 align:start position:0% we still have a module to get the video ID value at 00:29:54.720 --> 00:29:56.950 align:start position:0% we still have a module to get the video ID value at the back. 00:29:56.950 --> 00:29:56.960 align:start position:0% the back. 00:29:56.960 --> 00:29:58.590 align:start position:0% the back. So there's no value yet. 00:29:58.590 --> 00:29:58.600 align:start position:0% So there's no value yet. 00:29:58.600 --> 00:30:00.750 align:start position:0% So there's no value yet. So I'm going to empty it with an empty string for now. I'm going to 00:30:00.750 --> 00:30:00.760 align:start position:0% So I'm going to empty it with an empty string for now. I'm going to 00:30:00.760 --> 00:30:02.509 align:start position:0% So I'm going to empty it with an empty string for now. I'm going to empty it and then I'm going to 00:30:02.509 --> 00:30:02.519 align:start position:0% empty it and then I'm going to 00:30:02.519 --> 00:30:04.549 align:start position:0% empty it and then I'm going to get it here. The module in front is 00:30:04.549 --> 00:30:04.559 align:start position:0% get it here. The module in front is 00:30:04.559 --> 00:30:06.430 align:start position:0% get it here. The module in front is just for checking the number of videos. 00:30:06.430 --> 00:30:06.440 align:start position:0% just for checking the number of videos. 00:30:06.440 --> 00:30:08.549 align:start position:0% just for checking the number of videos. Next, I'm going to 00:30:08.549 --> 00:30:08.559 align:start position:0% Next, I'm going to 00:30:08.559 --> 00:30:10.990 align:start position:0% Next, I'm going to set a repeater module to run the loop at the back. 00:30:10.990 --> 00:30:12.830 align:start position:0% set a repeater module to run the loop at the back. 00:30:12.830 --> 00:30:12.840 align:start position:0% 00:30:12.840 --> 00:30:14.950 align:start position:0% I'm going to set a repeater. What this repeater does is, 00:30:14.950 --> 00:30:14.960 align:start position:0% I'm going to set a repeater. What this repeater does is, 00:30:14.960 --> 00:30:17.430 align:start position:0% I'm going to set a repeater. What this repeater does is, there's a part behind this repeater. It 00:30:17.430 --> 00:30:17.440 align:start position:0% there's a part behind this repeater. It 00:30:17.440 --> 00:30:19.710 align:start position:0% there's a part behind this repeater. It repeats the module several times. 00:30:19.710 --> 00:30:19.720 align:start position:0% repeats the module several times. 00:30:19.720 --> 00:30:21.590 align:start position:0% repeats the module several times. How many times do you want to repeat it? 00:30:21.590 --> 00:30:21.600 align:start position:0% How many times do you want to repeat it? 00:30:21.600 --> 00:30:24.029 align:start position:0% How many times do you want to repeat it? For example, if it's 1 now and repeat 3, it will 00:30:24.029 --> 00:30:24.039 align:start position:0% For example, if it's 1 now and repeat 3, it will 00:30:24.039 --> 00:30:26.389 align:start position:0% For example, if it's 1 now and repeat 3, it will repeat three times like 1 2 3. If you 00:30:26.389 --> 00:30:26.399 align:start position:0% repeat three times like 1 2 3. If you 00:30:26.399 --> 00:30:28.029 align:start position:0% repeat three times like 1 2 3. If you look at the advance here, you 00:30:28.029 --> 00:30:28.039 align:start position:0% look at the advance here, you 00:30:28.039 --> 00:30:30.070 align:start position:0% look at the advance here, you can also set the step. What is the step? If you 00:30:30.070 --> 00:30:30.080 align:start position:0% can also set the step. What is the step? If you 00:30:30.080 --> 00:30:31.750 align:start position:0% can also set the step. What is the step? If you set the step to 1, it becomes 1 2 3. If you 00:30:31.750 --> 00:30:31.760 align:start position:0% set the step to 1, it becomes 1 2 3. If you 00:30:31.760 --> 00:30:33.789 align:start position:0% set the step to 1, it becomes 1 2 3. If you set the step to 2, it 00:30:33.789 --> 00:30:33.799 align:start position:0% set the step to 2, it 00:30:33.799 --> 00:30:35.470 align:start position:0% set the step to 2, it increases like 1 3 5. It works. 00:30:35.470 --> 00:30:35.480 align:start position:0% increases like 1 3 5. It works. 00:30:35.480 --> 00:30:37.070 align:start position:0% increases like 1 3 5. It works. We just set it to 1 and 00:30:37.070 --> 00:30:37.080 align:start position:0% We just set it to 1 and 00:30:37.080 --> 00:30:39.110 align:start position:0% We just set it to 1 and repeat. We will specify how many times it 00:30:39.110 --> 00:30:39.120 align:start position:0% repeat. We will specify how many times it 00:30:39.120 --> 00:30:41.630 align:start position:0% repeat. We will specify how many times it should be repeated based on the number of videos. 00:30:41.630 --> 00:30:41.640 align:start position:0% should be repeated based on the number of videos. 00:30:41.640 --> 00:30:43.430 align:start position:0% should be repeated based on the number of videos. Ah, we 00:30:43.430 --> 00:30:43.440 align:start position:0% Ah, we 00:30:43.440 --> 00:30:45.190 align:start position:0% Ah, we need to get the number of videos, so I will 00:30:45.190 --> 00:30:45.200 align:start position:0% need to get the number of videos, so I will 00:30:45.200 --> 00:30:47.430 align:start position:0% need to get the number of videos, so I will repeat this once more. 00:30:47.430 --> 00:30:47.440 align:start position:0% repeat this once more. 00:30:47.440 --> 00:30:49.230 align:start position:0% repeat this once more. Unlink it and repeat only the first part. 00:30:49.230 --> 00:30:49.240 align:start position:0% Unlink it and repeat only the first part. 00:30:49.240 --> 00:30:51.350 align:start position:0% Unlink it and repeat only the first part. Then, the 00:30:51.350 --> 00:30:51.360 align:start position:0% Then, the 00:30:51.360 --> 00:30:53.110 align:start position:0% Then, the number of videos appears in the page info in the data. 00:30:53.110 --> 00:30:53.120 align:start position:0% number of videos appears in the page info in the data. 00:30:53.120 --> 00:30:54.950 align:start position:0% number of videos appears in the page info in the data. Reconnect it and now the 00:30:54.950 --> 00:30:54.960 align:start position:0% Reconnect it and now the 00:30:54.960 --> 00:30:57.350 align:start position:0% Reconnect it and now the total ret value appears in the page info. Okay, 00:30:57.350 --> 00:30:57.360 align:start position:0% total ret value appears in the page info. Okay, 00:30:57.360 --> 00:31:00.149 align:start position:0% total ret value appears in the page info. Okay, 420 1 is the total ret. Results 00:31:00.149 --> 00:31:00.159 align:start position:0% 420 1 is the total ret. Results 00:31:00.159 --> 00:31:01.870 align:start position:0% 420 1 is the total ret. Results per page. So now, if we 00:31:01.870 --> 00:31:01.880 align:start position:0% per page. So now, if we 00:31:01.880 --> 00:31:04.470 align:start position:0% per page. So now, if we divide it by 50, set the operator and 00:31:04.470 --> 00:31:04.480 align:start position:0% divide it by 50, set the operator and 00:31:04.480 --> 00:31:06.269 align:start position:0% divide it by 50, set the operator and select divide like this. 00:31:06.269 --> 00:31:06.279 align:start position:0% select divide like this. 00:31:06.279 --> 00:31:08.029 align:start position:0% select divide like this. If this is 88, for example, it will repeat eight times. 00:31:08.029 --> 00:31:08.039 align:start position:0% If this is 88, for example, it will repeat eight times. 00:31:08.039 --> 00:31:10.310 align:start position:0% If this is 88, for example, it will repeat eight times. But if we do not 00:31:10.310 --> 00:31:10.320 align:start position:0% But if we do not 00:31:10.320 --> 00:31:12.509 align:start position:0% But if we do not have 450 and have a video base of more than 400, the 00:31:12.509 --> 00:31:15.149 align:start position:0% have 450 and have a video base of more than 400, the 00:31:15.149 --> 00:31:15.159 align:start position:0% 00:31:15.159 --> 00:31:17.029 align:start position:0% number may come out like 8.2 8.3. 00:31:17.029 --> 00:31:17.039 align:start position:0% number may come out like 8.2 8.3. 00:31:17.039 --> 00:31:19.669 align:start position:0% number may come out like 8.2 8.3. In that case, we need to get the remaining videos, so we 00:31:19.669 --> 00:31:19.679 align:start position:0% In that case, we need to get the remaining videos, so we 00:31:19.679 --> 00:31:21.350 align:start position:0% In that case, we need to get the remaining videos, so we need to repeat it once more. 00:31:21.350 --> 00:31:21.360 align:start position:0% need to repeat it once more. 00:31:21.360 --> 00:31:23.110 align:start position:0% need to repeat it once more. So when you set it like that, you can round it up. 00:31:23.110 --> 00:31:23.120 align:start position:0% So when you set it like that, you can round it up. 00:31:23.120 --> 00:31:25.269 align:start position:0% So when you set it like that, you can round it up. Li means 00:31:25.269 --> 00:31:25.279 align:start position:0% Li means 00:31:25.279 --> 00:31:27.310 align:start position:0% Li means rounding up. 8.2m 00:31:27.310 --> 00:31:27.320 align:start position:0% rounding up. 8.2m 00:31:27.320 --> 00:31:28.789 align:start position:0% rounding up. 8.2m Just make it 9. If you 00:31:28.789 --> 00:31:28.799 align:start position:0% Just make it 9. If you 00:31:28.799 --> 00:31:31.029 align:start position:0% Just make it 9. If you do it like this. 00:31:31.029 --> 00:31:31.039 align:start position:0% do it like this. 00:31:31.039 --> 00:31:33.190 align:start position:0% do it like this. You can set it to repeat as many times as you want. 00:31:33.190 --> 00:31:33.200 align:start position:0% You can set it to repeat as many times as you want. 00:31:33.200 --> 00:31:34.750 align:start position:0% You can set it to repeat as many times as you want. Now that the repeater setting is 00:31:34.750 --> 00:31:34.760 align:start position:0% Now that the repeater setting is 00:31:34.760 --> 00:31:37.470 align:start position:0% Now that the repeater setting is complete, 00:31:37.470 --> 00:31:37.480 align:start position:0% complete, 00:31:37.480 --> 00:31:38.870 align:start position:0% complete, add one more query string to the http module. 00:31:38.870 --> 00:31:40.549 align:start position:0% add one more query string to the http module. 00:31:40.549 --> 00:31:40.559 align:start position:0% 00:31:40.559 --> 00:31:42.629 align:start position:0% If you go into the list of playlist items, there 00:31:42.629 --> 00:31:42.639 align:start position:0% If you go into the list of playlist items, there 00:31:42.639 --> 00:31:44.470 align:start position:0% If you go into the list of playlist items, there is a parameter that the page token knows. If 00:31:44.470 --> 00:31:44.480 align:start position:0% is a parameter that the page token knows. If 00:31:44.480 --> 00:31:46.629 align:start position:0% is a parameter that the page token knows. If we put the next page token ID here, we 00:31:46.629 --> 00:31:48.669 align:start position:0% we put the next page token ID here, we 00:31:48.669 --> 00:31:48.679 align:start position:0% 00:31:48.679 --> 00:31:50.629 align:start position:0% can get the next ID list. 00:31:50.629 --> 00:31:50.639 align:start position:0% can get the next ID list. 00:31:50.639 --> 00:31:52.870 align:start position:0% can get the next ID list. So we need to set this up and put it in. But 00:31:52.870 --> 00:31:52.880 align:start position:0% So we need to set this up and put it in. But 00:31:52.880 --> 00:31:54.870 align:start position:0% So we need to set this up and put it in. But when we put this value in, 00:31:54.870 --> 00:31:54.880 align:start position:0% when we put this value in, 00:31:54.880 --> 00:31:56.870 align:start position:0% when we put this value in, we created a variable, but 00:31:56.870 --> 00:31:56.880 align:start position:0% we created a variable, but 00:31:56.880 --> 00:31:58.750 align:start position:0% we created a variable, but this is the MT string. 00:31:58.750 --> 00:31:58.760 align:start position:0% this is the MT string. 00:31:58.760 --> 00:32:00.909 align:start position:0% this is the MT string. So we need to create 00:32:00.909 --> 00:32:00.919 align:start position:0% So we need to create 00:32:00.919 --> 00:32:02.590 align:start position:0% So we need to create a new next page token that we will actually use in this loop. We will 00:32:02.590 --> 00:32:04.190 align:start position:0% a new next page token that we will actually use in this loop. We will 00:32:04.190 --> 00:32:04.200 align:start position:0% 00:32:04.200 --> 00:32:05.909 align:start position:0% do something called get valable here. We 00:32:05.909 --> 00:32:08.509 align:start position:0% do something called get valable here. We 00:32:08.509 --> 00:32:08.519 align:start position:0% 00:32:08.519 --> 00:32:10.470 align:start position:0% will get the variable called next page token. And we will put it in here. We 00:32:10.470 --> 00:32:12.549 align:start position:0% will get the variable called next page token. And we will put it in here. We 00:32:12.549 --> 00:32:12.559 align:start position:0% 00:32:12.559 --> 00:32:14.750 align:start position:0% will put the next page token that we got with get barrier. We 00:32:14.750 --> 00:32:14.760 align:start position:0% will put the next page token that we got with get barrier. We 00:32:14.760 --> 00:32:17.029 align:start position:0% will put the next page token that we got with get barrier. We put the value that we got. But at first, 00:32:17.029 --> 00:32:17.039 align:start position:0% put the value that we got. But at first, 00:32:17.039 --> 00:32:18.950 align:start position:0% put the value that we got. But at first, when we created the variable, we will get this value that does 00:32:18.950 --> 00:32:18.960 align:start position:0% when we created the variable, we will get this value that does 00:32:18.960 --> 00:32:20.710 align:start position:0% when we created the variable, we will get this value that does not have the MT string. 00:32:20.710 --> 00:32:20.720 align:start position:0% not have the MT string. 00:32:20.720 --> 00:32:22.990 align:start position:0% not have the MT string. So since we 00:32:22.990 --> 00:32:23.000 align:start position:0% So since we 00:32:23.000 --> 00:32:25.029 align:start position:0% So since we put that in, it 00:32:25.029 --> 00:32:25.039 align:start position:0% put that in, it 00:32:25.039 --> 00:32:27.350 align:start position:0% put that in, it will be set the same as if we did not put it in. So we 00:32:27.350 --> 00:32:28.950 align:start position:0% will be set the same as if we did not put it in. So we 00:32:28.950 --> 00:32:28.960 align:start position:0% 00:32:28.960 --> 00:32:31.470 align:start position:0% will just get all the first ID values. But when we get it, this 00:32:31.470 --> 00:32:31.480 align:start position:0% will just get all the first ID values. But when we get it, this 00:32:31.480 --> 00:32:33.310 align:start position:0% will just get all the first ID values. But when we get it, this next page token value. I'll get it. 00:32:33.310 --> 00:32:33.320 align:start position:0% next page token value. I'll get it. 00:32:33.320 --> 00:32:35.070 align:start position:0% next page token value. I'll get it. Then you can update this. 00:32:35.070 --> 00:32:35.080 align:start position:0% Then you can update this. 00:32:35.080 --> 00:32:37.269 align:start position:0% Then you can update this. After the sleep, I'll add 00:32:37.269 --> 00:32:37.279 align:start position:0% After the sleep, I'll add 00:32:37.279 --> 00:32:39.470 align:start position:0% After the sleep, I'll add one more ad module here. And I'll 00:32:39.470 --> 00:32:39.480 align:start position:0% one more ad module here. And I'll 00:32:39.480 --> 00:32:41.789 align:start position:0% one more ad module here. And I'll update the barrier again to 00:32:41.789 --> 00:32:41.799 align:start position:0% update the barrier again to 00:32:41.799 --> 00:32:43.909 align:start position:0% update the barrier again to update the next page token value. 00:32:43.909 --> 00:32:43.919 align:start position:0% update the next page token value. 00:32:43.919 --> 00:32:45.470 align:start position:0% update the next page token value. And here, you can 00:32:45.470 --> 00:32:47.629 align:start position:0% And here, you can 00:32:47.629 --> 00:32:47.639 align:start position:0% 00:32:47.639 --> 00:32:49.909 align:start position:0% get the next page token value from the module you recently got. 00:32:49.909 --> 00:32:49.919 align:start position:0% get the next page token value from the module you recently got. 00:32:49.919 --> 00:32:51.430 align:start position:0% get the next page token value from the module you recently got. You can set it like this. Then, 00:32:51.430 --> 00:32:51.440 align:start position:0% You can set it like this. Then, 00:32:51.440 --> 00:32:53.950 align:start position:0% You can set it like this. Then, what happens now is that the 00:32:53.950 --> 00:32:53.960 align:start position:0% what happens now is that the 00:32:53.960 --> 00:32:55.990 align:start position:0% what happens now is that the next page token that was received by returning the API is 00:32:55.990 --> 00:32:56.000 align:start position:0% next page token that was received by returning the API is 00:32:56.000 --> 00:32:57.830 align:start position:0% next page token that was received by returning the API is saved here. Then, the saved value is 00:32:57.830 --> 00:32:57.840 align:start position:0% saved here. Then, the saved value is 00:32:57.840 --> 00:32:59.750 align:start position:0% saved here. Then, the saved value is looped, right? So, 00:32:59.750 --> 00:32:59.760 align:start position:0% looped, right? So, 00:32:59.760 --> 00:33:02.230 align:start position:0% looped, right? So, after saving it here, we 00:33:02.230 --> 00:33:02.240 align:start position:0% after saving it here, we 00:33:02.240 --> 00:33:03.990 align:start position:0% after saving it here, we 'll update 50 once. And the loop is looped and comes back, and 00:33:03.990 --> 00:33:04.000 align:start position:0% 'll update 50 once. And the loop is looped and comes back, and 00:33:04.000 --> 00:33:06.629 align:start position:0% 'll update 50 once. And the loop is looped and comes back, and here, we 00:33:06.629 --> 00:33:09.110 align:start position:0% here, we 00:33:09.110 --> 00:33:09.120 align:start position:0% 00:33:09.120 --> 00:33:11.509 align:start position:0% get the next page token value as get barrier. At this time, 00:33:11.509 --> 00:33:11.519 align:start position:0% get the next page token value as get barrier. At this time, 00:33:11.519 --> 00:33:13.269 align:start position:0% get the next page token value as get barrier. At this time, since we updated the next page token value, we 00:33:13.269 --> 00:33:13.279 align:start position:0% since we updated the next page token value, we 00:33:13.279 --> 00:33:15.149 align:start position:0% since we updated the next page token value, we get this new value. Then, we'll 00:33:15.149 --> 00:33:17.629 align:start position:0% get this new value. Then, we'll 00:33:17.629 --> 00:33:19.710 align:start position:0% 00:33:19.710 --> 00:33:19.720 align:start position:0% 00:33:19.720 --> 00:33:21.870 align:start position:0% get the 50 video IDs after the 50 that were previously got as a module again. 00:33:21.870 --> 00:33:21.880 align:start position:0% get the 50 video IDs after the 50 that were previously got as a module again. 00:33:21.880 --> 00:33:24.149 align:start position:0% get the 50 video IDs after the 50 that were previously got as a module again. After getting that, we'll get the next page token after those 50. 00:33:24.149 --> 00:33:25.629 align:start position:0% After getting that, we'll get the next page token after those 50. 00:33:25.629 --> 00:33:25.639 align:start position:0% 00:33:25.639 --> 00:33:27.350 align:start position:0% And then, we'll update the 00:33:27.350 --> 00:33:27.360 align:start position:0% And then, we'll update the 00:33:27.360 --> 00:33:28.830 align:start position:0% And then, we'll update the videos for the 50 that were newly got. And when the 00:33:28.830 --> 00:33:28.840 align:start position:0% videos for the 50 that were newly got. And when the 00:33:28.840 --> 00:33:30.830 align:start position:0% videos for the 50 that were newly got. And when the loop is 00:33:30.830 --> 00:33:30.840 align:start position:0% loop is 00:33:30.840 --> 00:33:33.190 align:start position:0% loop is looped again, the newly created next page 00:33:33.190 --> 00:33:33.200 align:start position:0% looped again, the newly created next page 00:33:33.200 --> 00:33:35.190 align:start position:0% looped again, the newly created next page token is used. This is how you update the variable, and 00:33:35.190 --> 00:33:35.200 align:start position:0% token is used. This is how you update the variable, and 00:33:35.200 --> 00:33:37.310 align:start position:0% token is used. This is how you update the variable, and then you put it here. 00:33:37.310 --> 00:33:37.320 align:start position:0% then you put it here. 00:33:37.320 --> 00:33:38.990 align:start position:0% then you put it here. So, you can update the 00:33:38.990 --> 00:33:39.000 align:start position:0% So, you can update the 00:33:39.000 --> 00:33:41.269 align:start position:0% So, you can update the next page token 00:33:41.269 --> 00:33:41.279 align:start position:0% next page token 00:33:41.279 --> 00:33:43.950 align:start position:0% next page token value and get video information by looping like this. If you 00:33:43.950 --> 00:33:43.960 align:start position:0% value and get video information by looping like this. If you 00:33:43.960 --> 00:33:45.830 align:start position:0% value and get video information by looping like this. If you set it like this, there are 00:33:45.830 --> 00:33:45.840 align:start position:0% set it like this, there are 00:33:45.840 --> 00:33:47.950 align:start position:0% set it like this, there are only 50 now, but 00:33:47.950 --> 00:33:49.990 align:start position:0% only 50 now, but 00:33:49.990 --> 00:33:50.000 align:start position:0% 00:33:50.000 --> 00:33:51.830 align:start position:0% 00:33:51.830 --> 00:33:51.840 align:start position:0% 00:33:51.840 --> 00:33:54.750 align:start position:0% let's run this again. Then, 50 wo 00:33:54.750 --> 00:33:54.760 align:start position:0% let's run this again. Then, 50 wo 00:33:54.760 --> 00:33:56.389 align:start position:0% let's run this again. Then, 50 wo n't be executed at first because we've 00:33:56.389 --> 00:33:56.399 align:start position:0% n't be executed at first because we've 00:33:56.399 --> 00:33:58.350 align:start position:0% n't be executed at first because we've already brought 50. But 00:33:58.350 --> 00:33:58.360 align:start position:0% already brought 50. But 00:33:58.360 --> 00:34:00.750 align:start position:0% already brought 50. But from then on, they'll pass and be brought. Now, 00:34:00.750 --> 00:34:00.760 align:start position:0% from then on, they'll pass and be brought. Now, 00:34:00.760 --> 00:34:05.789 align:start position:0% from then on, they'll pass and be brought. Now, the loop keeps going. 00:34:05.789 --> 00:34:05.799 align:start position:0% 00:34:05.799 --> 00:34:09.190 align:start position:0% Yes, it's been run six times. Now that it's all done, let's 00:34:09.190 --> 00:34:11.869 align:start position:0% Yes, it's been run six times. Now that it's all done, let's 00:34:11.869 --> 00:34:11.879 align:start position:0% 00:34:11.879 --> 00:34:14.550 align:start position:0% take a look at the sheet. If you look at the sheet, you can 00:34:14.550 --> 00:34:17.629 align:start position:0% take a look at the sheet. If you look at the sheet, you can 00:34:17.629 --> 00:34:17.639 align:start position:0% 00:34:17.639 --> 00:34:20.550 align:start position:0% see that all 427 video values ​​have been collected like this, from the first video to the most recent video. 00:34:20.550 --> 00:34:20.560 align:start position:0% see that all 427 video values ​​have been collected like this, from the first video to the most recent video. 00:34:20.560 --> 00:34:22.950 align:start position:0% see that all 427 video values ​​have been collected like this, from the first video to the most recent video. Today, we looked at how to collect YouTube video data 00:34:22.950 --> 00:34:22.960 align:start position:0% Today, we looked at how to collect YouTube video data 00:34:22.960 --> 00:34:25.629 align:start position:0% Today, we looked at how to collect YouTube video data for free without coding by utilizing the official YouTube API in Make. 00:34:25.629 --> 00:34:27.829 align:start position:0% for free without coding by utilizing the official YouTube API in Make. 00:34:27.829 --> 00:34:29.950 align:start position:0% 00:34:29.950 --> 00:34:32.510 align:start position:0% 00:34:32.510 --> 00:34:34.750 align:start position:0% 00:34:34.750 --> 00:34:34.760 align:start position:0% 00:34:34.760 --> 00:34:37.069 align:start position:0% Since it's data provided directly by official APIs like YouTube API, it has the advantage of being able to collect data with high accuracy, stability, and 00:34:37.069 --> 00:34:37.079 align:start position:0% Since it's data provided directly by official APIs like YouTube API, it has the advantage of being able to collect data with high accuracy, stability, and 00:34:37.079 --> 00:34:38.869 align:start position:0% Since it's data provided directly by official APIs like YouTube API, it has the advantage of being able to collect data with high accuracy, stability, and speed. 00:34:38.869 --> 00:34:38.879 align:start position:0% speed. 00:34:38.879 --> 00:34:40.909 align:start position:0% speed. Of course, services do 00:34:40.909 --> 00:34:43.230 align:start position:0% Of course, services do 00:34:43.230 --> 00:34:43.240 align:start position:0% 00:34:43.240 --> 00:34:45.510 align:start position:0% n't want to collect a large amount of their stored data. 00:34:45.510 --> 00:34:45.520 align:start position:0% n't want to collect a large amount of their stored data. 00:34:45.520 --> 00:34:47.869 align:start position:0% n't want to collect a large amount of their stored data. So, there's usually a set API limit. 00:34:47.869 --> 00:34:47.879 align:start position:0% So, there's usually a set API limit. 00:34:47.879 --> 00:34:50.430 align:start position:0% So, there's usually a set API limit. Nevertheless, as you can see, you can collect 00:34:50.430 --> 00:34:50.440 align:start position:0% Nevertheless, as you can see, you can collect 00:34:50.440 --> 00:34:53.270 align:start position:0% Nevertheless, as you can see, you can collect all the video information of a specific channel in a day. The API provides a 00:34:53.270 --> 00:34:53.280 align:start position:0% all the video information of a specific channel in a day. The API provides a 00:34:53.280 --> 00:34:56.069 align:start position:0% all the video information of a specific channel in a day. The API provides a generous limit to the extent that you can collect. 00:34:56.069 --> 00:34:56.079 align:start position:0% generous limit to the extent that you can collect. 00:34:56.079 --> 00:34:58.430 align:start position:0% generous limit to the extent that you can collect. Also, even if it is 00:34:58.430 --> 00:34:58.440 align:start position:0% Also, even if it is 00:34:58.440 --> 00:35:00.790 align:start position:0% Also, even if it is not YouTube, it provides an official API. If 00:35:00.790 --> 00:35:00.800 align:start position:0% not YouTube, it provides an official API. If 00:35:00.800 --> 00:35:03.150 align:start position:0% not YouTube, it provides an official API. If Make does not support the module, 00:35:03.150 --> 00:35:05.030 align:start position:0% Make does not support the module, 00:35:05.030 --> 00:35:05.040 align:start position:0% 00:35:05.040 --> 00:35:07.550 align:start position:0% check the official API document as you saw in today's video, 00:35:07.550 --> 00:35:07.560 align:start position:0% check the official API document as you saw in today's video, 00:35:07.560 --> 00:35:09.390 align:start position:0% check the official API document as you saw in today's video, understand the API structure first, and then 00:35:09.390 --> 00:35:09.400 align:start position:0% understand the API structure first, and then 00:35:09.400 --> 00:35:11.990 align:start position:0% understand the API structure first, and then use the http mode in Make to 00:35:11.990 --> 00:35:12.000 align:start position:0% use the http mode in Make to 00:35:12.000 --> 00:35:14.190 align:start position:0% use the http mode in Make to connect the API and use it. You can 00:35:14.190 --> 00:35:14.200 align:start position:0% connect the API and use it. You can 00:35:14.200 --> 00:35:16.630 align:start position:0% connect the API and use it. You can collect and use data from various services without coding. 00:35:16.630 --> 00:35:16.640 align:start position:0% collect and use data from various services without coding. 00:35:16.640 --> 00:35:18.470 align:start position:0% collect and use data from various services without coding. Therefore, 00:35:18.470 --> 00:35:20.510 align:start position:0% Therefore, 00:35:20.510 --> 00:35:20.520 align:start position:0% 00:35:20.520 --> 00:35:23.030 align:start position:0% before considering web crawling for data collection, it would be good to first check 00:35:23.030 --> 00:35:23.040 align:start position:0% before considering web crawling for data collection, it would be good to first check 00:35:23.040 --> 00:35:25.349 align:start position:0% before considering web crawling for data collection, it would be good to first check whether the service in question provides an official API. 00:35:25.349 --> 00:35:25.359 align:start position:0% whether the service in question provides an official API. 00:35:25.359 --> 00:35:27.030 align:start position:0% whether the service in question provides an official API. Then, 00:35:27.030 --> 00:35:27.040 align:start position:0% Then, 00:35:27.040 --> 00:35:28.790 align:start position:0% Then, I will come back 00:35:28.790 --> 00:35:28.800 align:start position:0% I will come back 00:35:28.800 --> 00:35:30.630 align:start position:0% I will come back with a method to build a system that can increase productivity. If 00:35:30.630 --> 00:35:32.550 align:start position:0% with a method to build a system that can increase productivity. If 00:35:32.550 --> 00:35:32.560 align:start position:0% 00:35:32.560 --> 00:35:34.670 align:start position:0% you are interested, please subscribe and like and set notifications. 00:35:34.670 --> 00:35:34.680 align:start position:0% you are interested, please subscribe and like and set notifications. 00:35:34.680 --> 00:35:36.870 align:start position:0% you are interested, please subscribe and like and set notifications. This was Mr. Balja of Citizen Education. 00:35:36.870 --> 00:35:38.400 align:start position:0% This was Mr. Balja of Citizen Education. 00:35:38.400 --> 00:35:38.410 align:start position:0% 00:35:38.410 --> 00:35:52.900 align:start position:0% [Music]