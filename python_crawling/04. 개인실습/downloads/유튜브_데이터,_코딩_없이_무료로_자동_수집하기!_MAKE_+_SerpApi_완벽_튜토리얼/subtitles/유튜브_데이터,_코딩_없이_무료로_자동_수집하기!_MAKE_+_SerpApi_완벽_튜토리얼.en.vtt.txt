WEBVTT Kind: captions Language: en 00:00:02.110 --> 00:00:02.120 align:start position:0% 00:00:02.120 --> 00:00:04.070 align:start position:0% what YouTube channels are producing videos with keywords you are interested in? You 00:00:04.070 --> 00:00:05.789 align:start position:0% what YouTube channels are producing videos with keywords you are interested in? You 00:00:05.789 --> 00:00:08.110 align:start position:0% 00:00:08.110 --> 00:00:08.120 align:start position:0% 00:00:08.120 --> 00:00:09.990 align:start position:0% may be curious simply for personal viewing, but you 00:00:09.990 --> 00:00:12.470 align:start position:0% may be curious simply for personal viewing, but you 00:00:12.470 --> 00:00:14.509 align:start position:0% 00:00:14.509 --> 00:00:17.390 align:start position:0% 00:00:17.390 --> 00:00:19.390 align:start position:0% 00:00:19.390 --> 00:00:21.590 align:start position:0% 00:00:21.590 --> 00:00:21.600 align:start position:0% 00:00:21.600 --> 00:00:23.390 align:start position:0% may also want to collect videos or channels related to keywords of interest for reference in content production or, as I showed you in the last video, when you want to restrict outbound marketing to YouTubers. If you 00:00:23.390 --> 00:00:23.400 align:start position:0% may also want to collect videos or channels related to keywords of interest for reference in content production or, as I showed you in the last video, when you want to restrict outbound marketing to YouTubers. If you 00:00:23.400 --> 00:00:25.269 align:start position:0% may also want to collect videos or channels related to keywords of interest for reference in content production or, as I showed you in the last video, when you want to restrict outbound marketing to YouTubers. If you use web crawling, you can collect the YouTube data you want in a 00:00:25.269 --> 00:00:25.279 align:start position:0% use web crawling, you can collect the YouTube data you want in a 00:00:25.279 --> 00:00:27.310 align:start position:0% use web crawling, you can collect the YouTube data you want in a sheet. 00:00:27.310 --> 00:00:27.320 align:start position:0% sheet. 00:00:27.320 --> 00:00:28.990 align:start position:0% sheet. Today, I will 00:00:28.990 --> 00:00:31.550 align:start position:0% Today, I will 00:00:31.550 --> 00:00:33.990 align:start position:0% 00:00:33.990 --> 00:00:35.910 align:start position:0% 00:00:35.910 --> 00:00:35.920 align:start position:0% 00:00:35.920 --> 00:00:38.069 align:start position:0% talk about how to build a system that can automatically collect YouTube data for free without coding by using Make and Seo. For the 00:00:38.069 --> 00:00:38.079 align:start position:0% talk about how to build a system that can automatically collect YouTube data for free without coding by using Make and Seo. For the 00:00:38.079 --> 00:00:40.190 align:start position:0% talk about how to build a system that can automatically collect YouTube data for free without coding by using Make and Seo. For the sheet for practice, please refer to the video description below. 00:00:40.190 --> 00:00:42.069 align:start position:0% sheet for practice, please refer to the video description below. 00:00:42.069 --> 00:00:42.079 align:start position:0% 00:00:42.079 --> 00:00:43.389 align:start position:0% Let's get started right away. 00:00:43.389 --> 00:00:43.399 align:start position:0% Let's get started right away. 00:00:43.399 --> 00:00:45.350 align:start position:0% Let's get started right away. Before we set up the automation in earnest, let's take a 00:00:45.350 --> 00:00:47.510 align:start position:0% Before we set up the automation in earnest, let's take a 00:00:47.510 --> 00:00:47.520 align:start position:0% 00:00:47.520 --> 00:00:49.750 align:start position:0% look at the flow of how we will build the automation system. 00:00:49.750 --> 00:00:49.760 align:start position:0% look at the flow of how we will build the automation system. 00:00:49.760 --> 00:00:51.950 align:start position:0% look at the flow of how we will build the automation system. We 00:00:51.950 --> 00:00:51.960 align:start position:0% We 00:00:51.960 --> 00:00:53.590 align:start position:0% We will build this automation system in two steps. 00:00:53.590 --> 00:00:53.600 align:start position:0% will build this automation system in two steps. 00:00:53.600 --> 00:00:55.830 align:start position:0% will build this automation system in two steps. First, we will collect videos based on the keywords we want on YouTube. 00:00:55.830 --> 00:00:57.630 align:start position:0% First, we will collect videos based on the keywords we want on YouTube. 00:00:57.630 --> 00:00:59.950 align:start position:0% 00:00:59.950 --> 00:00:59.960 align:start position:0% 00:00:59.960 --> 00:01:02.110 align:start position:0% There will be a list of channels that uploaded each video. Then, we 00:01:02.110 --> 00:01:03.950 align:start position:0% There will be a list of channels that uploaded each video. Then, we 00:01:03.950 --> 00:01:05.910 align:start position:0% 00:01:05.910 --> 00:01:05.920 align:start position:0% 00:01:05.920 --> 00:01:07.670 align:start position:0% will collect the channel list separately as a second task. First, as you can see, 00:01:07.670 --> 00:01:07.680 align:start position:0% will collect the channel list separately as a second task. First, as you can see, 00:01:07.680 --> 00:01:10.070 align:start position:0% will collect the channel list separately as a second task. First, as you can see, we will enter keyword information in the sheet like this. 00:01:10.070 --> 00:01:10.080 align:start position:0% we will enter keyword information in the sheet like this. 00:01:10.080 --> 00:01:12.149 align:start position:0% we will enter keyword information in the sheet like this. Then, we will We will 00:01:12.149 --> 00:01:12.159 align:start position:0% Then, we will We will 00:01:12.159 --> 00:01:13.830 align:start position:0% Then, we will We will get it from the sheet and 00:01:13.830 --> 00:01:13.840 align:start position:0% get it from the sheet and 00:01:13.840 --> 00:01:16.429 align:start position:0% get it from the sheet and based on the keywords we got, we will use this bra to 00:01:16.429 --> 00:01:18.350 align:start position:0% based on the keywords we got, we will use this bra to 00:01:18.350 --> 00:01:18.360 align:start position:0% 00:01:18.360 --> 00:01:20.109 align:start position:0% extract the latest videos searched by keywords from YouTube. Then, 00:01:20.109 --> 00:01:20.119 align:start position:0% extract the latest videos searched by keywords from YouTube. Then, 00:01:20.119 --> 00:01:22.230 align:start position:0% extract the latest videos searched by keywords from YouTube. Then, if we do the automation after extracting them, there will be 00:01:22.230 --> 00:01:22.240 align:start position:0% if we do the automation after extracting them, there will be 00:01:22.240 --> 00:01:23.870 align:start position:0% if we do the automation after extracting them, there will be videos that we have already collected, 00:01:23.870 --> 00:01:23.880 align:start position:0% videos that we have already collected, 00:01:23.880 --> 00:01:25.990 align:start position:0% videos that we have already collected, so we will get them to compare the already collected videos or 00:01:25.990 --> 00:01:26.000 align:start position:0% so we will get them to compare the already collected videos or 00:01:26.000 --> 00:01:27.590 align:start position:0% so we will get them to compare the already collected videos or channel data and 00:01:27.590 --> 00:01:29.510 align:start position:0% channel data and 00:01:29.510 --> 00:01:29.520 align:start position:0% 00:01:29.520 --> 00:01:31.230 align:start position:0% update the sheet only for the video data that has not already been collected. Then, 00:01:31.230 --> 00:01:32.590 align:start position:0% update the sheet only for the video data that has not already been collected. Then, 00:01:32.590 --> 00:01:32.600 align:start position:0% 00:01:32.600 --> 00:01:34.149 align:start position:0% after updating the video data in the sheet, we 00:01:34.149 --> 00:01:34.159 align:start position:0% after updating the video data in the sheet, we 00:01:34.159 --> 00:01:35.830 align:start position:0% after updating the video data in the sheet, we will update the channel data. 00:01:35.830 --> 00:01:35.840 align:start position:0% will update the channel data. 00:01:35.840 --> 00:01:37.670 align:start position:0% will update the channel data. So, in the case of channel data, we will re-appear a unique channel list that was 00:01:37.670 --> 00:01:37.680 align:start position:0% So, in the case of channel data, we will re-appear a unique channel list that was 00:01:37.680 --> 00:01:40.310 align:start position:0% So, in the case of channel data, we will re-appear a unique channel list that was not previously collected in the new video data. We 00:01:40.310 --> 00:01:42.550 align:start position:0% not previously collected in the new video data. We 00:01:42.550 --> 00:01:44.469 align:start position:0% 00:01:44.469 --> 00:01:44.479 align:start position:0% 00:01:44.479 --> 00:01:46.550 align:start position:0% will search for those channels on YouTube again. We will collect the 00:01:46.550 --> 00:01:46.560 align:start position:0% will search for those channels on YouTube again. We will collect the 00:01:46.560 --> 00:01:48.630 align:start position:0% will search for those channels on YouTube again. We will collect the exact channel 00:01:48.630 --> 00:01:48.640 align:start position:0% exact channel 00:01:48.640 --> 00:01:50.590 align:start position:0% exact channel information through the channel search on YouTube and update the 00:01:50.590 --> 00:01:50.600 align:start position:0% information through the channel search on YouTube and update the 00:01:50.600 --> 00:01:52.510 align:start position:0% information through the channel search on YouTube and update the sheet based on the collected information. 00:01:52.510 --> 00:01:54.230 align:start position:0% sheet based on the collected information. 00:01:54.230 --> 00:01:56.190 align:start position:0% 00:01:56.190 --> 00:01:56.200 align:start position:0% 00:01:56.200 --> 00:01:57.950 align:start position:0% If you build an automation system like this, if we run 00:01:57.950 --> 00:01:57.960 align:start position:0% If you build an automation system like this, if we run 00:01:57.960 --> 00:02:00.469 align:start position:0% If you build an automation system like this, if we run this process periodically, for example, every week or every month, you will be able to 00:02:00.469 --> 00:02:00.479 align:start position:0% this process periodically, for example, every week or every month, you will be able to 00:02:00.479 --> 00:02:02.469 align:start position:0% this process periodically, for example, every week or every month, you will be able to automatically collect the 00:02:02.469 --> 00:02:02.479 align:start position:0% automatically collect the 00:02:02.479 --> 00:02:04.350 align:start position:0% automatically collect the latest videos related to the keywords that I am interested in 00:02:04.350 --> 00:02:04.360 align:start position:0% latest videos related to the keywords that I am interested in 00:02:04.360 --> 00:02:06.830 align:start position:0% latest videos related to the keywords that I am interested in and the channels that uploaded those videos. 00:02:06.830 --> 00:02:08.710 align:start position:0% and the channels that uploaded those videos. 00:02:08.710 --> 00:02:08.720 align:start position:0% 00:02:08.720 --> 00:02:10.430 align:start position:0% Then, when you need to inquire about business with those channels later or 00:02:10.430 --> 00:02:12.229 align:start position:0% Then, when you need to inquire about business with those channels later or 00:02:12.229 --> 00:02:14.150 align:start position:0% 00:02:14.150 --> 00:02:14.160 align:start position:0% 00:02:14.160 --> 00:02:15.990 align:start position:0% want to check what video references there are recently, you can easily use them. 00:02:15.990 --> 00:02:16.000 align:start position:0% want to check what video references there are recently, you can easily use them. 00:02:16.000 --> 00:02:17.350 align:start position:0% want to check what video references there are recently, you can easily use them. Now, 00:02:17.350 --> 00:02:17.360 align:start position:0% Now, 00:02:17.360 --> 00:02:19.470 align:start position:0% Now, let's take a look at the sheet structure that will be connected to Make. 00:02:19.470 --> 00:02:19.480 align:start position:0% let's take a look at the sheet structure that will be connected to Make. 00:02:19.480 --> 00:02:21.710 align:start position:0% let's take a look at the sheet structure that will be connected to Make. Sheet In the same case, I have 00:02:21.710 --> 00:02:21.720 align:start position:0% Sheet In the same case, I have 00:02:21.720 --> 00:02:23.869 align:start position:0% Sheet In the same case, I have already set up the structure for testing. 00:02:23.869 --> 00:02:23.879 align:start position:0% already set up the structure for testing. 00:02:23.879 --> 00:02:25.949 align:start position:0% already set up the structure for testing. In the keyword sheet, I created a column where you can add keywords. 00:02:25.949 --> 00:02:27.550 align:start position:0% In the keyword sheet, I created a column where you can add keywords. 00:02:27.550 --> 00:02:27.560 align:start position:0% 00:02:27.560 --> 00:02:29.470 align:start position:0% Then, I created a sheet called YouTube Video 00:02:29.470 --> 00:02:29.480 align:start position:0% Then, I created a sheet called YouTube Video 00:02:29.480 --> 00:02:32.030 align:start position:0% Then, I created a sheet called YouTube Video where video data can be accumulated. 00:02:32.030 --> 00:02:32.040 align:start position:0% where video data can be accumulated. 00:02:32.040 --> 00:02:33.990 align:start position:0% where video data can be accumulated. So, I created columns where you can collect upload 00:02:33.990 --> 00:02:34.000 align:start position:0% So, I created columns where you can collect upload 00:02:34.000 --> 00:02:36.470 align:start position:0% So, I created columns where you can collect upload date, video ID, channel, video 00:02:36.470 --> 00:02:36.480 align:start position:0% date, video ID, channel, video 00:02:36.480 --> 00:02:38.990 align:start position:0% date, video ID, channel, video length, title, number of churches, video link, channel 00:02:38.990 --> 00:02:39.000 align:start position:0% length, title, number of churches, video link, channel 00:02:39.000 --> 00:02:41.110 align:start position:0% length, title, number of churches, video link, channel link, etc. 00:02:41.110 --> 00:02:41.120 align:start position:0% link, etc. 00:02:41.120 --> 00:02:43.030 align:start position:0% link, etc. Then, when you 00:02:43.030 --> 00:02:43.040 align:start position:0% Then, when you 00:02:43.040 --> 00:02:45.350 align:start position:0% Then, when you accumulate data on this video, you said that you would 00:02:45.350 --> 00:02:45.360 align:start position:0% accumulate data on this video, you said that you would 00:02:45.360 --> 00:02:46.670 align:start position:0% accumulate data on this video, you said that you would do another channel search with the channel link. 00:02:46.670 --> 00:02:46.680 align:start position:0% do another channel search with the channel link. 00:02:46.680 --> 00:02:48.589 align:start position:0% do another channel search with the channel link. So, in the YouTube channel 00:02:48.589 --> 00:02:48.599 align:start position:0% So, in the YouTube channel 00:02:48.599 --> 00:02:51.430 align:start position:0% So, in the YouTube channel tab, I created columns where you can update the handle, channel name, subscriber, channel 00:02:51.430 --> 00:02:51.440 align:start position:0% tab, I created columns where you can update the handle, channel name, subscriber, channel 00:02:51.440 --> 00:02:53.670 align:start position:0% tab, I created columns where you can update the handle, channel name, subscriber, channel link, channel description, and 00:02:53.670 --> 00:02:53.680 align:start position:0% link, channel description, and 00:02:53.680 --> 00:02:55.750 align:start position:0% link, channel description, and when it was last updated. After you have 00:02:55.750 --> 00:02:57.350 align:start position:0% when it was last updated. After you have 00:02:57.350 --> 00:02:58.830 align:start position:0% 00:02:58.830 --> 00:02:58.840 align:start position:0% 00:02:58.840 --> 00:03:00.910 align:start position:0% created the sheet structure like this, 00:03:00.910 --> 00:03:00.920 align:start position:0% created the sheet structure like this, 00:03:00.920 --> 00:03:02.630 align:start position:0% created the sheet structure like this, come to Make and 00:03:02.630 --> 00:03:02.640 align:start position:0% come to Make and 00:03:02.640 --> 00:03:04.509 align:start position:0% come to Make and create a scenario. Now, I 00:03:04.509 --> 00:03:04.519 align:start position:0% create a scenario. Now, I 00:03:04.519 --> 00:03:06.190 align:start position:0% create a scenario. Now, I will set up Make in earnest. If 00:03:06.190 --> 00:03:07.949 align:start position:0% will set up Make in earnest. If 00:03:07.949 --> 00:03:07.959 align:start position:0% 00:03:07.959 --> 00:03:09.990 align:start position:0% you need a completely basic explanation of Make, I recommend that you 00:03:09.990 --> 00:03:10.000 align:start position:0% you need a completely basic explanation of Make, I recommend that you 00:03:10.000 --> 00:03:12.149 align:start position:0% you need a completely basic explanation of Make, I recommend that you first check out the Make tutorial that I covered in the previous video. 00:03:12.149 --> 00:03:12.159 align:start position:0% first check out the Make tutorial that I covered in the previous video. 00:03:12.159 --> 00:03:13.949 align:start position:0% first check out the Make tutorial that I covered in the previous video. Today, I will explain the 00:03:13.949 --> 00:03:13.959 align:start position:0% Today, I will explain the 00:03:13.959 --> 00:03:16.350 align:start position:0% Today, I will explain the process of actually implementing this web crawling. 00:03:16.350 --> 00:03:18.350 align:start position:0% process of actually implementing this web crawling. 00:03:18.350 --> 00:03:18.360 align:start position:0% 00:03:18.360 --> 00:03:20.309 align:start position:0% Create a new scenario in Make. 00:03:20.309 --> 00:03:20.319 align:start position:0% Create a new scenario in Make. 00:03:20.319 --> 00:03:22.910 align:start position:0% Create a new scenario in Make. This time, I will name the scenario YouTube information 00:03:22.910 --> 00:03:22.920 align:start position:0% This time, I will name the scenario YouTube information 00:03:22.920 --> 00:03:25.149 align:start position:0% This time, I will name the scenario YouTube information collection. 00:03:25.149 --> 00:03:25.159 align:start position:0% collection. 00:03:25.159 --> 00:03:27.190 align:start position:0% collection. And now, the settings. I'll do it for you. The 00:03:27.190 --> 00:03:27.200 align:start position:0% And now, the settings. I'll do it for you. The 00:03:27.200 --> 00:03:29.750 align:start position:0% And now, the settings. I'll do it for you. The first thing you need to do is to 00:03:29.750 --> 00:03:32.429 align:start position:0% first thing you need to do is to 00:03:32.429 --> 00:03:32.439 align:start position:0% 00:03:32.439 --> 00:03:34.710 align:start position:0% get these keywords from the keyword worksheet in Google Sheets. Ah, 00:03:34.710 --> 00:03:34.720 align:start position:0% get these keywords from the keyword worksheet in Google Sheets. Ah, 00:03:34.720 --> 00:03:36.470 align:start position:0% get these keywords from the keyword worksheet in Google Sheets. Ah, so go to Google Sheets and 00:03:36.470 --> 00:03:36.480 align:start position:0% so go to Google Sheets and 00:03:36.480 --> 00:03:39.070 align:start position:0% so go to Google Sheets and find the keyword value here. 00:03:39.070 --> 00:03:39.080 align:start position:0% find the keyword value here. 00:03:39.080 --> 00:03:40.910 align:start position:0% find the keyword value here. So, find the sheet we created here and 00:03:40.910 --> 00:03:40.920 align:start position:0% So, find the sheet we created here and 00:03:40.920 --> 00:03:43.309 align:start position:0% So, find the sheet we created here and select the keyword. If you 00:03:43.309 --> 00:03:45.190 align:start position:0% select the keyword. If you 00:03:45.190 --> 00:03:45.200 align:start position:0% 00:03:45.200 --> 00:03:48.190 align:start position:0% set the column range right away, we'll only get it if there is a value in the keyword column in the filter. 00:03:48.190 --> 00:03:50.470 align:start position:0% set the column range right away, we'll only get it if there is a value in the keyword column in the filter. 00:03:50.470 --> 00:03:50.480 align:start position:0% 00:03:50.480 --> 00:03:52.589 align:start position:0% And we'll get it in row number order. 00:03:52.589 --> 00:03:52.599 align:start position:0% And we'll get it in row number order. 00:03:52.599 --> 00:03:54.750 align:start position:0% And we'll get it in row number order. And here, you 00:03:54.750 --> 00:03:54.760 align:start position:0% And here, you 00:03:54.760 --> 00:03:56.830 align:start position:0% And here, you can specify a limit. If you 00:03:56.830 --> 00:03:56.840 align:start position:0% can specify a limit. If you 00:03:56.840 --> 00:03:58.949 align:start position:0% can specify a limit. If you enter multiple keywords, you 00:03:58.949 --> 00:03:58.959 align:start position:0% enter multiple keywords, you 00:03:58.959 --> 00:04:00.750 align:start position:0% enter multiple keywords, you can get them all and process them. 00:04:00.750 --> 00:04:00.760 align:start position:0% can get them all and process them. 00:04:00.760 --> 00:04:03.069 align:start position:0% can get them all and process them. For now, we'll get just one for testing and 00:04:03.069 --> 00:04:03.079 align:start position:0% For now, we'll get just one for testing and 00:04:03.079 --> 00:04:04.869 align:start position:0% For now, we'll get just one for testing and test it. 00:04:04.869 --> 00:04:04.879 align:start position:0% test it. 00:04:04.879 --> 00:04:06.869 align:start position:0% test it. Of course, if you increase the limit later, you'll be 00:04:06.869 --> 00:04:08.710 align:start position:0% Of course, if you increase the limit later, you'll be 00:04:08.710 --> 00:04:08.720 align:start position:0% 00:04:08.720 --> 00:04:10.470 align:start position:0% able to process multiple keywords at once. For now, we 00:04:10.470 --> 00:04:10.480 align:start position:0% able to process multiple keywords at once. For now, we 00:04:10.480 --> 00:04:12.670 align:start position:0% able to process multiple keywords at once. For now, we 'll start with one because this has a free usage 00:04:12.670 --> 00:04:12.680 align:start position:0% 'll start with one because this has a free usage 00:04:12.680 --> 00:04:14.869 align:start position:0% 'll start with one because this has a free usage limit, so you 00:04:14.869 --> 00:04:14.879 align:start position:0% limit, so you 00:04:14.879 --> 00:04:16.830 align:start position:0% limit, so you shouldn't go over the quota while practicing, so let's start with one and 00:04:16.830 --> 00:04:16.840 align:start position:0% shouldn't go over the quota while practicing, so let's start with one and 00:04:16.840 --> 00:04:18.229 align:start position:0% shouldn't go over the quota while practicing, so let's start with one and proceed. 00:04:18.229 --> 00:04:18.239 align:start position:0% proceed. 00:04:18.239 --> 00:04:20.030 align:start position:0% proceed. Now, let's run it. 00:04:20.030 --> 00:04:20.040 align:start position:0% Now, let's run it. 00:04:20.040 --> 00:04:21.550 align:start position:0% Now, let's run it. Right- 00:04:21.550 --> 00:04:21.560 align:start position:0% Right- 00:04:21.560 --> 00:04:23.830 align:start position:0% Right- click and run this module. 00:04:23.830 --> 00:04:23.840 align:start position:0% click and run this module. 00:04:23.840 --> 00:04:26.189 align:start position:0% click and run this module. Then, you can see that the keyword called no code is being 00:04:26.189 --> 00:04:26.199 align:start position:0% Then, you can see that the keyword called no code is being 00:04:26.199 --> 00:04:28.150 align:start position:0% Then, you can see that the keyword called no code is being fetched. 00:04:28.150 --> 00:04:30.070 align:start position:0% fetched. 00:04:30.070 --> 00:04:30.080 align:start position:0% 00:04:30.080 --> 00:04:31.870 align:start position:0% You can see that the first row in our sheet is being fetched well. If you 00:04:31.870 --> 00:04:31.880 align:start position:0% You can see that the first row in our sheet is being fetched well. If you 00:04:31.880 --> 00:04:34.110 align:start position:0% You can see that the first row in our sheet is being fetched well. If you fetch the keyword like this, Next, we need to 00:04:34.110 --> 00:04:34.120 align:start position:0% fetch the keyword like this, Next, we need to 00:04:34.120 --> 00:04:36.230 align:start position:0% fetch the keyword like this, Next, we need to search for this keyword on YouTube to 00:04:36.230 --> 00:04:36.240 align:start position:0% search for this keyword on YouTube to 00:04:36.240 --> 00:04:38.070 align:start position:0% search for this keyword on YouTube to get information. We 00:04:38.070 --> 00:04:38.080 align:start position:0% get information. We 00:04:38.080 --> 00:04:39.710 align:start position:0% get information. We need to get video information. At that time, 00:04:39.710 --> 00:04:39.720 align:start position:0% need to get video information. At that time, 00:04:39.720 --> 00:04:41.590 align:start position:0% need to get video information. At that time, what we can use is serve API. 00:04:41.590 --> 00:04:41.600 align:start position:0% what we can use is serve API. 00:04:41.600 --> 00:04:43.469 align:start position:0% what we can use is serve API. Serv API ES 00:04:43.469 --> 00:04:43.479 align:start position:0% Serv API ES 00:04:43.479 --> 00:04:45.430 align:start position:0% Serv API ES Search YouTube. If you don't 00:04:45.430 --> 00:04:45.440 align:start position:0% Search YouTube. If you don't 00:04:45.440 --> 00:04:47.430 align:start position:0% Search YouTube. If you don't see Search YouTube, go to Search more and search more. There is 00:04:47.430 --> 00:04:47.440 align:start position:0% see Search YouTube, go to Search more and search more. There is 00:04:47.440 --> 00:04:48.830 align:start position:0% see Search YouTube, go to Search more and search more. There is YouTube like this. 00:04:48.830 --> 00:04:48.840 align:start position:0% YouTube like this. 00:04:48.840 --> 00:04:50.550 align:start position:0% YouTube like this. Select YouTube. 00:04:50.550 --> 00:04:53.029 align:start position:0% Select YouTube. 00:04:53.029 --> 00:04:53.039 align:start position:0% 00:04:53.039 --> 00:04:55.070 align:start position:0% When you first create a connection like this, you need to enter an API key. 00:04:55.070 --> 00:04:55.080 align:start position:0% When you first create a connection like this, you need to enter an API key. 00:04:55.080 --> 00:04:57.230 align:start position:0% When you first create a connection like this, you need to enter an API key. So to enter this, 00:04:57.230 --> 00:04:57.240 align:start position:0% So to enter this, 00:04:57.240 --> 00:04:59.029 align:start position:0% So to enter this, go to surf api.com and 00:04:59.029 --> 00:04:59.039 align:start position:0% go to surf api.com and 00:04:59.039 --> 00:05:01.189 align:start position:0% go to surf api.com and log in. After you log in, 00:05:01.189 --> 00:05:01.199 align:start position:0% log in. After you log in, 00:05:01.199 --> 00:05:03.230 align:start position:0% log in. After you log in, there is an API key on the left. 00:05:03.230 --> 00:05:03.240 align:start position:0% there is an API key on the left. 00:05:03.240 --> 00:05:05.430 align:start position:0% there is an API key on the left. Click on this API key and click on jate API 00:05:05.430 --> 00:05:05.440 align:start position:0% Click on this API key and click on jate API 00:05:05.440 --> 00:05:07.790 align:start position:0% Click on this API key and click on jate API key. Copy your API key and 00:05:07.790 --> 00:05:07.800 align:start position:0% key. Copy your API key and 00:05:07.800 --> 00:05:09.469 align:start position:0% key. Copy your API key and enter it. 00:05:09.469 --> 00:05:09.479 align:start position:0% enter it. 00:05:09.479 --> 00:05:11.029 align:start position:0% enter it. Now, if you save, the 00:05:11.029 --> 00:05:11.039 align:start position:0% Now, if you save, the 00:05:11.039 --> 00:05:12.909 align:start position:0% Now, if you save, the connection will be made like this. Then, you 00:05:12.909 --> 00:05:12.919 align:start position:0% connection will be made like this. Then, you 00:05:12.919 --> 00:05:14.710 align:start position:0% connection will be made like this. Then, you can now get information from YouTube. Here, 00:05:14.710 --> 00:05:14.720 align:start position:0% can now get information from YouTube. Here, 00:05:14.720 --> 00:05:16.990 align:start position:0% can now get information from YouTube. Here, we need to enter the keyword value called no code. 00:05:16.990 --> 00:05:17.000 align:start position:0% we need to enter the keyword value called no code. 00:05:17.000 --> 00:05:18.710 align:start position:0% we need to enter the keyword value called no code. So, 00:05:18.710 --> 00:05:18.720 align:start position:0% So, 00:05:18.720 --> 00:05:21.189 align:start position:0% So, select a keyword. 00:05:21.189 --> 00:05:23.070 align:start position:0% select a keyword. 00:05:23.070 --> 00:05:23.080 align:start position:0% 00:05:23.080 --> 00:05:24.870 align:start position:0% Since we mainly want to find videos based on Korea, we will 00:05:24.870 --> 00:05:24.880 align:start position:0% Since we mainly want to find videos based on Korea, we will 00:05:24.880 --> 00:05:27.270 align:start position:0% Since we mainly want to find videos based on Korea, we will set the country to Korea. We will also set the ear map to Korean. 00:05:27.270 --> 00:05:27.280 align:start position:0% set the country to Korea. We will also set the ear map to Korean. 00:05:27.280 --> 00:05:28.990 align:start position:0% set the country to Korea. We will also set the ear map to Korean. Now, you need to set a filter. 00:05:28.990 --> 00:05:29.000 align:start position:0% Now, you need to set a filter. 00:05:29.000 --> 00:05:31.029 align:start position:0% Now, you need to set a filter. What is a filter? 00:05:31.029 --> 00:05:31.039 align:start position:0% What is a filter? 00:05:31.039 --> 00:05:32.870 align:start position:0% What is a filter? When we search on YouTube, we 00:05:32.870 --> 00:05:32.880 align:start position:0% When we search on YouTube, we 00:05:32.880 --> 00:05:34.950 align:start position:0% When we search on YouTube, we can filter and search. 00:05:34.950 --> 00:05:34.960 align:start position:0% can filter and search. 00:05:34.960 --> 00:05:36.710 align:start position:0% can filter and search. In our case, 00:05:36.710 --> 00:05:39.870 align:start position:0% In our case, 00:05:39.870 --> 00:05:39.880 align:start position:0% 00:05:39.880 --> 00:05:42.070 align:start position:0% when we collect videos on a weekly or monthly basis, it would be good to 00:05:42.070 --> 00:05:42.080 align:start position:0% when we collect videos on a weekly or monthly basis, it would be good to 00:05:42.080 --> 00:05:44.270 align:start position:0% when we collect videos on a weekly or monthly basis, it would be good to filter them to only retrieve videos from this month. 00:05:44.270 --> 00:05:44.280 align:start position:0% filter them to only retrieve videos from this month. 00:05:44.280 --> 00:05:46.230 align:start position:0% filter them to only retrieve videos from this month. So in that case, it 00:05:46.230 --> 00:05:46.240 align:start position:0% So in that case, it 00:05:46.240 --> 00:05:47.749 align:start position:0% So in that case, it would be good to filter them. 00:05:47.749 --> 00:05:47.759 align:start position:0% would be good to filter them. 00:05:47.759 --> 00:05:49.670 align:start position:0% would be good to filter them. For example, if you searched for YouTube videos 00:05:49.670 --> 00:05:49.680 align:start position:0% For example, if you searched for YouTube videos 00:05:49.680 --> 00:05:52.029 align:start position:0% For example, if you searched for YouTube videos with no code, I 00:05:52.029 --> 00:05:52.039 align:start position:0% with no code, I 00:05:52.039 --> 00:05:53.749 align:start position:0% with no code, I want to apply a filter to them. Then, if you 00:05:53.749 --> 00:05:53.759 align:start position:0% want to apply a filter to them. Then, if you 00:05:53.759 --> 00:05:56.390 align:start position:0% want to apply a filter to them. Then, if you go into the filter and look at this month and 00:05:56.390 --> 00:05:56.400 align:start position:0% go into the filter and look at this month and 00:05:56.400 --> 00:05:58.590 align:start position:0% go into the filter and look at this month and high relevance, this month relevance, and if you 00:05:58.590 --> 00:05:58.600 align:start position:0% high relevance, this month relevance, and if you 00:05:58.600 --> 00:06:00.749 align:start position:0% high relevance, this month relevance, and if you look at the filtered state, the 00:06:00.749 --> 00:06:00.759 align:start position:0% look at the filtered state, the 00:06:00.759 --> 00:06:03.629 align:start position:0% look at the filtered state, the URL SP on the right has this filter 00:06:03.629 --> 00:06:03.639 align:start position:0% URL SP on the right has this filter 00:06:03.639 --> 00:06:05.110 align:start position:0% URL SP on the right has this filter value. There is a filter ID value. 00:06:05.110 --> 00:06:05.120 align:start position:0% value. There is a filter ID value. 00:06:05.120 --> 00:06:06.990 align:start position:0% value. There is a filter ID value. Then, you 00:06:06.990 --> 00:06:07.000 align:start position:0% Then, you 00:06:07.000 --> 00:06:08.909 align:start position:0% Then, you can put this in the filter value in Make. However, if you 00:06:08.909 --> 00:06:08.919 align:start position:0% can put this in the filter value in Make. However, if you 00:06:08.919 --> 00:06:10.670 align:start position:0% can put this in the filter value in Make. However, if you do this, you may want to check how 00:06:10.670 --> 00:06:10.680 align:start position:0% do this, you may want to check how 00:06:10.680 --> 00:06:12.670 align:start position:0% do this, you may want to check how the search is actually done through the sub API 00:06:12.670 --> 00:06:12.680 align:start position:0% the search is actually done through the sub API 00:06:12.680 --> 00:06:14.670 align:start position:0% the search is actually done through the sub API without running the operation. In 00:06:14.670 --> 00:06:16.350 align:start position:0% without running the operation. In 00:06:16.350 --> 00:06:16.360 align:start position:0% 00:06:16.360 --> 00:06:18.629 align:start position:0% that case, there is a page called serve API 00:06:18.629 --> 00:06:18.639 align:start position:0% that case, there is a page called serve API 00:06:18.639 --> 00:06:19.950 align:start position:0% that case, there is a page called serve API playground, serve 00:06:19.950 --> 00:06:19.960 align:start position:0% playground, serve 00:06:19.960 --> 00:06:22.309 align:start position:0% playground, serve api.com / playground. 00:06:22.309 --> 00:06:24.270 align:start position:0% api.com / playground. 00:06:24.270 --> 00:06:24.280 align:start position:0% 00:06:24.280 --> 00:06:26.550 align:start position:0% Select YouTube search there. Just 00:06:26.550 --> 00:06:26.560 align:start position:0% Select YouTube search there. Just 00:06:26.560 --> 00:06:29.110 align:start position:0% Select YouTube search there. Just like we specified earlier, 00:06:29.110 --> 00:06:29.120 align:start position:0% like we specified earlier, 00:06:29.120 --> 00:06:31.350 align:start position:0% like we specified earlier, enter Korea and Korean, and enter the same value in the filter. 00:06:31.350 --> 00:06:31.360 align:start position:0% enter Korea and Korean, and enter the same value in the filter. 00:06:31.360 --> 00:06:33.110 align:start position:0% enter Korea and Korean, and enter the same value in the filter. Then, let's 00:06:33.110 --> 00:06:33.120 align:start position:0% Then, let's 00:06:33.120 --> 00:06:34.950 align:start position:0% Then, let's put no code here. If you do this and 00:06:34.950 --> 00:06:34.960 align:start position:0% put no code here. If you do this and 00:06:34.960 --> 00:06:37.029 align:start position:0% put no code here. If you do this and search, you can test it. 00:06:37.029 --> 00:06:37.039 align:start position:0% search, you can test it. 00:06:37.039 --> 00:06:38.749 align:start position:0% search, you can test it. Then, you 00:06:38.749 --> 00:06:38.759 align:start position:0% Then, you 00:06:38.759 --> 00:06:41.029 align:start position:0% Then, you can see that it appears like this. If you 00:06:41.029 --> 00:06:41.039 align:start position:0% can see that it appears like this. If you 00:06:41.039 --> 00:06:43.350 align:start position:0% can see that it appears like this. If you look here, all the recent videos are recent 00:06:43.350 --> 00:06:43.360 align:start position:0% look here, all the recent videos are recent 00:06:43.360 --> 00:06:45.510 align:start position:0% look here, all the recent videos are recent videos. The values ​​appear like this. You 00:06:45.510 --> 00:06:45.520 align:start position:0% videos. The values ​​appear like this. You 00:06:45.520 --> 00:06:47.430 align:start position:0% videos. The values ​​appear like this. You can check the 00:06:47.430 --> 00:06:47.440 align:start position:0% can check the 00:06:47.440 --> 00:06:49.510 align:start position:0% can check the filter. So you 00:06:49.510 --> 00:06:49.520 align:start position:0% filter. So you 00:06:49.520 --> 00:06:51.589 align:start position:0% filter. So you can see that the filter is applied well. You can enter the applied filter 00:06:51.589 --> 00:06:51.599 align:start position:0% can see that the filter is applied well. You can enter the applied filter 00:06:51.599 --> 00:06:53.469 align:start position:0% can see that the filter is applied well. You can enter the applied filter in the sub API a filter value. 00:06:53.469 --> 00:06:53.479 align:start position:0% in the sub API a filter value. 00:06:53.479 --> 00:06:55.710 align:start position:0% in the sub API a filter value. Honestly, you 00:06:55.710 --> 00:06:55.720 align:start position:0% Honestly, you 00:06:55.720 --> 00:06:57.589 align:start position:0% Honestly, you don't need to use the rest. Just 00:06:57.589 --> 00:06:57.599 align:start position:0% don't need to use the rest. Just 00:06:57.599 --> 00:06:59.670 align:start position:0% don't need to use the rest. Just cache it, and at the 00:06:59.670 --> 00:06:59.680 align:start position:0% cache it, and at the 00:06:59.680 --> 00:07:01.430 align:start position:0% cache it, and at the same time, let's use it voluntarily, and 00:07:01.430 --> 00:07:03.270 align:start position:0% same time, let's use it voluntarily, and 00:07:03.270 --> 00:07:03.280 align:start position:0% 00:07:03.280 --> 00:07:05.430 align:start position:0% there are settings like how to display the output. Usually, 00:07:05.430 --> 00:07:05.440 align:start position:0% there are settings like how to display the output. Usually, 00:07:05.440 --> 00:07:07.110 align:start position:0% there are settings like how to display the output. Usually, when collecting data, you don't have to set the 00:07:07.110 --> 00:07:07.120 align:start position:0% when collecting data, you don't have to set the 00:07:07.120 --> 00:07:09.990 align:start position:0% when collecting data, you don't have to set the values. You can leave them blank. Only the 00:07:09.990 --> 00:07:10.000 align:start position:0% values. You can leave them blank. Only the 00:07:10.000 --> 00:07:11.589 align:start position:0% values. You can leave them blank. Only the last one is important. The last page 00:07:11.589 --> 00:07:11.599 align:start position:0% last one is important. The last page 00:07:11.599 --> 00:07:13.830 align:start position:0% last one is important. The last page limit is how many pages of 00:07:13.830 --> 00:07:13.840 align:start position:0% limit is how many pages of 00:07:13.840 --> 00:07:15.990 align:start position:0% limit is how many pages of information you want to retrieve. The default is 00:07:15.990 --> 00:07:16.000 align:start position:0% information you want to retrieve. The default is 00:07:16.000 --> 00:07:17.390 align:start position:0% information you want to retrieve. The default is 1. 00:07:17.390 --> 00:07:17.400 align:start position:0% 1. 00:07:17.400 --> 00:07:19.350 align:start position:0% 1. It only retrieves the first visible page. If you 00:07:19.350 --> 00:07:19.360 align:start position:0% It only retrieves the first visible page. If you 00:07:19.360 --> 00:07:21.350 align:start position:0% It only retrieves the first visible page. If you increase the page, you 00:07:21.350 --> 00:07:21.360 align:start position:0% increase the page, you 00:07:21.360 --> 00:07:22.869 align:start position:0% increase the page, you can retrieve up to 2 pages. 00:07:22.869 --> 00:07:22.879 align:start position:0% can retrieve up to 2 pages. 00:07:22.879 --> 00:07:24.790 align:start position:0% can retrieve up to 2 pages. For now, I'll set it to 1. 00:07:24.790 --> 00:07:24.800 align:start position:0% For now, I'll set it to 1. 00:07:24.800 --> 00:07:26.790 align:start position:0% For now, I'll set it to 1. This is to prevent the quota from exceeding, and to 00:07:26.790 --> 00:07:26.800 align:start position:0% This is to prevent the quota from exceeding, and to 00:07:26.800 --> 00:07:28.430 align:start position:0% This is to prevent the quota from exceeding, and to show only the minimum information. 00:07:28.430 --> 00:07:28.440 align:start position:0% show only the minimum information. 00:07:28.440 --> 00:07:30.230 align:start position:0% show only the minimum information. If you're 00:07:30.230 --> 00:07:30.240 align:start position:0% If you're 00:07:30.240 --> 00:07:32.110 align:start position:0% If you're collecting medals and 00:07:32.110 --> 00:07:32.120 align:start position:0% collecting medals and 00:07:32.120 --> 00:07:34.189 align:start position:0% collecting medals and want to retrieve multiple pages, you 00:07:34.189 --> 00:07:36.029 align:start position:0% want to retrieve multiple pages, you 00:07:36.029 --> 00:07:36.039 align:start position:0% 00:07:36.039 --> 00:07:37.710 align:start position:0% can set it to 2 or 3 instead of 1. Then, if you 00:07:37.710 --> 00:07:37.720 align:start position:0% can set it to 2 or 3 instead of 1. Then, if you 00:07:37.720 --> 00:07:39.749 align:start position:0% can set it to 2 or 3 instead of 1. Then, if you set it like this, you can retrieve the Surf API's 00:07:39.749 --> 00:07:39.759 align:start position:0% set it like this, you can retrieve the Surf API's 00:07:39.759 --> 00:07:41.270 align:start position:0% set it like this, you can retrieve the Surf API's YouTube data. Let's 00:07:41.270 --> 00:07:43.350 align:start position:0% YouTube data. Let's 00:07:43.350 --> 00:07:43.360 align:start position:0% 00:07:43.360 --> 00:07:44.749 align:start position:0% try to retrieve the R senior data. Now, here. I got a no-code 00:07:44.749 --> 00:07:44.759 align:start position:0% try to retrieve the R senior data. Now, here. I got a no-code 00:07:44.759 --> 00:07:46.270 align:start position:0% try to retrieve the R senior data. Now, here. I got a no-code keyword, and 00:07:46.270 --> 00:07:46.280 align:start position:0% keyword, and 00:07:46.280 --> 00:07:48.629 align:start position:0% keyword, and based on that keyword, you can 00:07:48.629 --> 00:07:48.639 align:start position:0% based on that keyword, you can 00:07:48.639 --> 00:07:50.510 align:start position:0% based on that keyword, you can see that the video values ​​are all loaded into the video ret like this. I 00:07:50.510 --> 00:07:52.270 align:start position:0% see that the video values ​​are all loaded into the video ret like this. I 00:07:52.270 --> 00:07:52.280 align:start position:0% 00:07:52.280 --> 00:07:54.430 align:start position:0% loaded YouTube information well through the Br API, 00:07:54.430 --> 00:07:54.440 align:start position:0% loaded YouTube information well through the Br API, 00:07:54.440 --> 00:07:56.309 align:start position:0% loaded YouTube information well through the Br API, but what exactly does the sub API do? 00:07:56.309 --> 00:07:56.319 align:start position:0% but what exactly does the sub API do? 00:07:56.319 --> 00:07:58.670 align:start position:0% but what exactly does the sub API do? In fact, there 00:07:58.670 --> 00:08:00.749 align:start position:0% In fact, there 00:08:00.749 --> 00:08:00.759 align:start position:0% 00:08:00.759 --> 00:08:02.710 align:start position:0% is an API that YouTube officially provides, so you can 00:08:02.710 --> 00:08:02.720 align:start position:0% is an API that YouTube officially provides, so you can 00:08:02.720 --> 00:08:04.790 align:start position:0% is an API that YouTube officially provides, so you can get information by coding it yourself. 00:08:04.790 --> 00:08:04.800 align:start position:0% get information by coding it yourself. 00:08:04.800 --> 00:08:06.110 align:start position:0% get information by coding it yourself. But in that case, you 00:08:06.110 --> 00:08:06.120 align:start position:0% But in that case, you 00:08:06.120 --> 00:08:07.629 align:start position:0% But in that case, you need to know how to code, 00:08:07.629 --> 00:08:07.639 align:start position:0% need to know how to code, 00:08:07.639 --> 00:08:09.869 align:start position:0% need to know how to code, and there are various limitations when you get the API. 00:08:09.869 --> 00:08:09.879 align:start position:0% and there are various limitations when you get the API. 00:08:09.879 --> 00:08:11.869 align:start position:0% and there are various limitations when you get the API. But now, if you 00:08:11.869 --> 00:08:11.879 align:start position:0% But now, if you 00:08:11.879 --> 00:08:13.670 align:start position:0% But now, if you use the serv API, you 00:08:13.670 --> 00:08:16.189 align:start position:0% use the serv API, you 00:08:16.189 --> 00:08:18.149 align:start position:0% 00:08:18.149 --> 00:08:18.159 align:start position:0% 00:08:18.159 --> 00:08:20.029 align:start position:0% need to consider the coding work required to use the API, things like cutters required for maintenance, and 00:08:20.029 --> 00:08:20.039 align:start position:0% need to consider the coding work required to use the API, things like cutters required for maintenance, and 00:08:20.039 --> 00:08:21.950 align:start position:0% need to consider the coding work required to use the API, things like cutters required for maintenance, and when the API is modified, you need to 00:08:21.950 --> 00:08:21.960 align:start position:0% when the API is modified, you need to 00:08:21.960 --> 00:08:23.909 align:start position:0% when the API is modified, you need to modify the code accordingly. It 00:08:23.909 --> 00:08:26.469 align:start position:0% modify the code accordingly. It 00:08:26.469 --> 00:08:26.479 align:start position:0% 00:08:26.479 --> 00:08:27.749 align:start position:0% acts as an intermediary for all these things. So, if 00:08:27.749 --> 00:08:27.759 align:start position:0% acts as an intermediary for all these things. So, if 00:08:27.759 --> 00:08:29.990 align:start position:0% acts as an intermediary for all these things. So, if we use the sub API, we 00:08:29.990 --> 00:08:30.000 align:start position:0% we use the sub API, we 00:08:30.000 --> 00:08:32.149 align:start position:0% we use the sub API, we can get YouTube information more easily. 00:08:32.149 --> 00:08:32.159 align:start position:0% can get YouTube information more easily. 00:08:32.159 --> 00:08:34.350 align:start position:0% can get YouTube information more easily. And not only YouTube, but 00:08:34.350 --> 00:08:34.360 align:start position:0% And not only YouTube, but 00:08:34.360 --> 00:08:36.589 align:start position:0% And not only YouTube, but also this sub API can easily get information from various Google-related services such as Google Search, Google 00:08:36.589 --> 00:08:36.599 align:start position:0% also this sub API can easily get information from various Google-related services such as Google Search, Google 00:08:36.599 --> 00:08:38.949 align:start position:0% also this sub API can easily get information from various Google-related services such as Google Search, Google Maps, Google Scholar, 00:08:38.949 --> 00:08:38.959 align:start position:0% Maps, Google Scholar, 00:08:38.959 --> 00:08:41.350 align:start position:0% Maps, Google Scholar, and 00:08:41.350 --> 00:08:41.360 align:start position:0% and 00:08:41.360 --> 00:08:44.470 align:start position:0% and engines such as Yahoo, Naver, and Elf. 00:08:44.470 --> 00:08:44.480 align:start position:0% engines such as Yahoo, Naver, and Elf. 00:08:44.480 --> 00:08:46.030 align:start position:0% engines such as Yahoo, Naver, and Elf. So, you 00:08:46.030 --> 00:08:48.389 align:start position:0% So, you 00:08:48.389 --> 00:08:50.710 align:start position:0% 00:08:50.710 --> 00:08:52.509 align:start position:0% 00:08:52.509 --> 00:08:52.519 align:start position:0% 00:08:52.519 --> 00:08:54.070 align:start position:0% can think of it as a tool that you can easily use when searching Naver data, Google Finance data, and things like that. In this way, you can use the Br API to 00:08:54.070 --> 00:08:54.080 align:start position:0% can think of it as a tool that you can easily use when searching Naver data, Google Finance data, and things like that. In this way, you can use the Br API to 00:08:54.080 --> 00:08:56.470 align:start position:0% can think of it as a tool that you can easily use when searching Naver data, Google Finance data, and things like that. In this way, you can use the Br API to get video information. I brought it. 00:08:56.470 --> 00:08:56.480 align:start position:0% get video information. I brought it. 00:08:56.480 --> 00:08:58.310 align:start position:0% get video information. I brought it. Now, we need to update this video information in the sheet. 00:08:58.310 --> 00:08:59.710 align:start position:0% Now, we need to update this video information in the sheet. 00:08:59.710 --> 00:08:59.720 align:start position:0% 00:08:59.720 --> 00:09:01.430 align:start position:0% Before updating the sheet, I 00:09:01.430 --> 00:09:01.440 align:start position:0% Before updating the sheet, I 00:09:01.440 --> 00:09:03.389 align:start position:0% Before updating the sheet, I told you that we need to bring in the already collected 00:09:03.389 --> 00:09:03.399 align:start position:0% told you that we need to bring in the already collected 00:09:03.399 --> 00:09:05.670 align:start position:0% told you that we need to bring in the already collected video and channel data and compare them. 00:09:05.670 --> 00:09:07.829 align:start position:0% video and channel data and compare them. 00:09:07.829 --> 00:09:07.839 align:start position:0% 00:09:07.839 --> 00:09:09.430 align:start position:0% What this means is that if we already 00:09:09.430 --> 00:09:09.440 align:start position:0% What this means is that if we already 00:09:09.440 --> 00:09:11.389 align:start position:0% What this means is that if we already have this collected data in the sheet, we 00:09:11.389 --> 00:09:13.230 align:start position:0% have this collected data in the sheet, we 00:09:13.230 --> 00:09:13.240 align:start position:0% 00:09:13.240 --> 00:09:15.190 align:start position:0% don't need to add the same information again. So, in order to check if there are 00:09:15.190 --> 00:09:15.200 align:start position:0% don't need to add the same information again. So, in order to check if there are 00:09:15.200 --> 00:09:17.069 align:start position:0% don't need to add the same information again. So, in order to check if there are duplicate videos or duplicate channels when it runs periodically, we need to 00:09:17.069 --> 00:09:19.310 align:start position:0% duplicate videos or duplicate channels when it runs periodically, we need to 00:09:19.310 --> 00:09:19.320 align:start position:0% 00:09:19.320 --> 00:09:20.870 align:start position:0% bring in the information in the sheet first. 00:09:20.870 --> 00:09:20.880 align:start position:0% bring in the information in the sheet first. 00:09:20.880 --> 00:09:22.710 align:start position:0% bring in the information in the sheet first. So, let's do that. 00:09:22.710 --> 00:09:22.720 align:start position:0% So, let's do that. 00:09:22.720 --> 00:09:24.550 align:start position:0% So, let's do that. So, we've already collected the video data, but 00:09:24.550 --> 00:09:24.560 align:start position:0% So, we've already collected the video data, but 00:09:24.560 --> 00:09:26.350 align:start position:0% So, we've already collected the video data, but now we 00:09:26.350 --> 00:09:26.360 align:start position:0% now we 00:09:26.360 --> 00:09:28.630 align:start position:0% now we 're going to bring in the sheet data additionally. 00:09:28.630 --> 00:09:28.640 align:start position:0% 're going to bring in the sheet data additionally. 00:09:28.640 --> 00:09:31.230 align:start position:0% 're going to bring in the sheet data additionally. This time, we 00:09:31.230 --> 00:09:31.240 align:start position:0% This time, we 00:09:31.240 --> 00:09:33.389 align:start position:0% This time, we 're not going to bring in touch, but range values. So, we're going to 00:09:33.389 --> 00:09:33.399 align:start position:0% 're not going to bring in touch, but range values. So, we're going to 00:09:33.399 --> 00:09:36.030 align:start position:0% 're not going to bring in touch, but range values. So, we're going to bring in values ​​for specific parts. You can also specify the sheet here. 00:09:36.030 --> 00:09:37.470 align:start position:0% bring in values ​​for specific parts. You can also specify the sheet here. 00:09:37.470 --> 00:09:37.480 align:start position:0% 00:09:37.480 --> 00:09:39.269 align:start position:0% Let's bring in the video data first. Since the video 00:09:39.269 --> 00:09:39.279 align:start position:0% Let's bring in the video data first. Since the video 00:09:39.279 --> 00:09:41.509 align:start position:0% Let's bring in the video data first. Since the video data will be compared by link, we can 00:09:41.509 --> 00:09:43.509 align:start position:0% data will be compared by link, we can 00:09:43.509 --> 00:09:43.519 align:start position:0% 00:09:43.519 --> 00:09:46.550 align:start position:0% bring in the video link part. 00:09:46.550 --> 00:09:46.560 align:start position:0% bring in the video link part. 00:09:46.560 --> 00:09:48.509 align:start position:0% bring in the video link part. Let's set g1b after G2. First, we 00:09:48.509 --> 00:09:50.910 align:start position:0% Let's set g1b after G2. First, we 00:09:50.910 --> 00:09:50.920 align:start position:0% 00:09:50.920 --> 00:09:53.110 align:start position:0% 'll set the range to the extent of Manhaeng. And there's a header. There's a 00:09:53.110 --> 00:09:53.120 align:start position:0% 'll set the range to the extent of Manhaeng. And there's a header. There's a 00:09:53.120 --> 00:09:55.230 align:start position:0% 'll set the range to the extent of Manhaeng. And there's a header. There's a G1 header. Set it like this. 00:09:55.230 --> 00:09:55.240 align:start position:0% G1 header. Set it like this. 00:09:55.240 --> 00:09:57.350 align:start position:0% G1 header. Set it like this. Then, we'll bring in all the video links. 00:09:57.350 --> 00:09:58.990 align:start position:0% Then, we'll bring in all the video links. 00:09:58.990 --> 00:09:59.000 align:start position:0% 00:09:59.000 --> 00:10:00.630 align:start position:0% After bringing in the video links, you 00:10:00.630 --> 00:10:00.640 align:start position:0% After bringing in the video links, you 00:10:00.640 --> 00:10:02.710 align:start position:0% After bringing in the video links, you can't just compare them. You have to bring these links into the sheet. 00:10:02.710 --> 00:10:02.720 align:start position:0% can't just compare them. You have to bring these links into the sheet. 00:10:02.720 --> 00:10:05.069 align:start position:0% can't just compare them. You have to bring these links into the sheet. If it is done, each will be bundled into a single bundle. 00:10:05.069 --> 00:10:05.079 align:start position:0% If it is done, each will be bundled into a single bundle. 00:10:05.079 --> 00:10:07.550 align:start position:0% If it is done, each will be bundled into a single bundle. Here, there is a bundle written like this. It will be 00:10:07.550 --> 00:10:07.560 align:start position:0% Here, there is a bundle written like this. It will be 00:10:07.560 --> 00:10:09.389 align:start position:0% Here, there is a bundle written like this. It will be bundled. I will 00:10:09.389 --> 00:10:09.399 align:start position:0% bundled. I will 00:10:09.399 --> 00:10:11.269 align:start position:0% bundled. I will show you how to bundle it. If you run it 00:10:11.269 --> 00:10:11.279 align:start position:0% show you how to bundle it. If you run it 00:10:11.279 --> 00:10:13.069 align:start position:0% show you how to bundle it. If you run it once and run it, you will see that there are 00:10:13.069 --> 00:10:13.079 align:start position:0% once and run it, you will see that there are 00:10:13.079 --> 00:10:14.910 align:start position:0% once and run it, you will see that there are multiple bundles like this. 00:10:14.910 --> 00:10:14.920 align:start position:0% multiple bundles like this. 00:10:14.920 --> 00:10:17.509 align:start position:0% multiple bundles like this. Since there are up to 39, 39 bundles will be 00:10:17.509 --> 00:10:17.519 align:start position:0% Since there are up to 39, 39 bundles will be 00:10:17.519 --> 00:10:19.829 align:start position:0% Since there are up to 39, 39 bundles will be displayed. However, if we 00:10:19.829 --> 00:10:19.839 align:start position:0% displayed. However, if we 00:10:19.839 --> 00:10:21.670 align:start position:0% displayed. However, if we do some contrasting work or do the 00:10:21.670 --> 00:10:21.680 align:start position:0% do some contrasting work or do the 00:10:21.680 --> 00:10:23.550 align:start position:0% do some contrasting work or do the subsequent work in this state, 00:10:23.550 --> 00:10:23.560 align:start position:0% subsequent work in this state, 00:10:23.560 --> 00:10:25.630 align:start position:0% subsequent work in this state, what kind of problem will occur? 00:10:25.630 --> 00:10:25.640 align:start position:0% what kind of problem will occur? 00:10:25.640 --> 00:10:27.190 align:start position:0% what kind of problem will occur? Here, there are bundles 1, 2, 3, 4. We have 00:10:27.190 --> 00:10:29.310 align:start position:0% Here, there are bundles 1, 2, 3, 4. We have 00:10:29.310 --> 00:10:29.320 align:start position:0% 00:10:29.320 --> 00:10:31.150 align:start position:0% done all the post-processing for bundle 1, and then we 00:10:31.150 --> 00:10:31.160 align:start position:0% done all the post-processing for bundle 1, and then we 00:10:31.160 --> 00:10:32.790 align:start position:0% done all the post-processing for bundle 1, and then we work on bundle 2. In this way, 00:10:32.790 --> 00:10:34.710 align:start position:0% work on bundle 2. In this way, 00:10:34.710 --> 00:10:36.990 align:start position:0% 00:10:36.990 --> 00:10:37.000 align:start position:0% 00:10:37.000 --> 00:10:39.030 align:start position:0% if a module that consumes three operations enters here, 00:10:39.030 --> 00:10:39.040 align:start position:0% if a module that consumes three operations enters here, 00:10:39.040 --> 00:10:41.470 align:start position:0% if a module that consumes three operations enters here, since there are 39 bundles, it will consume 39 * 3 operations. 00:10:41.470 --> 00:10:41.480 align:start position:0% since there are 39 bundles, it will consume 39 * 3 operations. 00:10:41.480 --> 00:10:42.990 align:start position:0% since there are 39 bundles, it will consume 39 * 3 operations. In short, 00:10:42.990 --> 00:10:43.000 align:start position:0% In short, 00:10:43.000 --> 00:10:44.990 align:start position:0% In short, it is currently displayed as 1, but the actual 00:10:44.990 --> 00:10:45.000 align:start position:0% it is currently displayed as 1, but the actual 00:10:45.000 --> 00:10:47.350 align:start position:0% it is currently displayed as 1, but the actual results from this work are 39, 00:10:47.350 --> 00:10:47.360 align:start position:0% results from this work are 39, 00:10:47.360 --> 00:10:49.790 align:start position:0% results from this work are 39, so we will do all the subsequent work for 39 separately. So 00:10:49.790 --> 00:10:49.800 align:start position:0% so we will do all the subsequent work for 39 separately. So 00:10:49.800 --> 00:10:51.230 align:start position:0% so we will do all the subsequent work for 39 separately. So of course, that won't work. 00:10:51.230 --> 00:10:51.240 align:start position:0% of course, that won't work. 00:10:51.240 --> 00:10:52.750 align:start position:0% of course, that won't work. So how should we do this? 00:10:52.750 --> 00:10:52.760 align:start position:0% So how should we do this? 00:10:52.760 --> 00:10:54.590 align:start position:0% So how should we do this? In the end, what we 00:10:54.590 --> 00:10:54.600 align:start position:0% In the end, what we 00:10:54.600 --> 00:10:57.069 align:start position:0% In the end, what we want to do is not all the values, but 00:10:57.069 --> 00:10:57.079 align:start position:0% want to do is not all the values, but 00:10:57.079 --> 00:10:59.829 align:start position:0% want to do is not all the values, but only collect the video links. You can check if this 00:10:59.829 --> 00:10:59.839 align:start position:0% only collect the video links. You can check if this 00:10:59.839 --> 00:11:02.470 align:start position:0% only collect the video links. You can check if this newly searched video link is 00:11:02.470 --> 00:11:02.480 align:start position:0% newly searched video link is 00:11:02.480 --> 00:11:04.990 align:start position:0% newly searched video link is included in the existing link. 00:11:04.990 --> 00:11:05.000 align:start position:0% included in the existing link. 00:11:05.000 --> 00:11:06.790 align:start position:0% included in the existing link. So 00:11:06.790 --> 00:11:06.800 align:start position:0% So 00:11:06.800 --> 00:11:08.990 align:start position:0% So we'll merge all these values. Then, 00:11:08.990 --> 00:11:09.000 align:start position:0% we'll merge all these values. Then, 00:11:09.000 --> 00:11:10.629 align:start position:0% we'll merge all these values. Then, how do we merge this bundle? Go into flow control and 00:11:10.629 --> 00:11:10.639 align:start position:0% how do we merge this bundle? Go into flow control and 00:11:10.639 --> 00:11:13.310 align:start position:0% how do we merge this bundle? Go into flow control and there's Ray Regey. 00:11:13.310 --> 00:11:13.320 align:start position:0% there's Ray Regey. 00:11:13.320 --> 00:11:15.470 align:start position:0% there's Ray Regey. And here, you have to 00:11:15.470 --> 00:11:15.480 align:start position:0% And here, you have to 00:11:15.480 --> 00:11:17.430 align:start position:0% And here, you have to select the value brought in from Google Sheets Range Value. You 00:11:17.430 --> 00:11:19.430 align:start position:0% select the value brought in from Google Sheets Range Value. You 00:11:19.430 --> 00:11:19.440 align:start position:0% 00:11:19.440 --> 00:11:21.509 align:start position:0% can select Video Link. You can merge only the video link value. 00:11:21.509 --> 00:11:21.519 align:start position:0% can select Video Link. You can merge only the video link value. 00:11:21.519 --> 00:11:23.110 align:start position:0% can select Video Link. You can merge only the video link value. So, set it like this and 00:11:23.110 --> 00:11:23.120 align:start position:0% So, set it like this and 00:11:23.120 --> 00:11:25.629 align:start position:0% So, set it like this and click Oi. Now, this Regulator ES 00:11:25.629 --> 00:11:25.639 align:start position:0% click Oi. Now, this Regulator ES 00:11:25.639 --> 00:11:27.750 align:start position:0% click Oi. Now, this Regulator ES bundle will 00:11:27.750 --> 00:11:27.760 align:start position:0% bundle will 00:11:27.760 --> 00:11:29.590 align:start position:0% bundle will merge only the values ​​for the video link into one value. You can merge it 00:11:29.590 --> 00:11:29.600 align:start position:0% merge only the values ​​for the video link into one value. You can merge it 00:11:29.600 --> 00:11:31.670 align:start position:0% merge only the values ​​for the video link into one value. You can merge it like this with Ray Regey. We'll 00:11:31.670 --> 00:11:33.670 align:start position:0% like this with Ray Regey. We'll 00:11:33.670 --> 00:11:33.680 align:start position:0% 00:11:33.680 --> 00:11:35.710 align:start position:0% do the same for getting channel information. 00:11:35.710 --> 00:11:35.720 align:start position:0% do the same for getting channel information. 00:11:35.720 --> 00:11:37.150 align:start position:0% do the same for getting channel information. We have to get the channel information now, so click 00:11:37.150 --> 00:11:37.160 align:start position:0% We have to get the channel information now, so click 00:11:37.160 --> 00:11:39.069 align:start position:0% We have to get the channel information now, so click Get Range Value. In 00:11:39.069 --> 00:11:39.079 align:start position:0% Get Range Value. In 00:11:39.079 --> 00:11:40.949 align:start position:0% Get Range Value. In the same way, from the YouTube crawling sheet, 00:11:40.949 --> 00:11:40.959 align:start position:0% the same way, from the YouTube crawling sheet, 00:11:40.959 --> 00:11:43.030 align:start position:0% the same way, from the YouTube crawling sheet, this time we'll get the channel sheet. In 00:11:43.030 --> 00:11:43.040 align:start position:0% this time we'll get the channel sheet. In 00:11:43.040 --> 00:11:46.430 align:start position:0% this time we'll get the channel sheet. In the case of the channel sheet, since it's a channel link, we can 00:11:46.430 --> 00:11:46.440 align:start position:0% the case of the channel sheet, since it's a channel link, we can 00:11:46.440 --> 00:11:49.150 align:start position:0% the case of the channel sheet, since it's a channel link, we can get the column. We'll do it from d 1 00:11:49.150 --> 00:11:49.160 align:start position:0% get the column. We'll do it from d 1 00:11:49.160 --> 00:11:50.949 align:start position:0% get the column. We'll do it from d 1 to d. The table 00:11:50.949 --> 00:11:50.959 align:start position:0% to d. The table 00:11:50.959 --> 00:11:53.550 align:start position:0% to d. The table header is the same as d1. Set it like 00:11:53.550 --> 00:11:53.560 align:start position:0% header is the same as d1. Set it like 00:11:53.560 --> 00:11:55.750 align:start position:0% header is the same as d1. Set it like this. For the same reason, we 00:11:55.750 --> 00:11:58.389 align:start position:0% this. For the same reason, we 00:11:58.389 --> 00:11:58.399 align:start position:0% 00:11:58.399 --> 00:11:59.949 align:start position:0% 'll merge the values ​​into the array Ei. 00:11:59.949 --> 00:11:59.959 align:start position:0% 'll merge the values ​​into the array Ei. 00:11:59.959 --> 00:12:02.509 align:start position:0% 'll merge the values ​​into the array Ei. This time, you have to select Lane Value 5, 5. 00:12:02.509 --> 00:12:02.519 align:start position:0% This time, you have to select Lane Value 5, 5. 00:12:02.519 --> 00:12:04.470 align:start position:0% This time, you have to select Lane Value 5, 5. And here, you need to 00:12:04.470 --> 00:12:04.480 align:start position:0% And here, you need to 00:12:04.480 --> 00:12:06.150 align:start position:0% And here, you need to merge the channel links. 00:12:06.150 --> 00:12:06.160 align:start position:0% merge the channel links. 00:12:06.160 --> 00:12:08.230 align:start position:0% merge the channel links. Then, now, we are ready to combine the 00:12:08.230 --> 00:12:08.240 align:start position:0% Then, now, we are ready to combine the 00:12:08.240 --> 00:12:10.430 align:start position:0% Then, now, we are ready to combine the information of the existing sheet into one array and 00:12:10.430 --> 00:12:10.440 align:start position:0% information of the existing sheet into one array and 00:12:10.440 --> 00:12:12.389 align:start position:0% information of the existing sheet into one array and compare it. 00:12:12.389 --> 00:12:12.399 align:start position:0% compare it. 00:12:12.399 --> 00:12:14.990 align:start position:0% compare it. Then, we need to compare these values ​​with the 00:12:14.990 --> 00:12:17.030 align:start position:0% Then, we need to compare these values ​​with the 00:12:17.030 --> 00:12:17.040 align:start position:0% 00:12:17.040 --> 00:12:19.230 align:start position:0% values ​​of the video research that we got from this search and 00:12:19.230 --> 00:12:19.240 align:start position:0% values ​​of the video research that we got from this search and 00:12:19.240 --> 00:12:21.350 align:start position:0% values ​​of the video research that we got from this search and update only the non-duplicated ones in the sheet. 00:12:21.350 --> 00:12:23.030 align:start position:0% update only the non-duplicated ones in the sheet. 00:12:23.030 --> 00:12:23.040 align:start position:0% 00:12:23.040 --> 00:12:24.990 align:start position:0% If you look at this sub API, there is one bundle. But 00:12:24.990 --> 00:12:25.000 align:start position:0% If you look at this sub API, there is one bundle. But 00:12:25.000 --> 00:12:27.189 align:start position:0% If you look at this sub API, there is one bundle. But the values ​​that we want to compare are these video retrievals, 00:12:27.189 --> 00:12:27.199 align:start position:0% the values ​​that we want to compare are these video retrievals, 00:12:27.199 --> 00:12:29.269 align:start position:0% the values ​​that we want to compare are these video retrievals, 1 2 3 4 to 20. We want to compare 00:12:29.269 --> 00:12:29.279 align:start position:0% 1 2 3 4 to 20. We want to compare 00:12:29.279 --> 00:12:31.710 align:start position:0% 1 2 3 4 to 20. We want to compare each of these values ​​one by one 00:12:31.710 --> 00:12:31.720 align:start position:0% each of these values ​​one by one 00:12:31.720 --> 00:12:33.550 align:start position:0% each of these values ​​one by one with the combined value. 00:12:33.550 --> 00:12:33.560 align:start position:0% with the combined value. 00:12:33.560 --> 00:12:35.710 align:start position:0% with the combined value. So, we 00:12:35.710 --> 00:12:35.720 align:start position:0% So, we 00:12:35.720 --> 00:12:37.310 align:start position:0% So, we need to split this bundle into 20 bundles this time. You can 00:12:37.310 --> 00:12:37.320 align:start position:0% need to split this bundle into 20 bundles this time. You can 00:12:37.320 --> 00:12:39.269 align:start position:0% need to split this bundle into 20 bundles this time. You can use the iterator in the flow control. 00:12:39.269 --> 00:12:39.279 align:start position:0% use the iterator in the flow control. 00:12:39.279 --> 00:12:41.629 align:start position:0% use the iterator in the flow control. Here, 00:12:41.629 --> 00:12:43.550 align:start position:0% Here, 00:12:43.550 --> 00:12:45.150 align:start position:0% 00:12:45.150 --> 00:12:45.160 align:start position:0% 00:12:45.160 --> 00:12:46.710 align:start position:0% select the video results array, which contains the video information. 00:12:46.710 --> 00:12:46.720 align:start position:0% select the video results array, which contains the video information. 00:12:46.720 --> 00:12:48.670 align:start position:0% select the video results array, which contains the video information. If you click OK, the video 00:12:48.670 --> 00:12:48.680 align:start position:0% If you click OK, the video 00:12:48.680 --> 00:12:51.069 align:start position:0% If you click OK, the video information bundles will be split one by one. 00:12:51.069 --> 00:12:51.079 align:start position:0% information bundles will be split one by one. 00:12:51.079 --> 00:12:52.670 align:start position:0% information bundles will be split one by one. Then, we can compare the split ones. We 00:12:52.670 --> 00:12:54.269 align:start position:0% Then, we can compare the split ones. We 00:12:54.269 --> 00:12:56.550 align:start position:0% 00:12:56.550 --> 00:12:56.560 align:start position:0% 00:12:56.560 --> 00:12:58.030 align:start position:0% need to update the sheet for the videos that are not duplicated by comparing them. So, I will 00:12:58.030 --> 00:12:58.040 align:start position:0% need to update the sheet for the videos that are not duplicated by comparing them. So, I will 00:12:58.040 --> 00:13:00.110 align:start position:0% need to update the sheet for the videos that are not duplicated by comparing them. So, I will connect the sheets first. We need to 00:13:00.110 --> 00:13:00.120 align:start position:0% connect the sheets first. We need to 00:13:00.120 --> 00:13:02.389 align:start position:0% connect the sheets first. We need to add rows in the sheet. Okay, 00:13:02.389 --> 00:13:02.399 align:start position:0% add rows in the sheet. Okay, 00:13:02.399 --> 00:13:04.710 align:start position:0% add rows in the sheet. Okay, so first, add a sheet row. Add it 00:13:04.710 --> 00:13:04.720 align:start position:0% so first, add a sheet row. Add it 00:13:04.720 --> 00:13:06.590 align:start position:0% so first, add a sheet row. Add it to the video tab like this. I 00:13:06.590 --> 00:13:09.230 align:start position:0% to the video tab like this. I 00:13:09.230 --> 00:13:09.240 align:start position:0% 00:13:09.240 --> 00:13:10.990 align:start position:0% 'll split the iterator into values ​​one by one. So let's 00:13:10.990 --> 00:13:11.000 align:start position:0% 'll split the iterator into values ​​one by one. So let's 00:13:11.000 --> 00:13:12.790 align:start position:0% 'll split the iterator into values ​​one by one. So let's set this first and then 00:13:12.790 --> 00:13:12.800 align:start position:0% set this first and then 00:13:12.800 --> 00:13:14.350 align:start position:0% set this first and then set the filter. Here, the upload 00:13:14.350 --> 00:13:14.360 align:start position:0% set the filter. Here, the upload 00:13:14.360 --> 00:13:16.509 align:start position:0% set the filter. Here, the upload date is the Pavli date. Then, the channel 00:13:16.509 --> 00:13:16.519 align:start position:0% date is the Pavli date. Then, the channel 00:13:16.519 --> 00:13:19.629 align:start position:0% date is the Pavli date. Then, the channel channel is here. The channel name is here. The length is the 00:13:19.629 --> 00:13:19.639 align:start position:0% channel is here. The channel name is here. The length is the 00:13:19.639 --> 00:13:22.350 align:start position:0% channel is here. The channel name is here. The length is the video title. You 00:13:22.350 --> 00:13:22.360 align:start position:0% video title. You 00:13:22.360 --> 00:13:24.470 align:start position:0% video title. You can set all the matching like this. 00:13:24.470 --> 00:13:24.480 align:start position:0% can set all the matching like this. 00:13:24.480 --> 00:13:26.870 align:start position:0% can set all the matching like this. View. Then, the video link. The video link is 00:13:26.870 --> 00:13:26.880 align:start position:0% View. Then, the video link. The video link is 00:13:26.880 --> 00:13:29.110 align:start position:0% View. Then, the video link. The video link is here. Then, you can 00:13:29.110 --> 00:13:29.120 align:start position:0% here. Then, you can 00:13:29.120 --> 00:13:31.110 align:start position:0% here. Then, you can put the channel link in the channel like this. 00:13:31.110 --> 00:13:31.120 align:start position:0% put the channel link in the channel like this. 00:13:31.120 --> 00:13:32.990 align:start position:0% put the channel link in the channel like this. There's also something called a video ID. 00:13:32.990 --> 00:13:33.000 align:start position:0% There's also something called a video ID. 00:13:33.000 --> 00:13:35.189 align:start position:0% There's also something called a video ID. In the previous video, I 00:13:35.189 --> 00:13:35.199 align:start position:0% In the previous video, I 00:13:35.199 --> 00:13:37.590 align:start position:0% In the previous video, I talked about how to use the 00:13:37.590 --> 00:13:37.600 align:start position:0% talked about how to use the 00:13:37.600 --> 00:13:40.310 align:start position:0% talked about how to use the formula. Using the formula, we 00:13:40.310 --> 00:13:42.629 align:start position:0% formula. Using the formula, we 00:13:42.629 --> 00:13:42.639 align:start position:0% 00:13:42.639 --> 00:13:44.550 align:start position:0% 'll extract the ID value with the video link value. The 00:13:44.550 --> 00:13:44.560 align:start position:0% 'll extract the ID value with the video link value. The 00:13:44.560 --> 00:13:47.069 align:start position:0% 'll extract the ID value with the video link value. The ID value is the value that V is doing 00:13:47.069 --> 00:13:47.079 align:start position:0% ID value is the value that V is doing 00:13:47.079 --> 00:13:49.790 align:start position:0% ID value is the value that V is doing or the value after it. By 00:13:49.790 --> 00:13:49.800 align:start position:0% or the value after it. By 00:13:49.800 --> 00:13:52.150 align:start position:0% or the value after it. By writing it as a string, you can 00:13:52.150 --> 00:13:52.160 align:start position:0% writing it as a string, you can 00:13:52.160 --> 00:13:54.430 align:start position:0% writing it as a string, you can first put in the link. Then, the string can now 00:13:54.430 --> 00:13:54.440 align:start position:0% first put in the link. Then, the string can now 00:13:54.440 --> 00:13:56.350 align:start position:0% first put in the link. Then, the string can now use the index among the values ​​of this link to 00:13:56.350 --> 00:13:58.269 align:start position:0% use the index among the values ​​of this link to 00:13:58.269 --> 00:13:58.279 align:start position:0% 00:13:58.279 --> 00:13:59.790 align:start position:0% set where to split it from. 00:13:59.790 --> 00:13:59.800 align:start position:0% set where to split it from. 00:13:59.800 --> 00:14:01.629 align:start position:0% set where to split it from. Here, 00:14:01.629 --> 00:14:01.639 align:start position:0% Here, 00:14:01.639 --> 00:14:03.710 align:start position:0% Here, you have to split it from the beginning to the end, 00:14:03.710 --> 00:14:03.720 align:start position:0% you have to split it from the beginning to the end, 00:14:03.720 --> 00:14:05.749 align:start position:0% you have to split it from the beginning to the end, so you have to set the starting point well. 00:14:05.749 --> 00:14:07.829 align:start position:0% so you have to set the starting point well. 00:14:07.829 --> 00:14:07.839 align:start position:0% 00:14:07.839 --> 00:14:09.990 align:start position:0% There is a starting point called index oh, so do index oh and 00:14:09.990 --> 00:14:10.000 align:start position:0% There is a starting point called index oh, so do index oh and 00:14:10.000 --> 00:14:12.590 align:start position:0% There is a starting point called index oh, so do index oh and put this link video link and 00:14:12.590 --> 00:14:12.600 align:start position:0% put this link video link and 00:14:12.600 --> 00:14:14.629 align:start position:0% put this link video link and then when you go in like this, since it is a 00:14:14.629 --> 00:14:14.639 align:start position:0% then when you go in like this, since it is a 00:14:14.639 --> 00:14:17.430 align:start position:0% then when you go in like this, since it is a link to index oh, 00:14:17.430 --> 00:14:17.440 align:start position:0% link to index oh, 00:14:17.440 --> 00:14:19.389 align:start position:0% link to index oh, there is an index with oh in the link, so we 00:14:19.389 --> 00:14:19.399 align:start position:0% there is an index with oh in the link, so we 00:14:19.399 --> 00:14:21.670 align:start position:0% there is an index with oh in the link, so we bring that in and now we 00:14:21.670 --> 00:14:21.680 align:start position:0% bring that in and now we 00:14:21.680 --> 00:14:23.710 align:start position:0% bring that in and now we want to bring the next one in there, so you have to plus 00:14:23.710 --> 00:14:23.720 align:start position:0% want to bring the next one in there, so you have to plus 00:14:23.720 --> 00:14:24.990 align:start position:0% want to bring the next one in there, so you have to plus 1. So 00:14:24.990 --> 00:14:25.000 align:start position:0% 1. So 00:14:25.000 --> 00:14:26.829 align:start position:0% 1. So if you look at the math function here, there is a plus button. 00:14:26.829 --> 00:14:26.839 align:start position:0% if you look at the math function here, there is a plus button. 00:14:26.839 --> 00:14:28.269 align:start position:0% if you look at the math function here, there is a plus button. We can't put the plus directly, 00:14:28.269 --> 00:14:28.279 align:start position:0% We can't put the plus directly, 00:14:28.279 --> 00:14:30.030 align:start position:0% We can't put the plus directly, but we have to put it in with this plus. 00:14:30.030 --> 00:14:30.040 align:start position:0% but we have to put it in with this plus. 00:14:30.040 --> 00:14:31.509 align:start position:0% but we have to put it in with this plus. Put the plus and then do 1 like this. And I 00:14:31.509 --> 00:14:33.189 align:start position:0% Put the plus and then do 1 like this. And I 00:14:33.189 --> 00:14:33.199 align:start position:0% 00:14:33.199 --> 00:14:35.030 align:start position:0% left the last part empty because we are going to bring it to the end. 00:14:35.030 --> 00:14:35.040 align:start position:0% left the last part empty because we are going to bring it to the end. 00:14:35.040 --> 00:14:36.470 align:start position:0% left the last part empty because we are going to bring it to the end. So you do 00:14:36.470 --> 00:14:36.480 align:start position:0% So you do 00:14:36.480 --> 00:14:38.030 align:start position:0% So you do n't have to put anything here and if you set it like this, if we 00:14:38.030 --> 00:14:40.310 align:start position:0% n't have to put anything here and if you set it like this, if we 00:14:40.310 --> 00:14:40.320 align:start position:0% 00:14:40.320 --> 00:14:42.269 align:start position:0% have 20 video links in our iterator, they 00:14:42.269 --> 00:14:42.279 align:start position:0% have 20 video links in our iterator, they 00:14:42.279 --> 00:14:44.110 align:start position:0% have 20 video links in our iterator, they will be inserted one by one. So 00:14:44.110 --> 00:14:44.120 align:start position:0% will be inserted one by one. So 00:14:44.120 --> 00:14:46.350 align:start position:0% will be inserted one by one. So now this row is set to be added one by one. 00:14:46.350 --> 00:14:46.360 align:start position:0% now this row is set to be added one by one. 00:14:46.360 --> 00:14:47.829 align:start position:0% now this row is set to be added one by one. So up to here, it's 00:14:47.829 --> 00:14:47.839 align:start position:0% So up to here, it's 00:14:47.839 --> 00:14:49.910 align:start position:0% So up to here, it's good, but when you add, you have to 00:14:49.910 --> 00:14:49.920 align:start position:0% good, but when you add, you have to 00:14:49.920 --> 00:14:51.749 align:start position:0% good, but when you add, you have to filter the existing videos, 00:14:51.749 --> 00:14:51.759 align:start position:0% filter the existing videos, 00:14:51.759 --> 00:14:53.310 align:start position:0% filter the existing videos, so we will do that filtering. You 00:14:53.310 --> 00:14:56.389 align:start position:0% so we will do that filtering. You 00:14:56.389 --> 00:14:56.399 align:start position:0% 00:14:56.399 --> 00:14:58.509 align:start position:0% can do the filter in the middle of the iterator and the Google sheet. Here, 00:14:58.509 --> 00:14:58.519 align:start position:0% can do the filter in the middle of the iterator and the Google sheet. Here, 00:14:58.519 --> 00:15:00.470 align:start position:0% can do the filter in the middle of the iterator and the Google sheet. Here, click the button in the middle and 00:15:00.470 --> 00:15:00.480 align:start position:0% click the button in the middle and 00:15:00.480 --> 00:15:02.230 align:start position:0% click the button in the middle and go to the setup filter. Here, 00:15:02.230 --> 00:15:02.240 align:start position:0% go to the setup filter. Here, 00:15:02.240 --> 00:15:03.629 align:start position:0% go to the setup filter. Here, we The filter to do is to 00:15:03.629 --> 00:15:03.639 align:start position:0% we The filter to do is to 00:15:03.639 --> 00:15:05.150 align:start position:0% we The filter to do is to check if there are any duplicate videos. 00:15:05.150 --> 00:15:05.160 align:start position:0% check if there are any duplicate videos. 00:15:05.160 --> 00:15:07.150 align:start position:0% check if there are any duplicate videos. So, 00:15:07.150 --> 00:15:07.160 align:start position:0% So, 00:15:07.160 --> 00:15:09.350 align:start position:0% So, please set it to Check for Duplicate Videos. For the condition, I 00:15:09.350 --> 00:15:09.360 align:start position:0% please set it to Check for Duplicate Videos. For the condition, I 00:15:09.360 --> 00:15:11.269 align:start position:0% please set it to Check for Duplicate Videos. For the condition, I created two array aggregates. The one 00:15:11.269 --> 00:15:11.279 align:start position:0% created two array aggregates. The one 00:15:11.279 --> 00:15:13.230 align:start position:0% created two array aggregates. The one right next to this 00:15:13.230 --> 00:15:13.240 align:start position:0% right next to this 00:15:13.240 --> 00:15:14.910 align:start position:0% right next to this is to get channel information, and the one that comes 00:15:14.910 --> 00:15:14.920 align:start position:0% is to get channel information, and the one that comes 00:15:14.920 --> 00:15:17.230 align:start position:0% is to get channel information, and the one that comes first is an array that 00:15:17.230 --> 00:15:17.240 align:start position:0% first is an array that 00:15:17.240 --> 00:15:18.990 align:start position:0% first is an array that has information about the array aggregator video. If you 00:15:18.990 --> 00:15:19.000 align:start position:0% has information about the array aggregator video. If you 00:15:19.000 --> 00:15:20.790 align:start position:0% has information about the array aggregator video. If you click here, you can see the 00:15:20.790 --> 00:15:20.800 align:start position:0% click here, you can see the 00:15:20.800 --> 00:15:22.470 align:start position:0% click here, you can see the video link. You 00:15:22.470 --> 00:15:22.480 align:start position:0% video link. You 00:15:22.480 --> 00:15:24.230 align:start position:0% video link. You can't click on the link. You 00:15:24.230 --> 00:15:24.240 align:start position:0% can't click on the link. You 00:15:24.240 --> 00:15:25.910 align:start position:0% can't click on the link. You have to get the array itself. That's because you 00:15:25.910 --> 00:15:25.920 align:start position:0% have to get the array itself. That's because you 00:15:25.920 --> 00:15:27.590 align:start position:0% have to get the array itself. That's because you want to get all the information included. So, if you 00:15:27.590 --> 00:15:27.600 align:start position:0% want to get all the information included. So, if you 00:15:27.600 --> 00:15:29.389 align:start position:0% want to get all the information included. So, if you click on this, you 00:15:29.389 --> 00:15:29.399 align:start position:0% click on this, you 00:15:29.399 --> 00:15:30.949 align:start position:0% click on this, you will only get one of the information. Please select the entire array. But 00:15:30.949 --> 00:15:33.069 align:start position:0% will only get one of the information. Please select the entire array. But 00:15:33.069 --> 00:15:33.079 align:start position:0% 00:15:33.079 --> 00:15:35.629 align:start position:0% in this entire array, we only 00:15:35.629 --> 00:15:35.639 align:start position:0% in this entire array, we only 00:15:35.639 --> 00:15:37.829 align:start position:0% in this entire array, we only want to include values ​​for video links. Then, you 00:15:37.829 --> 00:15:40.069 align:start position:0% want to include values ​​for video links. Then, you 00:15:40.069 --> 00:15:42.550 align:start position:0% 00:15:42.550 --> 00:15:42.560 align:start position:0% 00:15:42.560 --> 00:15:44.389 align:start position:0% can use the formula called map to set it to get only the information related to this video link from this array. 00:15:44.389 --> 00:15:46.829 align:start position:0% can use the formula called map to set it to get only the information related to this video link from this array. 00:15:46.829 --> 00:15:46.839 align:start position:0% 00:15:46.839 --> 00:15:48.550 align:start position:0% When you specify the column name here, you can't say video link. 00:15:48.550 --> 00:15:48.560 align:start position:0% When you specify the column name here, you can't say video link. 00:15:48.560 --> 00:15:50.430 align:start position:0% When you specify the column name here, you can't say video link. Here, the row that is written now is 00:15:50.430 --> 00:15:50.440 align:start position:0% Here, the row that is written now is 00:15:50.440 --> 00:15:52.150 align:start position:0% Here, the row that is written now is 0. So you have to 00:15:52.150 --> 00:15:52.160 align:start position:0% 0. So you have to 00:15:52.160 --> 00:15:54.110 align:start position:0% 0. So you have to enter the row ID. Since it is 0, I 00:15:54.110 --> 00:15:54.120 align:start position:0% enter the row ID. Since it is 0, I 00:15:54.120 --> 00:15:55.949 align:start position:0% enter the row ID. Since it is 0, I will set it to 0. Then, 00:15:55.949 --> 00:15:55.959 align:start position:0% will set it to 0. Then, 00:15:55.959 --> 00:15:57.550 align:start position:0% will set it to 0. Then, this array 00:15:57.550 --> 00:15:57.560 align:start position:0% this array 00:15:57.560 --> 00:15:59.550 align:start position:0% this array aggregator ES links 00:15:59.550 --> 00:15:59.560 align:start position:0% aggregator ES links 00:15:59.560 --> 00:16:01.590 align:start position:0% aggregator ES links have combined values. Only those values. Extract and bring it. 00:16:01.590 --> 00:16:01.600 align:start position:0% have combined values. Only those values. Extract and bring it. 00:16:01.600 --> 00:16:03.670 align:start position:0% have combined values. Only those values. Extract and bring it. Then those values 00:16:03.670 --> 00:16:03.680 align:start position:0% Then those values 00:16:03.680 --> 00:16:05.389 align:start position:0% Then those values should be compared with the Rainy array. 00:16:05.389 --> 00:16:05.399 align:start position:0% should be compared with the Rainy array. 00:16:05.399 --> 00:16:07.949 align:start position:0% should be compared with the Rainy array. Then, the array operator should contain the 00:16:07.949 --> 00:16:07.959 align:start position:0% Then, the array operator should contain the 00:16:07.959 --> 00:16:09.790 align:start position:0% Then, the array operator should contain the values ​​contained here. This new 00:16:09.790 --> 00:16:09.800 align:start position:0% values ​​contained here. This new 00:16:09.800 --> 00:16:11.710 align:start position:0% values ​​contained here. This new video link. Where is the new video link? 00:16:11.710 --> 00:16:11.720 align:start position:0% video link. Where is the new video link? 00:16:11.720 --> 00:16:13.790 align:start position:0% video link. Where is the new video link? There is an iterator. 00:16:13.790 --> 00:16:13.800 align:start position:0% There is an iterator. 00:16:13.800 --> 00:16:16.189 align:start position:0% There is an iterator. This iterator a link. This iterator does 00:16:16.189 --> 00:16:16.199 align:start position:0% This iterator a link. This iterator does 00:16:16.199 --> 00:16:18.150 align:start position:0% This iterator a link. This iterator does not contain each link. Then, 00:16:18.150 --> 00:16:18.160 align:start position:0% not contain each link. Then, 00:16:18.160 --> 00:16:19.949 align:start position:0% not contain each link. Then, filter and 00:16:19.949 --> 00:16:19.959 align:start position:0% filter and 00:16:19.959 --> 00:16:21.990 align:start position:0% filter and pass only the ones that are not contained and add them to the sheet. You 00:16:21.990 --> 00:16:22.000 align:start position:0% pass only the ones that are not contained and add them to the sheet. You 00:16:22.000 --> 00:16:23.550 align:start position:0% pass only the ones that are not contained and add them to the sheet. You can set it like this. 00:16:23.550 --> 00:16:23.560 align:start position:0% can set it like this. 00:16:23.560 --> 00:16:25.590 align:start position:0% can set it like this. Do you understand? Then, we added the video. 00:16:25.590 --> 00:16:25.600 align:start position:0% Do you understand? Then, we added the video. 00:16:25.600 --> 00:16:28.110 align:start position:0% Do you understand? Then, we added the video. Then, we 00:16:28.110 --> 00:16:28.120 align:start position:0% Then, we 00:16:28.120 --> 00:16:29.550 align:start position:0% Then, we need to update the channel information. However, 00:16:29.550 --> 00:16:29.560 align:start position:0% need to update the channel information. However, 00:16:29.560 --> 00:16:31.309 align:start position:0% need to update the channel information. However, when updating the channel information, 00:16:31.309 --> 00:16:31.319 align:start position:0% when updating the channel information, 00:16:31.319 --> 00:16:33.629 align:start position:0% when updating the channel information, many videos have been added, but some of them 00:16:33.629 --> 00:16:35.670 align:start position:0% many videos have been added, but some of them 00:16:35.670 --> 00:16:35.680 align:start position:0% 00:16:35.680 --> 00:16:37.670 align:start position:0% may already have channel information. We have 00:16:37.670 --> 00:16:37.680 align:start position:0% may already have channel information. We have 00:16:37.680 --> 00:16:39.710 align:start position:0% may already have channel information. We have already updated the video of the channel called Citizen Developer, 00:16:39.710 --> 00:16:39.720 align:start position:0% already updated the video of the channel called Citizen Developer, 00:16:39.720 --> 00:16:41.430 align:start position:0% already updated the video of the channel called Citizen Developer, so the channel information will 00:16:41.430 --> 00:16:41.440 align:start position:0% so the channel information will 00:16:41.440 --> 00:16:43.069 align:start position:0% so the channel information will already have the information called Citizen Developer. 00:16:43.069 --> 00:16:43.079 align:start position:0% already have the information called Citizen Developer. 00:16:43.079 --> 00:16:44.949 align:start position:0% already have the information called Citizen Developer. Then, when a 00:16:44.949 --> 00:16:44.959 align:start position:0% Then, when a 00:16:44.959 --> 00:16:47.110 align:start position:0% Then, when a new video is uploaded to that channel from Citizen Developer, 00:16:47.110 --> 00:16:47.120 align:start position:0% new video is uploaded to that channel from Citizen Developer, 00:16:47.120 --> 00:16:49.350 align:start position:0% new video is uploaded to that channel from Citizen Developer, the video information 00:16:49.350 --> 00:16:49.360 align:start position:0% the video information 00:16:49.360 --> 00:16:51.110 align:start position:0% the video information will be collected, but there is no need to collect it in the channel information. Since it 00:16:51.110 --> 00:16:51.120 align:start position:0% will be collected, but there is no need to collect it in the channel information. Since it 00:16:51.120 --> 00:16:53.230 align:start position:0% will be collected, but there is no need to collect it in the channel information. Since it is an existing channel, we 00:16:53.230 --> 00:16:53.240 align:start position:0% is an existing channel, we 00:16:53.240 --> 00:16:54.710 align:start position:0% is an existing channel, we need to compare it again. 00:16:54.710 --> 00:16:54.720 align:start position:0% need to compare it again. 00:16:54.720 --> 00:16:57.189 align:start position:0% need to compare it again. This time, through this filter, 00:16:57.189 --> 00:16:57.199 align:start position:0% This time, through this filter, 00:16:57.199 --> 00:16:59.550 align:start position:0% This time, through this filter, for the videos that will be added, the 00:16:59.550 --> 00:16:59.560 align:start position:0% for the videos that will be added, the 00:16:59.560 --> 00:17:01.910 align:start position:0% for the videos that will be added, the channel links of those channels 00:17:01.910 --> 00:17:01.920 align:start position:0% channel links of those channels 00:17:01.920 --> 00:17:03.790 align:start position:0% channel links of those channels will be collected. And those channels are also 00:17:03.790 --> 00:17:03.800 align:start position:0% will be collected. And those channels are also 00:17:03.800 --> 00:17:05.630 align:start position:0% will be collected. And those channels are also duplicated. There may be, because there 00:17:05.630 --> 00:17:07.669 align:start position:0% duplicated. There may be, because there 00:17:07.669 --> 00:17:07.679 align:start position:0% 00:17:07.679 --> 00:17:09.870 align:start position:0% may be channels that uploaded multiple videos. Among the searched videos, the 00:17:09.870 --> 00:17:09.880 align:start position:0% may be channels that uploaded multiple videos. Among the searched videos, the 00:17:09.880 --> 00:17:11.829 align:start position:0% may be channels that uploaded multiple videos. Among the searched videos, the channels extracted from the iterator ES are 00:17:11.829 --> 00:17:11.839 align:start position:0% channels extracted from the iterator ES are 00:17:11.839 --> 00:17:13.829 align:start position:0% channels extracted from the iterator ES are merged back into one. 00:17:13.829 --> 00:17:13.839 align:start position:0% merged back into one. 00:17:13.839 --> 00:17:15.870 align:start position:0% merged back into one. After merging, a unique value is extracted from it. 00:17:15.870 --> 00:17:15.880 align:start position:0% After merging, a unique value is extracted from it. 00:17:15.880 --> 00:17:18.069 align:start position:0% After merging, a unique value is extracted from it. This way, we 00:17:18.069 --> 00:17:18.079 align:start position:0% This way, we 00:17:18.079 --> 00:17:19.630 align:start position:0% This way, we can use it when comparing channel information. 00:17:19.630 --> 00:17:19.640 align:start position:0% can use it when comparing channel information. 00:17:19.640 --> 00:17:21.270 align:start position:0% can use it when comparing channel information. So what we're going to do here is, we're 00:17:21.270 --> 00:17:21.280 align:start position:0% So what we're going to do here is, we're 00:17:21.280 --> 00:17:23.029 align:start position:0% So what we're going to do here is, we're going to merge the information again, so we're going to 00:17:23.029 --> 00:17:23.039 align:start position:0% going to merge the information again, so we're going to 00:17:23.039 --> 00:17:24.590 align:start position:0% going to merge the information again, so we're going to create another array aggregator. 00:17:24.590 --> 00:17:24.600 align:start position:0% create another array aggregator. 00:17:24.600 --> 00:17:26.309 align:start position:0% create another array aggregator. And the array aggregator 00:17:26.309 --> 00:17:26.319 align:start position:0% And the array aggregator 00:17:26.319 --> 00:17:28.510 align:start position:0% And the array aggregator ES has to get from the last iterator, the video 00:17:28.510 --> 00:17:28.520 align:start position:0% ES has to get from the last iterator, the video 00:17:28.520 --> 00:17:30.630 align:start position:0% ES has to get from the last iterator, the video link. We're 00:17:30.630 --> 00:17:30.640 align:start position:0% link. We're 00:17:30.640 --> 00:17:32.549 align:start position:0% link. We're going to get the channel information here. The channel information 00:17:32.549 --> 00:17:32.559 align:start position:0% going to get the channel information here. The channel information 00:17:32.559 --> 00:17:34.549 align:start position:0% going to get the channel information here. The channel information contains a link, so we're going to get it. The 00:17:34.549 --> 00:17:34.559 align:start position:0% contains a link, so we're going to get it. The 00:17:34.559 --> 00:17:36.669 align:start position:0% contains a link, so we're going to get it. The important thing here is that you can't just get the entire link. We 00:17:36.669 --> 00:17:39.150 align:start position:0% important thing here is that you can't just get the entire link. We 00:17:39.150 --> 00:17:39.160 align:start position:0% 00:17:39.160 --> 00:17:40.909 align:start position:0% 're going to check for channel duplication here. So we've 00:17:40.909 --> 00:17:42.750 align:start position:0% 're going to check for channel duplication here. So we've 00:17:42.750 --> 00:17:42.760 align:start position:0% 00:17:42.760 --> 00:17:44.990 align:start position:0% saved the channel links in the second array aggregate. The channel links that we already have in the sheet. 00:17:44.990 --> 00:17:46.590 align:start position:0% saved the channel links in the second array aggregate. The channel links that we already have in the sheet. 00:17:46.590 --> 00:17:46.600 align:start position:0% 00:17:46.600 --> 00:17:48.909 align:start position:0% Similarly, we're going to use the map to 00:17:48.909 --> 00:17:51.750 align:start position:0% Similarly, we're going to use the map to 00:17:51.750 --> 00:17:53.830 align:start position:0% 00:17:53.830 --> 00:17:53.840 align:start position:0% 00:17:53.840 --> 00:17:55.870 align:start position:0% extract only the channel link values ​​that are 0 from this array. And we're going to 00:17:55.870 --> 00:17:58.470 align:start position:0% extract only the channel link values ​​that are 0 from this array. And we're going to 00:17:58.470 --> 00:17:58.480 align:start position:0% 00:17:58.480 --> 00:18:00.710 align:start position:0% compare the ray and the iterator A channel link. If it's 00:18:00.710 --> 00:18:00.720 align:start position:0% compare the ray and the iterator A channel link. If it's 00:18:00.720 --> 00:18:02.630 align:start position:0% compare the ray and the iterator A channel link. If it's not included, we're going to merge them. This is how it's 00:18:02.630 --> 00:18:02.640 align:start position:0% not included, we're going to merge them. This is how it's 00:18:02.640 --> 00:18:04.430 align:start position:0% not included, we're going to merge them. This is how it's going to work. So now, we're going to 00:18:04.430 --> 00:18:04.440 align:start position:0% going to work. So now, we're going to 00:18:04.440 --> 00:18:06.230 align:start position:0% going to work. So now, we're going to get the channel information from the sheet. The array 00:18:06.230 --> 00:18:06.240 align:start position:0% get the channel information from the sheet. The array 00:18:06.240 --> 00:18:08.789 align:start position:0% get the channel information from the sheet. The array ligator was called and gathered, and the values ​​were made into 00:18:08.789 --> 00:18:08.799 align:start position:0% ligator was called and gathered, and the values ​​were made into 00:18:08.799 --> 00:18:10.950 align:start position:0% ligator was called and gathered, and the values ​​were made into an array using the condition map function. And 00:18:10.950 --> 00:18:12.789 align:start position:0% an array using the condition map function. And 00:18:12.789 --> 00:18:12.799 align:start position:0% 00:18:12.799 --> 00:18:15.149 align:start position:0% the values ​​were compared with the 00:18:15.149 --> 00:18:15.159 align:start position:0% the values ​​were compared with the 00:18:15.159 --> 00:18:17.430 align:start position:0% the values ​​were compared with the channel links of each video we collected by extracting the iterator ES, and 00:18:17.430 --> 00:18:19.750 align:start position:0% channel links of each video we collected by extracting the iterator ES, and 00:18:19.750 --> 00:18:19.760 align:start position:0% 00:18:19.760 --> 00:18:21.549 align:start position:0% only the new channels were filtered. So 00:18:21.549 --> 00:18:21.559 align:start position:0% only the new channels were filtered. So 00:18:21.559 --> 00:18:23.510 align:start position:0% only the new channels were filtered. So only the new channels were filtered and the array 00:18:23.510 --> 00:18:23.520 align:start position:0% only the new channels were filtered and the array 00:18:23.520 --> 00:18:25.430 align:start position:0% only the new channels were filtered and the array aggregator was collected. It was 00:18:25.430 --> 00:18:25.440 align:start position:0% aggregator was collected. It was 00:18:25.440 --> 00:18:27.390 align:start position:0% aggregator was collected. It was collected here and then collected as channels. But the 00:18:27.390 --> 00:18:27.400 align:start position:0% collected here and then collected as channels. But the 00:18:27.400 --> 00:18:29.750 align:start position:0% collected here and then collected as channels. But the new channel 00:18:29.750 --> 00:18:29.760 align:start position:0% new channel 00:18:29.760 --> 00:18:31.470 align:start position:0% new channel may have uploaded multiple videos, 00:18:31.470 --> 00:18:31.480 align:start position:0% may have uploaded multiple videos, 00:18:31.480 --> 00:18:33.789 align:start position:0% may have uploaded multiple videos, so it will extract only the unique values ​​by counting the collected ones using the s. 00:18:33.789 --> 00:18:37.430 align:start position:0% so it will extract only the unique values ​​by counting the collected ones using the s. 00:18:37.430 --> 00:18:37.440 align:start position:0% 00:18:37.440 --> 00:18:39.390 align:start position:0% So it will 00:18:39.390 --> 00:18:39.400 align:start position:0% So it will 00:18:39.400 --> 00:18:41.549 align:start position:0% So it will create a unique link. To 00:18:41.549 --> 00:18:41.559 align:start position:0% create a unique link. To 00:18:41.559 --> 00:18:44.070 align:start position:0% create a unique link. To create a unique link, you 00:18:44.070 --> 00:18:44.080 align:start position:0% create a unique link, you 00:18:44.080 --> 00:18:45.669 align:start position:0% create a unique link, you can use the distra function. And you can 00:18:45.669 --> 00:18:45.679 align:start position:0% can use the distra function. And you can 00:18:45.679 --> 00:18:47.549 align:start position:0% can use the distra function. And you can put the array we created here. And 00:18:47.549 --> 00:18:47.559 align:start position:0% put the array we created here. And 00:18:47.559 --> 00:18:49.110 align:start position:0% put the array we created here. And then this 00:18:49.110 --> 00:18:49.120 align:start position:0% then this 00:18:49.120 --> 00:18:51.870 align:start position:0% then this is a channel. Then, in the array, there 00:18:51.870 --> 00:18:51.880 align:start position:0% is a channel. Then, in the array, there 00:18:51.880 --> 00:18:54.149 align:start position:0% is a channel. Then, in the array, there is a value called link. 00:18:54.149 --> 00:18:54.159 align:start position:0% is a value called link. 00:18:54.159 --> 00:18:55.510 align:start position:0% is a value called link. All the channel links will be included here. 00:18:55.510 --> 00:18:55.520 align:start position:0% All the channel links will be included here. 00:18:55.520 --> 00:18:57.230 align:start position:0% All the channel links will be included here. In this array, there 00:18:57.230 --> 00:18:57.240 align:start position:0% In this array, there 00:18:57.240 --> 00:18:59.070 align:start position:0% In this array, there is a value called channel, and there are properties such as name link, 00:18:59.070 --> 00:18:59.080 align:start position:0% is a value called channel, and there are properties such as name link, 00:18:59.080 --> 00:19:00.990 align:start position:0% is a value called channel, and there are properties such as name link, verify, and thumbnail. Among 00:19:00.990 --> 00:19:01.000 align:start position:0% verify, and thumbnail. Among 00:19:01.000 --> 00:19:02.669 align:start position:0% verify, and thumbnail. Among them, we 00:19:02.669 --> 00:19:02.679 align:start position:0% them, we 00:19:02.679 --> 00:19:04.470 align:start position:0% them, we want to load the link. So, we 00:19:04.470 --> 00:19:07.310 align:start position:0% want to load the link. So, we 00:19:07.310 --> 00:19:07.320 align:start position:0% 00:19:07.320 --> 00:19:09.110 align:start position:0% want to create a single variable without duplicate values ​​of the link. So, you can 00:19:09.110 --> 00:19:09.120 align:start position:0% want to create a single variable without duplicate values ​​of the link. So, you can 00:19:09.120 --> 00:19:10.590 align:start position:0% want to create a single variable without duplicate values ​​of the link. So, you can select a link. If you look here, you 00:19:10.590 --> 00:19:10.600 align:start position:0% select a link. If you look here, you 00:19:10.600 --> 00:19:13.590 align:start position:0% select a link. If you look here, you can see that Rowe is inserting a link joker. Now, 00:19:13.590 --> 00:19:13.600 align:start position:0% can see that Rowe is inserting a link joker. Now, 00:19:13.600 --> 00:19:16.029 align:start position:0% can see that Rowe is inserting a link joker. Now, by doing this, we have 00:19:16.029 --> 00:19:16.039 align:start position:0% by doing this, we have 00:19:16.039 --> 00:19:17.950 align:start position:0% by doing this, we have brought all the channel links that were previously in the sheet. We have 00:19:17.950 --> 00:19:19.950 align:start position:0% brought all the channel links that were previously in the sheet. We have 00:19:19.950 --> 00:19:19.960 align:start position:0% 00:19:19.960 --> 00:19:21.710 align:start position:0% compared them with the new link and the previously loaded value, 00:19:21.710 --> 00:19:21.720 align:start position:0% compared them with the new link and the previously loaded value, 00:19:21.720 --> 00:19:23.630 align:start position:0% compared them with the new link and the previously loaded value, filtered out only those that were not included, and 00:19:23.630 --> 00:19:26.070 align:start position:0% filtered out only those that were not included, and 00:19:26.070 --> 00:19:26.080 align:start position:0% 00:19:26.080 --> 00:19:28.029 align:start position:0% merged them. After merging them, we have extracted only the unique 00:19:28.029 --> 00:19:28.039 align:start position:0% merged them. After merging them, we have extracted only the unique 00:19:28.039 --> 00:19:29.710 align:start position:0% merged them. After merging them, we have extracted only the unique values ​​from the channel links. Now, only the unique values ​​are 00:19:29.710 --> 00:19:29.720 align:start position:0% values ​​from the channel links. Now, only the unique values ​​are 00:19:29.720 --> 00:19:31.149 align:start position:0% values ​​from the channel links. Now, only the unique values ​​are entered here as an 00:19:31.149 --> 00:19:31.159 align:start position:0% entered here as an 00:19:31.159 --> 00:19:33.190 align:start position:0% entered here as an array. Since these are entered as an array, 00:19:33.190 --> 00:19:33.200 align:start position:0% array. Since these are entered as an array, 00:19:33.200 --> 00:19:35.870 align:start position:0% array. Since these are entered as an array, we will search the YouTube channels one by one through the sub API 00:19:35.870 --> 00:19:35.880 align:start position:0% we will search the YouTube channels one by one through the sub API 00:19:35.880 --> 00:19:37.470 align:start position:0% we will search the YouTube channels one by one through the sub API Pro. 00:19:37.470 --> 00:19:37.480 align:start position:0% Pro. 00:19:37.480 --> 00:19:39.149 align:start position:0% Pro. So, to set them one by one, we will 00:19:39.149 --> 00:19:39.159 align:start position:0% So, to set them one by one, we will 00:19:39.159 --> 00:19:41.110 align:start position:0% So, to set them one by one, we will iterate again and 00:19:41.110 --> 00:19:41.120 align:start position:0% iterate again and 00:19:41.120 --> 00:19:43.110 align:start position:0% iterate again and set this unique link. 00:19:43.110 --> 00:19:43.120 align:start position:0% set this unique link. 00:19:43.120 --> 00:19:45.549 align:start position:0% set this unique link. Now, there are five unique links. We 00:19:45.549 --> 00:19:47.070 align:start position:0% Now, there are five unique links. We 00:19:47.070 --> 00:19:47.080 align:start position:0% 00:19:47.080 --> 00:19:48.630 align:start position:0% can split the five into one and search now. 00:19:48.630 --> 00:19:48.640 align:start position:0% can split the five into one and search now. 00:19:48.640 --> 00:19:50.510 align:start position:0% can split the five into one and search now. After splitting them like this, 00:19:50.510 --> 00:19:50.520 align:start position:0% After splitting them like this, 00:19:50.520 --> 00:19:51.990 align:start position:0% After splitting them like this, the channel links will be included, so we will 00:19:51.990 --> 00:19:54.190 align:start position:0% the channel links will be included, so we will 00:19:54.190 --> 00:19:54.200 align:start position:0% 00:19:54.200 --> 00:19:55.909 align:start position:0% search YouTube again through the sub API. 00:19:55.909 --> 00:19:55.919 align:start position:0% search YouTube again through the sub API. 00:19:55.919 --> 00:19:57.669 align:start position:0% search YouTube again through the sub API. Select YouTube again, and 00:19:57.669 --> 00:19:57.679 align:start position:0% Select YouTube again, and 00:19:57.679 --> 00:19:59.270 align:start position:0% Select YouTube again, and when we search here, the last 00:19:59.270 --> 00:19:59.280 align:start position:0% when we search here, the last 00:19:59.280 --> 00:20:00.990 align:start position:0% when we search here, the last iterator value will be entered. Since 00:20:00.990 --> 00:20:01.000 align:start position:0% iterator value will be entered. Since 00:20:01.000 --> 00:20:03.669 align:start position:0% iterator value will be entered. Since we haven't run the part after this, there are 00:20:03.669 --> 00:20:03.679 align:start position:0% we haven't run the part after this, there are 00:20:03.679 --> 00:20:05.870 align:start position:0% we haven't run the part after this, there are no values ​​that can be selected yet. 00:20:05.870 --> 00:20:05.880 align:start position:0% no values ​​that can be selected yet. 00:20:05.880 --> 00:20:06.870 align:start position:0% no values ​​that can be selected yet. 00:20:06.870 --> 00:20:06.880 align:start position:0% 00:20:06.880 --> 00:20:10.510 align:start position:0% So, if you do this unlink, this will be 00:20:10.510 --> 00:20:10.520 align:start position:0% So, if you do this unlink, this will be 00:20:10.520 --> 00:20:12.310 align:start position:0% So, if you do this unlink, this will be Now, let's make it not return like this and 00:20:12.310 --> 00:20:12.320 align:start position:0% Now, let's make it not return like this and 00:20:12.320 --> 00:20:14.590 align:start position:0% Now, let's make it not return like this and run the iterator again here. 00:20:14.590 --> 00:20:16.230 align:start position:0% run the iterator again here. 00:20:16.230 --> 00:20:16.240 align:start position:0% 00:20:16.240 --> 00:20:18.149 align:start position:0% Since the channel information has not been updated yet, if the video 00:20:18.149 --> 00:20:18.159 align:start position:0% Since the channel information has not been updated yet, if the video 00:20:18.159 --> 00:20:20.230 align:start position:0% Since the channel information has not been updated yet, if the video information is not duplicated, we will add it. 00:20:20.230 --> 00:20:20.240 align:start position:0% information is not duplicated, we will add it. 00:20:20.240 --> 00:20:23.270 align:start position:0% information is not duplicated, we will add it. Run 00:20:23.270 --> 00:20:23.280 align:start position:0% Run 00:20:23.280 --> 00:20:25.270 align:start position:0% Run once, run how. Let's check if there are any additional videos. As you can 00:20:25.270 --> 00:20:25.280 align:start position:0% once, run how. Let's check if there are any additional videos. As you can 00:20:25.280 --> 00:20:28.190 align:start position:0% once, run how. Let's check if there are any additional videos. As you can see here, several have been 00:20:28.190 --> 00:20:28.200 align:start position:0% see here, several have been 00:20:28.200 --> 00:20:30.590 align:start position:0% see here, several have been added. There were 39 before, and they have 00:20:30.590 --> 00:20:30.600 align:start position:0% added. There were 39 before, and they have 00:20:30.600 --> 00:20:32.990 align:start position:0% added. There were 39 before, and they have been added like this. If you look at the filter, you 00:20:32.990 --> 00:20:34.909 align:start position:0% been added like this. If you look at the filter, you 00:20:34.909 --> 00:20:36.669 align:start position:0% 00:20:36.669 --> 00:20:38.470 align:start position:0% 00:20:38.470 --> 00:20:38.480 align:start position:0% 00:20:38.480 --> 00:20:40.070 align:start position:0% can see that those that are included are excluded and only those that are not included are processed as successful. So 11 have been added. 00:20:40.070 --> 00:20:40.080 align:start position:0% can see that those that are included are excluded and only those that are not included are processed as successful. So 11 have been added. 00:20:40.080 --> 00:20:42.789 align:start position:0% can see that those that are included are excluded and only those that are not included are processed as successful. So 11 have been added. For the channel, we have collected the ray ligator 00:20:42.789 --> 00:20:42.799 align:start position:0% For the channel, we have collected the ray ligator 00:20:42.799 --> 00:20:45.310 align:start position:0% For the channel, we have collected the ray ligator like this. There is a 00:20:45.310 --> 00:20:47.430 align:start position:0% like this. There is a 00:20:47.430 --> 00:20:47.440 align:start position:0% 00:20:47.440 --> 00:20:49.390 align:start position:0% value called link in the channel. We 00:20:49.390 --> 00:20:49.400 align:start position:0% value called link in the channel. We 00:20:49.400 --> 00:20:51.909 align:start position:0% value called link in the channel. We use the unique link to find the value in it. But if you look here, there is only 00:20:51.909 --> 00:20:51.919 align:start position:0% use the unique link to find the value in it. But if you look here, there is only 00:20:51.919 --> 00:20:54.190 align:start position:0% use the unique link to find the value in it. But if you look here, there is only one value in the unique link. But 00:20:54.190 --> 00:20:54.200 align:start position:0% one value in the unique link. But 00:20:54.200 --> 00:20:56.870 align:start position:0% one value in the unique link. But we have 00:20:56.870 --> 00:20:56.880 align:start position:0% we have 00:20:56.880 --> 00:20:59.070 align:start position:0% we have not one channel here, but several. You 00:20:59.070 --> 00:21:01.669 align:start position:0% not one channel here, but several. You 00:21:01.669 --> 00:21:01.679 align:start position:0% 00:21:01.679 --> 00:21:03.830 align:start position:0% can see that the properly distinguished value is not being extracted. The reason for 00:21:03.830 --> 00:21:03.840 align:start position:0% can see that the properly distinguished value is not being extracted. The reason for 00:21:03.840 --> 00:21:05.630 align:start position:0% can see that the properly distinguished value is not being extracted. The reason for this is that 00:21:05.630 --> 00:21:05.640 align:start position:0% this is that 00:21:05.640 --> 00:21:07.909 align:start position:0% this is that we 00:21:07.909 --> 00:21:07.919 align:start position:0% we 00:21:07.919 --> 00:21:09.830 align:start position:0% we have set the array here to the last ray ligator. 00:21:09.830 --> 00:21:09.840 align:start position:0% have set the array here to the last ray ligator. 00:21:09.840 --> 00:21:11.950 align:start position:0% have set the array here to the last ray ligator. And then we just called the link value. 00:21:11.950 --> 00:21:11.960 align:start position:0% And then we just called the link value. 00:21:11.960 --> 00:21:14.390 align:start position:0% And then we just called the link value. This 00:21:14.390 --> 00:21:14.400 align:start position:0% This 00:21:14.400 --> 00:21:17.149 align:start position:0% This is the link value in the channel. So the 00:21:17.149 --> 00:21:17.159 align:start position:0% is the link value in the channel. So the 00:21:17.159 --> 00:21:19.230 align:start position:0% is the link value in the channel. So the row ID value of the channel is the link value of the channel. 00:21:19.230 --> 00:21:21.669 align:start position:0% row ID value of the channel is the link value of the channel. 00:21:21.669 --> 00:21:24.950 align:start position:0% 00:21:24.950 --> 00:21:24.960 align:start position:0% 00:21:24.960 --> 00:21:27.909 align:start position:0% Let's do this and run it again. Then, 12 videos 00:21:27.909 --> 00:21:27.919 align:start position:0% Let's do this and run it again. Then, 12 videos 00:21:27.919 --> 00:21:30.350 align:start position:0% Let's do this and run it again. Then, 12 videos have been added this time. If you look at it like this, you 00:21:30.350 --> 00:21:32.870 align:start position:0% have been added this time. If you look at it like this, you 00:21:32.870 --> 00:21:32.880 align:start position:0% 00:21:32.880 --> 00:21:34.789 align:start position:0% can see that all the unique values ​​are properly displayed. So, 00:21:34.789 --> 00:21:34.799 align:start position:0% can see that all the unique values ​​are properly displayed. So, 00:21:34.799 --> 00:21:37.190 align:start position:0% can see that all the unique values ​​are properly displayed. So, when you displayed the link in the tool earlier, you 00:21:37.190 --> 00:21:37.200 align:start position:0% when you displayed the link in the tool earlier, you 00:21:37.200 --> 00:21:39.390 align:start position:0% when you displayed the link in the tool earlier, you selected an array, and in it, we 00:21:39.390 --> 00:21:39.400 align:start position:0% selected an array, and in it, we 00:21:39.400 --> 00:21:41.669 align:start position:0% selected an array, and in it, we want to get only the link values, but the link is 00:21:41.669 --> 00:21:41.679 align:start position:0% want to get only the link values, but the link is 00:21:41.679 --> 00:21:43.510 align:start position:0% want to get only the link values, but the link is not just there, there is a link in the channel, 00:21:43.510 --> 00:21:43.520 align:start position:0% not just there, there is a link in the channel, 00:21:43.520 --> 00:21:44.950 align:start position:0% not just there, there is a link in the channel, so 00:21:44.950 --> 00:21:44.960 align:start position:0% so 00:21:44.960 --> 00:21:47.430 align:start position:0% so in that case, if you specify it as a channel dot link, you 00:21:47.430 --> 00:21:47.440 align:start position:0% in that case, if you specify it as a channel dot link, you 00:21:47.440 --> 00:21:49.350 align:start position:0% in that case, if you specify it as a channel dot link, you can see that it is properly retrieved. 00:21:49.350 --> 00:21:49.360 align:start position:0% can see that it is properly retrieved. 00:21:49.360 --> 00:21:50.909 align:start position:0% can see that it is properly retrieved. Then, we 00:21:50.909 --> 00:21:50.919 align:start position:0% Then, we 00:21:50.919 --> 00:21:52.909 align:start position:0% Then, we grouped these unique links into a collection and 00:21:52.909 --> 00:21:54.630 align:start position:0% grouped these unique links into a collection and 00:21:54.630 --> 00:21:54.640 align:start position:0% 00:21:54.640 --> 00:21:56.549 align:start position:0% put them in one bundle as 1 2 3 4 56. Then, if we 00:21:56.549 --> 00:21:56.559 align:start position:0% put them in one bundle as 1 2 3 4 56. Then, if we 00:21:56.559 --> 00:21:59.430 align:start position:0% put them in one bundle as 1 2 3 4 56. Then, if we pass the values ​​through an iterator, we 00:21:59.430 --> 00:21:59.440 align:start position:0% pass the values ​​through an iterator, we 00:21:59.440 --> 00:22:01.149 align:start position:0% pass the values ​​through an iterator, we split one bundle of six channels into six bundles. 00:22:01.149 --> 00:22:01.159 align:start position:0% split one bundle of six channels into six bundles. 00:22:01.159 --> 00:22:03.070 align:start position:0% split one bundle of six channels into six bundles. After splitting, there are links in here. Then, 00:22:03.070 --> 00:22:03.080 align:start position:0% After splitting, there are links in here. Then, 00:22:03.080 --> 00:22:05.310 align:start position:0% After splitting, there are links in here. Then, we search again with this link value. 00:22:05.310 --> 00:22:05.320 align:start position:0% we search again with this link value. 00:22:05.320 --> 00:22:07.190 align:start position:0% we search again with this link value. Then, please 00:22:07.190 --> 00:22:07.200 align:start position:0% Then, please 00:22:07.200 --> 00:22:09.070 align:start position:0% Then, please reconnect this and 00:22:09.070 --> 00:22:10.870 align:start position:0% reconnect this and 00:22:10.870 --> 00:22:10.880 align:start position:0% 00:22:10.880 --> 00:22:12.830 align:start position:0% specify the keyword as the search query and the last iterator a as the link value. 00:22:12.830 --> 00:22:12.840 align:start position:0% specify the keyword as the search query and the last iterator a as the link value. 00:22:12.840 --> 00:22:15.149 align:start position:0% specify the keyword as the search query and the last iterator a as the link value. We will search with the link. In the 00:22:15.149 --> 00:22:15.159 align:start position:0% We will search with the link. In the 00:22:15.159 --> 00:22:17.029 align:start position:0% We will search with the link. In the same way, we 00:22:17.029 --> 00:22:18.630 align:start position:0% same way, we 00:22:18.630 --> 00:22:18.640 align:start position:0% 00:22:18.640 --> 00:22:20.549 align:start position:0% will set the rest to Korea. And this time, we 00:22:20.549 --> 00:22:20.559 align:start position:0% will set the rest to Korea. And this time, we 00:22:20.559 --> 00:22:22.669 align:start position:0% will set the rest to Korea. And this time, we will use the channel filter as the filter. The channel filter is 00:22:22.669 --> 00:22:22.679 align:start position:0% will use the channel filter as the filter. The channel filter is 00:22:22.679 --> 00:22:25.029 align:start position:0% will use the channel filter as the filter. The channel filter is also If you search on YouTube, it's a filter 00:22:25.029 --> 00:22:25.039 align:start position:0% also If you search on YouTube, it's a filter 00:22:25.039 --> 00:22:26.590 align:start position:0% also If you search on YouTube, it's a filter value, so let's put this in right away and 00:22:26.590 --> 00:22:28.110 align:start position:0% value, so let's put this in right away and 00:22:28.110 --> 00:22:28.120 align:start position:0% 00:22:28.120 --> 00:22:30.350 align:start position:0% leave the rest blank and do the key. Now, we search for channel 00:22:30.350 --> 00:22:30.360 align:start position:0% leave the rest blank and do the key. Now, we search for channel 00:22:30.360 --> 00:22:32.269 align:start position:0% leave the rest blank and do the key. Now, we search for channel values ​​like this. I'll 00:22:32.269 --> 00:22:32.279 align:start position:0% values ​​like this. I'll 00:22:32.279 --> 00:22:33.750 align:start position:0% values ​​like this. I'll show you on YouTube. For example, if 00:22:33.750 --> 00:22:33.760 align:start position:0% show you on YouTube. For example, if 00:22:33.760 --> 00:22:36.110 align:start position:0% show you on YouTube. For example, if we search by link, we 00:22:36.110 --> 00:22:36.120 align:start position:0% we search by link, we 00:22:36.120 --> 00:22:39.149 align:start position:0% we search by link, we search by channel in the filter. 00:22:39.149 --> 00:22:39.159 align:start position:0% search by channel in the filter. 00:22:39.159 --> 00:22:41.190 align:start position:0% search by channel in the filter. Then, the values ​​will 00:22:41.190 --> 00:22:41.200 align:start position:0% Then, the values ​​will 00:22:41.200 --> 00:22:43.310 align:start position:0% Then, the values ​​will appear like this. Then, if you search by link like this, 00:22:43.310 --> 00:22:43.320 align:start position:0% appear like this. Then, if you search by link like this, 00:22:43.320 --> 00:22:44.950 align:start position:0% appear like this. Then, if you search by link like this, multiple channels will usually appear. 00:22:44.950 --> 00:22:44.960 align:start position:0% multiple channels will usually appear. 00:22:44.960 --> 00:22:46.669 align:start position:0% multiple channels will usually appear. It's not that only the exact same channels 00:22:46.669 --> 00:22:46.679 align:start position:0% It's not that only the exact same channels 00:22:46.679 --> 00:22:48.350 align:start position:0% It's not that only the exact same channels appear, but multiple values ​​appear. 00:22:48.350 --> 00:22:48.360 align:start position:0% appear, but multiple values ​​appear. 00:22:48.360 --> 00:22:50.149 align:start position:0% appear, but multiple values ​​appear. Then, we have to compare this and 00:22:50.149 --> 00:22:52.750 align:start position:0% Then, we have to compare this and 00:22:52.750 --> 00:22:52.760 align:start position:0% 00:22:52.760 --> 00:22:54.230 align:start position:0% update the link that is correct. 00:22:54.230 --> 00:22:54.240 align:start position:0% update the link that is correct. 00:22:54.240 --> 00:22:56.310 align:start position:0% update the link that is correct. So, since there will be multiple values ​​again, we'll 00:22:56.310 --> 00:22:56.320 align:start position:0% So, since there will be multiple values ​​again, we'll 00:22:56.320 --> 00:22:58.470 align:start position:0% So, since there will be multiple values ​​again, we'll split it again. We 00:22:58.470 --> 00:22:58.480 align:start position:0% split it again. We 00:22:58.480 --> 00:23:00.350 align:start position:0% split it again. We 'll split it using this layer. I'll 00:23:00.350 --> 00:23:00.360 align:start position:0% 'll split it using this layer. I'll 00:23:00.360 --> 00:23:02.190 align:start position:0% 'll split it using this layer. I'll hard code one link here and 00:23:02.190 --> 00:23:02.200 align:start position:0% hard code one link here and 00:23:02.200 --> 00:23:04.149 align:start position:0% hard code one link here and return only this. Then, the 00:23:04.149 --> 00:23:04.159 align:start position:0% return only this. Then, the 00:23:04.159 --> 00:23:06.149 align:start position:0% return only this. Then, the channel layer will appear like this. Then, 00:23:06.149 --> 00:23:06.159 align:start position:0% channel layer will appear like this. Then, 00:23:06.159 --> 00:23:09.110 align:start position:0% channel layer will appear like this. Then, there's an iterator called channel tree. We'll 00:23:09.110 --> 00:23:09.120 align:start position:0% there's an iterator called channel tree. We'll 00:23:09.120 --> 00:23:10.830 align:start position:0% there's an iterator called channel tree. We'll put the value in. That 00:23:10.830 --> 00:23:10.840 align:start position:0% put the value in. That 00:23:10.840 --> 00:23:13.230 align:start position:0% put the value in. That 's because when we searched here, the 00:23:13.230 --> 00:23:13.240 align:start position:0% 's because when we searched here, the 00:23:13.240 --> 00:23:15.510 align:start position:0% 's because when we searched here, the channel values ​​appeared as channel tree. 00:23:15.510 --> 00:23:15.520 align:start position:0% channel values ​​appeared as channel tree. 00:23:15.520 --> 00:23:16.870 align:start position:0% channel values ​​appeared as channel tree. So, if we 00:23:16.870 --> 00:23:16.880 align:start position:0% So, if we 00:23:16.880 --> 00:23:18.870 align:start position:0% So, if we set it as an array, 00:23:18.870 --> 00:23:18.880 align:start position:0% set it as an array, 00:23:18.880 --> 00:23:20.669 align:start position:0% set it as an array, if there are multiple values, we'll 00:23:20.669 --> 00:23:20.679 align:start position:0% if there are multiple values, we'll 00:23:20.679 --> 00:23:22.390 align:start position:0% if there are multiple values, we'll split the iterator here. But here, the 00:23:22.390 --> 00:23:22.400 align:start position:0% split the iterator here. But here, the 00:23:22.400 --> 00:23:24.029 align:start position:0% split the iterator here. But here, the thing to keep in mind is that 00:23:24.029 --> 00:23:24.039 align:start position:0% thing to keep in mind is that 00:23:24.039 --> 00:23:26.630 align:start position:0% thing to keep in mind is that we're using the link here. You receive a value and search it, 00:23:26.630 --> 00:23:26.640 align:start position:0% we're using the link here. You receive a value and search it, 00:23:26.640 --> 00:23:28.830 align:start position:0% we're using the link here. You receive a value and search it, but when we receive it before, the 00:23:28.830 --> 00:23:28.840 align:start position:0% but when we receive it before, the 00:23:28.840 --> 00:23:31.350 align:start position:0% but when we receive it before, the link sometimes breaks or 00:23:31.350 --> 00:23:31.360 align:start position:0% link sometimes breaks or 00:23:31.360 --> 00:23:34.029 align:start position:0% link sometimes breaks or returns a strange value, and the 00:23:34.029 --> 00:23:34.039 align:start position:0% returns a strange value, and the 00:23:34.039 --> 00:23:36.789 align:start position:0% returns a strange value, and the link value searched here does 00:23:36.789 --> 00:23:36.799 align:start position:0% link value searched here does 00:23:36.799 --> 00:23:38.630 align:start position:0% link value searched here does not retrieve any search results, so an error 00:23:38.630 --> 00:23:38.640 align:start position:0% not retrieve any search results, so an error 00:23:38.640 --> 00:23:39.870 align:start position:0% not retrieve any search results, so an error may occur. So we 00:23:39.870 --> 00:23:42.230 align:start position:0% may occur. So we 00:23:42.230 --> 00:23:42.240 align:start position:0% 00:23:42.240 --> 00:23:43.950 align:start position:0% will set it to ignore the error and move on to the next one. 00:23:43.950 --> 00:23:43.960 align:start position:0% will set it to ignore the error and move on to the next one. 00:23:43.960 --> 00:23:46.190 align:start position:0% will set it to ignore the error and move on to the next one. So right-click on the sub API, 00:23:46.190 --> 00:23:48.710 align:start position:0% So right-click on the sub API, 00:23:48.710 --> 00:23:48.720 align:start position:0% 00:23:48.720 --> 00:23:50.870 align:start position:0% click on the error handler, and add a node. If you 00:23:50.870 --> 00:23:50.880 align:start position:0% click on the error handler, and add a node. If you 00:23:50.880 --> 00:23:52.870 align:start position:0% click on the error handler, and add a node. If you add a node like this, for 00:23:52.870 --> 00:23:52.880 align:start position:0% add a node like this, for 00:23:52.880 --> 00:23:54.950 align:start position:0% add a node like this, for example, if the sub API ES 00:23:54.950 --> 00:23:54.960 align:start position:0% example, if the sub API ES 00:23:54.960 --> 00:23:57.110 align:start position:0% example, if the sub API ES outputs the results of dog, if the 00:23:57.110 --> 00:23:57.120 align:start position:0% outputs the results of dog, if the 00:23:57.120 --> 00:23:58.830 align:start position:0% outputs the results of dog, if the third one has an error, the third one will 00:23:58.830 --> 00:23:58.840 align:start position:0% third one has an error, the third one will 00:23:58.840 --> 00:24:01.110 align:start position:0% third one has an error, the third one will pass and the fourth one 00:24:01.110 --> 00:24:02.750 align:start position:0% pass and the fourth one 00:24:02.750 --> 00:24:02.760 align:start position:0% 00:24:02.760 --> 00:24:04.870 align:start position:0% will return the results again. Then, we need to receive the returned 00:24:04.870 --> 00:24:04.880 align:start position:0% will return the results again. Then, we need to receive the returned 00:24:04.880 --> 00:24:07.430 align:start position:0% will return the results again. Then, we need to receive the returned iterator server API channel ret and 00:24:07.430 --> 00:24:07.440 align:start position:0% iterator server API channel ret and 00:24:07.440 --> 00:24:09.549 align:start position:0% iterator server API channel ret and update the channel sheet. 00:24:09.549 --> 00:24:11.990 align:start position:0% update the channel sheet. 00:24:11.990 --> 00:24:14.310 align:start position:0% 00:24:14.310 --> 00:24:14.320 align:start position:0% 00:24:14.320 --> 00:24:16.350 align:start position:0% Let's first create a module that adds an AD row to the sheet module. Here, we 00:24:16.350 --> 00:24:16.360 align:start position:0% Let's first create a module that adds an AD row to the sheet module. Here, we 00:24:16.360 --> 00:24:18.110 align:start position:0% Let's first create a module that adds an AD row to the sheet module. Here, we will update the channel sheet. Since 00:24:18.110 --> 00:24:18.120 align:start position:0% will update the channel sheet. Since 00:24:18.120 --> 00:24:20.909 align:start position:0% will update the channel sheet. Since all of these values ​​will be received through the sub API 00:24:20.909 --> 00:24:20.919 align:start position:0% all of these values ​​will be received through the sub API 00:24:20.919 --> 00:24:23.269 align:start position:0% all of these values ​​will be received through the sub API channel ret, you can select 00:24:23.269 --> 00:24:23.279 align:start position:0% channel ret, you can select 00:24:23.279 --> 00:24:25.669 align:start position:0% channel ret, you can select each of the values ​​that correspond to these values ​​one by one. 00:24:25.669 --> 00:24:25.679 align:start position:0% each of the values ​​that correspond to these values ​​one by one. 00:24:25.679 --> 00:24:27.950 align:start position:0% each of the values ​​that correspond to these values ​​one by one. Description 00:24:27.950 --> 00:24:27.960 align:start position:0% Description 00:24:27.960 --> 00:24:30.590 align:start position:0% Description And the update date is today's date. 00:24:30.590 --> 00:24:30.600 align:start position:0% And the update date is today's date. 00:24:30.600 --> 00:24:32.990 align:start position:0% And the update date is today's date. Calendar Let's go into the tab and 00:24:32.990 --> 00:24:33.000 align:start position:0% Calendar Let's go into the tab and 00:24:33.000 --> 00:24:34.750 align:start position:0% Calendar Let's go into the tab and select Now. We 00:24:34.750 --> 00:24:34.760 align:start position:0% select Now. We 00:24:34.760 --> 00:24:36.389 align:start position:0% select Now. We 've set it up like this. But 00:24:36.389 --> 00:24:36.399 align:start position:0% 've set it up like this. But 00:24:36.399 --> 00:24:38.470 align:start position:0% 've set it up like this. But now, we 00:24:38.470 --> 00:24:38.480 align:start position:0% now, we 00:24:38.480 --> 00:24:40.990 align:start position:0% now, we need to update only the new channels that match here. When 00:24:40.990 --> 00:24:41.000 align:start position:0% need to update only the new channels that match here. When 00:24:41.000 --> 00:24:42.950 align:start position:0% need to update only the new channels that match here. When we search for channel links on YouTube through this sub API, we 00:24:42.950 --> 00:24:45.310 align:start position:0% we search for channel links on YouTube through this sub API, we 00:24:45.310 --> 00:24:45.320 align:start position:0% 00:24:45.320 --> 00:24:47.590 align:start position:0% may not necessarily show only the channels that match the channel as the results. 00:24:47.590 --> 00:24:47.600 align:start position:0% may not necessarily show only the channels that match the channel as the results. 00:24:47.600 --> 00:24:49.230 align:start position:0% may not necessarily show only the channels that match the channel as the results. So when various results 00:24:49.230 --> 00:24:49.240 align:start position:0% So when various results 00:24:49.240 --> 00:24:51.230 align:start position:0% So when various results come out, we divide the 00:24:51.230 --> 00:24:52.389 align:start position:0% come out, we divide the 00:24:52.389 --> 00:24:52.399 align:start position:0% 00:24:52.399 --> 00:24:54.389 align:start position:0% iterator and compare them. We need to 00:24:54.389 --> 00:24:54.399 align:start position:0% iterator and compare them. We need to 00:24:54.399 --> 00:24:56.430 align:start position:0% iterator and compare them. We need to compare all the result values ​​and filter and update the 00:24:56.430 --> 00:24:56.440 align:start position:0% compare all the result values ​​and filter and update the 00:24:56.440 --> 00:24:59.430 align:start position:0% compare all the result values ​​and filter and update the channels that are identical to the links we actually searched. 00:24:59.430 --> 00:25:01.350 align:start position:0% channels that are identical to the links we actually searched. 00:25:01.350 --> 00:25:01.360 align:start position:0% 00:25:01.360 --> 00:25:03.389 align:start position:0% So, you can specify the filter here 00:25:03.389 --> 00:25:03.399 align:start position:0% So, you can specify the filter here 00:25:03.399 --> 00:25:05.549 align:start position:0% So, you can specify the filter here as a setup filter between the iterator and the sheet. 00:25:05.549 --> 00:25:07.510 align:start position:0% as a setup filter between the iterator and the sheet. 00:25:07.510 --> 00:25:07.520 align:start position:0% 00:25:07.520 --> 00:25:09.830 align:start position:0% We'll call it link matching. We'll compare the 00:25:09.830 --> 00:25:09.840 align:start position:0% We'll call it link matching. We'll compare the 00:25:09.840 --> 00:25:12.549 align:start position:0% We'll call it link matching. We'll compare the sub API a result values ​​that we extracted with the link 00:25:12.549 --> 00:25:12.559 align:start position:0% sub API a result values ​​that we extracted with the link 00:25:12.559 --> 00:25:15.269 align:start position:0% sub API a result values ​​that we extracted with the link value and the link we searched for 00:25:15.269 --> 00:25:15.279 align:start position:0% value and the link we searched for 00:25:15.279 --> 00:25:17.350 align:start position:0% value and the link we searched for here, the iterator a link, and 00:25:17.350 --> 00:25:19.830 align:start position:0% here, the iterator a link, and 00:25:19.830 --> 00:25:19.840 align:start position:0% 00:25:19.840 --> 00:25:21.549 align:start position:0% set it up so that if the two are the same, the sheet will be updated. 00:25:21.549 --> 00:25:21.559 align:start position:0% set it up so that if the two are the same, the sheet will be updated. 00:25:21.559 --> 00:25:23.950 align:start position:0% set it up so that if the two are the same, the sheet will be updated. In addition, we'll check 00:25:23.950 --> 00:25:23.960 align:start position:0% In addition, we'll check 00:25:23.960 --> 00:25:26.630 align:start position:0% In addition, we'll check once more whether the channel link is not in the existing sheet. 00:25:26.630 --> 00:25:28.590 align:start position:0% once more whether the channel link is not in the existing sheet. 00:25:28.590 --> 00:25:28.600 align:start position:0% 00:25:28.600 --> 00:25:30.230 align:start position:0% So, we had to use an array operator. 00:25:30.230 --> 00:25:30.240 align:start position:0% So, we had to use an array operator. 00:25:30.240 --> 00:25:32.789 align:start position:0% So, we had to use an array operator. So, the existing channel links of the second array 00:25:32.789 --> 00:25:32.799 align:start position:0% So, the existing channel links of the second array 00:25:32.799 --> 00:25:35.149 align:start position:0% So, the existing channel links of the second array aggregate array are 00:25:35.149 --> 00:25:35.159 align:start position:0% aggregate array are 00:25:35.159 --> 00:25:36.909 align:start position:0% aggregate array are included. 00:25:36.909 --> 00:25:36.919 align:start position:0% included. 00:25:36.919 --> 00:25:38.909 align:start position:0% included. This is like what we did before. Let's 00:25:38.909 --> 00:25:38.919 align:start position:0% This is like what we did before. Let's 00:25:38.919 --> 00:25:41.710 align:start position:0% This is like what we did before. Let's use the map function to set the ID to 0 and 00:25:41.710 --> 00:25:41.720 align:start position:0% use the map function to set the ID to 0 and 00:25:41.720 --> 00:25:43.630 align:start position:0% use the map function to set the ID to 0 and extract all the links. 00:25:43.630 --> 00:25:43.640 align:start position:0% extract all the links. 00:25:43.640 --> 00:25:45.710 align:start position:0% extract all the links. In the links, 00:25:45.710 --> 00:25:45.720 align:start position:0% In the links, 00:25:45.720 --> 00:25:48.549 align:start position:0% In the links, the link that we requested to search for is not included. 00:25:48.549 --> 00:25:48.559 align:start position:0% the link that we requested to search for is not included. 00:25:48.559 --> 00:25:50.430 align:start position:0% the link that we requested to search for is not included. And 00:25:50.430 --> 00:25:50.440 align:start position:0% And 00:25:50.440 --> 00:25:53.389 align:start position:0% And among the ones that are not included, find the ones that have the same actual result value and the searched link 00:25:53.389 --> 00:25:53.399 align:start position:0% among the ones that are not included, find the ones that have the same actual result value and the searched link 00:25:53.399 --> 00:25:55.350 align:start position:0% among the ones that are not included, find the ones that have the same actual result value and the searched link value and 00:25:55.350 --> 00:25:55.360 align:start position:0% value and 00:25:55.360 --> 00:25:57.190 align:start position:0% value and update the sheet. Let's set it like this. 00:25:57.190 --> 00:25:57.200 align:start position:0% update the sheet. Let's set it like this. 00:25:57.200 --> 00:25:58.870 align:start position:0% update the sheet. Let's set it like this. And we 00:25:58.870 --> 00:25:58.880 align:start position:0% And we 00:25:58.880 --> 00:26:01.470 align:start position:0% And we 'll add one more filter. We 00:26:01.470 --> 00:26:01.480 align:start position:0% 'll add one more filter. We 00:26:01.480 --> 00:26:03.389 align:start position:0% 'll add one more filter. We extracted these unique link values ​​from the source and 00:26:03.389 --> 00:26:03.399 align:start position:0% extracted these unique link values ​​from the source and 00:26:03.399 --> 00:26:05.669 align:start position:0% extracted these unique link values ​​from the source and searched them through the iterator. 00:26:05.669 --> 00:26:05.679 align:start position:0% searched them through the iterator. 00:26:05.679 --> 00:26:08.269 align:start position:0% searched them through the iterator. However, an error can occur when passing the iterator. What 00:26:08.269 --> 00:26:08.279 align:start position:0% However, an error can occur when passing the iterator. What 00:26:08.279 --> 00:26:10.269 align:start position:0% However, an error can occur when passing the iterator. What if there are 00:26:10.269 --> 00:26:10.279 align:start position:0% if there are 00:26:10.279 --> 00:26:12.549 align:start position:0% if there are no unique link values? Let's 00:26:12.549 --> 00:26:15.990 align:start position:0% no unique link values? Let's 00:26:15.990 --> 00:26:16.000 align:start position:0% 00:26:16.000 --> 00:26:18.470 align:start position:0% create a filter that checks whether there is a new channel itself. We'll 00:26:18.470 --> 00:26:20.669 align:start position:0% create a filter that checks whether there is a new channel itself. We'll 00:26:20.669 --> 00:26:20.679 align:start position:0% 00:26:20.679 --> 00:26:22.830 align:start position:0% check the array in which this unique link exists. 00:26:22.830 --> 00:26:22.840 align:start position:0% check the array in which this unique link exists. 00:26:22.840 --> 00:26:24.950 align:start position:0% check the array in which this unique link exists. So there's something called MT Ray. 00:26:24.950 --> 00:26:24.960 align:start position:0% So there's something called MT Ray. 00:26:24.960 --> 00:26:26.710 align:start position:0% So there's something called MT Ray. Select this and set it to not equal 2 so that 00:26:26.710 --> 00:26:26.720 align:start position:0% Select this and set it to not equal 2 so that 00:26:26.720 --> 00:26:29.230 align:start position:0% Select this and set it to not equal 2 so that it moves to the back only if it's not an MT array. 00:26:29.230 --> 00:26:31.230 align:start position:0% it moves to the back only if it's not an MT array. 00:26:31.230 --> 00:26:31.240 align:start position:0% 00:26:31.240 --> 00:26:32.710 align:start position:0% Now, if there are no links in the MT array, 00:26:32.710 --> 00:26:34.230 align:start position:0% Now, if there are no links in the MT array, 00:26:34.230 --> 00:26:34.240 align:start position:0% 00:26:34.240 --> 00:26:36.029 align:start position:0% rather than generating an error, it will just end here. 00:26:36.029 --> 00:26:36.039 align:start position:0% rather than generating an error, it will just end here. 00:26:36.039 --> 00:26:38.310 align:start position:0% rather than generating an error, it will just end here. Then, let's delete a few of the existing images and 00:26:38.310 --> 00:26:38.320 align:start position:0% Then, let's delete a few of the existing images and 00:26:38.320 --> 00:26:40.110 align:start position:0% Then, let's delete a few of the existing images and try again. 00:26:40.110 --> 00:26:40.120 align:start position:0% try again. 00:26:40.120 --> 00:26:42.190 align:start position:0% try again. Press Run Once to do it once. Let's 00:26:42.190 --> 00:26:42.200 align:start position:0% Press Run Once to do it once. Let's 00:26:42.200 --> 00:26:44.630 align:start position:0% Press Run Once to do it once. Let's try it again. Six video 00:26:44.630 --> 00:26:44.640 align:start position:0% try it again. Six video 00:26:44.640 --> 00:26:47.269 align:start position:0% try it again. Six video values ​​have been added like this, and in the case of channels, 00:26:47.269 --> 00:26:47.279 align:start position:0% values ​​have been added like this, and in the case of channels, 00:26:47.279 --> 00:26:49.750 align:start position:0% values ​​have been added like this, and in the case of channels, five channels have been added. If you 00:26:49.750 --> 00:26:49.760 align:start position:0% five channels have been added. If you 00:26:49.760 --> 00:26:51.909 align:start position:0% five channels have been added. If you look at the sheet, you can see that six videos 00:26:51.909 --> 00:26:51.919 align:start position:0% look at the sheet, you can see that six videos 00:26:51.919 --> 00:26:54.070 align:start position:0% look at the sheet, you can see that six videos have been added and five channels have been added. As you 00:26:54.070 --> 00:26:54.080 align:start position:0% have been added and five channels have been added. As you 00:26:54.080 --> 00:26:56.190 align:start position:0% have been added and five channels have been added. As you can see here, it 00:26:56.190 --> 00:26:59.350 align:start position:0% can see here, it 00:26:59.350 --> 00:26:59.360 align:start position:0% 00:26:59.360 --> 00:27:01.430 align:start position:0% seems that many videos with very low views are being captured. However, if you want to 00:27:01.430 --> 00:27:01.440 align:start position:0% seems that many videos with very low views are being captured. However, if you want to 00:27:01.440 --> 00:27:03.470 align:start position:0% seems that many videos with very low views are being captured. However, if you want to collect videos that have too low views and 00:27:03.470 --> 00:27:05.310 align:start position:0% collect videos that have too low views and 00:27:05.310 --> 00:27:06.990 align:start position:0% 00:27:06.990 --> 00:27:07.000 align:start position:0% 00:27:07.000 --> 00:27:08.909 align:start position:0% want to collect videos that have high views, you can modify the filter value in that case. 00:27:08.909 --> 00:27:10.549 align:start position:0% want to collect videos that have high views, you can modify the filter value in that case. 00:27:10.549 --> 00:27:10.559 align:start position:0% 00:27:10.559 --> 00:27:13.110 align:start position:0% So instead of setting the API filter value 00:27:13.110 --> 00:27:13.120 align:start position:0% So instead of setting the API filter value 00:27:13.120 --> 00:27:15.269 align:start position:0% So instead of setting the API filter value to this, you 00:27:15.269 --> 00:27:15.279 align:start position:0% to this, you 00:27:15.279 --> 00:27:17.789 align:start position:0% to this, you can filter the results in the desired format on YouTube, and 00:27:17.789 --> 00:27:17.799 align:start position:0% can filter the results in the desired format on YouTube, and 00:27:17.799 --> 00:27:19.590 align:start position:0% can filter the results in the desired format on YouTube, and then enter that filter 00:27:19.590 --> 00:27:19.600 align:start position:0% then enter that filter 00:27:19.600 --> 00:27:21.870 align:start position:0% then enter that filter in the playground that I explained earlier and 00:27:21.870 --> 00:27:21.880 align:start position:0% in the playground that I explained earlier and 00:27:21.880 --> 00:27:24.470 align:start position:0% in the playground that I explained earlier and search. 00:27:24.470 --> 00:27:24.480 align:start position:0% search. 00:27:24.480 --> 00:27:26.830 align:start position:0% search. If you think that the results come out in the desired format, you can 00:27:26.830 --> 00:27:26.840 align:start position:0% If you think that the results come out in the desired format, you can 00:27:26.840 --> 00:27:29.149 align:start position:0% If you think that the results come out in the desired format, you can use it instead of that filter. Today, I 00:27:29.149 --> 00:27:31.310 align:start position:0% use it instead of that filter. Today, I 00:27:31.310 --> 00:27:32.990 align:start position:0% 00:27:32.990 --> 00:27:35.669 align:start position:0% 00:27:35.669 --> 00:27:37.630 align:start position:0% 00:27:37.630 --> 00:27:37.640 align:start position:0% 00:27:37.640 --> 00:27:39.269 align:start position:0% learned about how to collect YouTube channel videos and channel information related to keywords that I'm interested in by simply utilizing the surf ap man in Make. Currently, Make n 00:27:39.269 --> 00:27:39.279 align:start position:0% learned about how to collect YouTube channel videos and channel information related to keywords that I'm interested in by simply utilizing the surf ap man in Make. Currently, Make n 00:27:39.279 --> 00:27:41.509 align:start position:0% learned about how to collect YouTube channel videos and channel information related to keywords that I'm interested in by simply utilizing the surf ap man in Make. Currently, Make n 1,000 operations and 00:27:41.509 --> 00:27:41.519 align:start position:0% 1,000 operations and 00:27:41.519 --> 00:27:44.269 align:start position:0% 1,000 operations and API n 100 searches 00:27:44.269 --> 00:27:44.279 align:start position:0% API n 100 searches 00:27:44.279 --> 00:27:45.990 align:start position:0% API n 100 searches can be used for free per month. 00:27:45.990 --> 00:27:46.000 align:start position:0% can be used for free per month. 00:27:46.000 --> 00:27:48.710 align:start position:0% can be used for free per month. So, if you want to collect video or channel information on a weekly or monthly basis, you can do 00:27:48.710 --> 00:27:50.509 align:start position:0% So, if you want to collect video or channel information on a weekly or monthly basis, you can do 00:27:50.509 --> 00:27:50.519 align:start position:0% 00:27:50.519 --> 00:27:52.870 align:start position:0% it. You can use it for free. It would be 00:27:52.870 --> 00:27:54.909 align:start position:0% it. You can use it for free. It would be 00:27:54.909 --> 00:27:54.919 align:start position:0% 00:27:54.919 --> 00:27:56.630 align:start position:0% good to practice while watching the video. Of course, you 00:27:56.630 --> 00:27:59.029 align:start position:0% good to practice while watching the video. Of course, you 00:27:59.029 --> 00:27:59.039 align:start position:0% 00:27:59.039 --> 00:28:01.350 align:start position:0% can crawl data by writing the code yourself without using Make. 00:28:01.350 --> 00:28:01.360 align:start position:0% can crawl data by writing the code yourself without using Make. 00:28:01.360 --> 00:28:03.470 align:start position:0% can crawl data by writing the code yourself without using Make. These days, you can 00:28:03.470 --> 00:28:03.480 align:start position:0% These days, you can 00:28:03.480 --> 00:28:05.710 align:start position:0% These days, you can use AI tools such as Claude and Chi PT to 00:28:05.710 --> 00:28:07.870 align:start position:0% use AI tools such as Claude and Chi PT to 00:28:07.870 --> 00:28:07.880 align:start position:0% 00:28:07.880 --> 00:28:10.269 align:start position:0% create codes that can crawl the web like this even if you don't know how to code, and 00:28:10.269 --> 00:28:10.279 align:start position:0% create codes that can crawl the web like this even if you don't know how to code, and 00:28:10.279 --> 00:28:12.269 align:start position:0% create codes that can crawl the web like this even if you don't know how to code, and automate the task. 00:28:12.269 --> 00:28:12.279 align:start position:0% automate the task. 00:28:12.279 --> 00:28:14.870 align:start position:0% automate the task. However, if you do this, there 00:28:14.870 --> 00:28:14.880 align:start position:0% However, if you do this, there 00:28:14.880 --> 00:28:16.950 align:start position:0% However, if you do this, there may be limitations in using it in actual work. 00:28:16.950 --> 00:28:16.960 align:start position:0% may be limitations in using it in actual work. 00:28:16.960 --> 00:28:19.149 align:start position:0% may be limitations in using it in actual work. The reason is that if you don't 00:28:19.149 --> 00:28:19.159 align:start position:0% The reason is that if you don't 00:28:19.159 --> 00:28:21.190 align:start position:0% The reason is that if you don't know the code well, you will often have to 00:28:21.190 --> 00:28:21.200 align:start position:0% know the code well, you will often have to 00:28:21.200 --> 00:28:23.110 align:start position:0% know the code well, you will often have to modify the web crawling code later. 00:28:23.110 --> 00:28:23.120 align:start position:0% modify the web crawling code later. 00:28:23.120 --> 00:28:25.149 align:start position:0% modify the web crawling code later. This is because 00:28:25.149 --> 00:28:27.389 align:start position:0% This is because 00:28:27.389 --> 00:28:27.399 align:start position:0% 00:28:27.399 --> 00:28:29.269 align:start position:0% when services update the HTML code, there are changes, and 00:28:29.269 --> 00:28:29.279 align:start position:0% when services update the HTML code, there are changes, and 00:28:29.279 --> 00:28:30.750 align:start position:0% when services update the HTML code, there are changes, and crawling may not work properly. 00:28:30.750 --> 00:28:30.760 align:start position:0% crawling may not work properly. 00:28:30.760 --> 00:28:32.590 align:start position:0% crawling may not work properly. So there is an issue that these parts need to be 00:28:32.590 --> 00:28:32.600 align:start position:0% So there is an issue that these parts need to be 00:28:32.600 --> 00:28:34.430 align:start position:0% So there is an issue that these parts need to be maintained all the time. Also, if 00:28:34.430 --> 00:28:34.440 align:start position:0% maintained all the time. Also, if 00:28:34.440 --> 00:28:36.190 align:start position:0% maintained all the time. Also, if we want to 00:28:36.190 --> 00:28:36.200 align:start position:0% we want to 00:28:36.200 --> 00:28:37.950 align:start position:0% we want to update it periodically with automation, you have to 00:28:37.950 --> 00:28:37.960 align:start position:0% update it periodically with automation, you have to 00:28:37.960 --> 00:28:39.470 align:start position:0% update it periodically with automation, you have to manually run the code every time, 00:28:39.470 --> 00:28:39.480 align:start position:0% manually run the code every time, 00:28:39.480 --> 00:28:41.230 align:start position:0% manually run the code every time, or you have to 00:28:41.230 --> 00:28:41.240 align:start position:0% or you have to 00:28:41.240 --> 00:28:43.350 align:start position:0% or you have to learn the settings for automation and apply them. 00:28:43.350 --> 00:28:43.360 align:start position:0% learn the settings for automation and apply them. 00:28:43.360 --> 00:28:45.549 align:start position:0% learn the settings for automation and apply them. These parts 00:28:45.549 --> 00:28:45.559 align:start position:0% These parts 00:28:45.559 --> 00:28:47.830 align:start position:0% These parts can be burdensome. So, 00:28:47.830 --> 00:28:50.029 align:start position:0% can be burdensome. So, 00:28:50.029 --> 00:28:52.269 align:start position:0% 00:28:52.269 --> 00:28:52.279 align:start position:0% 00:28:52.279 --> 00:28:54.029 align:start position:0% in my opinion, it is still more useful to use a tool like Make to set up automation and use it as a system in actual work, because you can 00:28:54.029 --> 00:28:54.039 align:start position:0% in my opinion, it is still more useful to use a tool like Make to set up automation and use it as a system in actual work, because you can 00:28:54.039 --> 00:28:56.269 align:start position:0% in my opinion, it is still more useful to use a tool like Make to set up automation and use it as a system in actual work, because you can work without code. 00:28:56.269 --> 00:28:56.279 align:start position:0% work without code. 00:28:56.279 --> 00:28:57.710 align:start position:0% work without code. So the 00:28:57.710 --> 00:28:57.720 align:start position:0% So the 00:28:57.720 --> 00:28:59.750 align:start position:0% So the code It's difficult, but if 00:28:59.750 --> 00:29:02.110 align:start position:0% code It's difficult, but if 00:29:02.110 --> 00:29:02.120 align:start position:0% 00:29:02.120 --> 00:29:04.110 align:start position:0% you want to build an automated system to increase productivity, I think it would be good to 00:29:04.110 --> 00:29:04.120 align:start position:0% you want to build an automated system to increase productivity, I think it would be good to 00:29:04.120 --> 00:29:06.430 align:start position:0% you want to build an automated system to increase productivity, I think it would be good to use Makewaseo API to collect and use data from not only YouTube but also Naver, Yahoo, and 00:29:06.430 --> 00:29:06.440 align:start position:0% use Makewaseo API to collect and use data from not only YouTube but also Naver, Yahoo, and 00:29:06.440 --> 00:29:08.909 align:start position:0% use Makewaseo API to collect and use data from not only YouTube but also Naver, Yahoo, and Google search engines. 00:29:08.909 --> 00:29:10.430 align:start position:0% Google search engines. 00:29:10.430 --> 00:29:10.440 align:start position:0% 00:29:10.440 --> 00:29:12.110 align:start position:0% Then, I will come back next time 00:29:12.110 --> 00:29:13.990 align:start position:0% Then, I will come back next time 00:29:13.990 --> 00:29:14.000 align:start position:0% 00:29:14.000 --> 00:29:15.590 align:start position:0% with a way to build a system that can increase productivity. If 00:29:15.590 --> 00:29:17.470 align:start position:0% with a way to build a system that can increase productivity. If 00:29:17.470 --> 00:29:17.480 align:start position:0% 00:29:17.480 --> 00:29:19.549 align:start position:0% you are interested, please subscribe, like, and set notifications. 00:29:19.549 --> 00:29:19.559 align:start position:0% you are interested, please subscribe, like, and set notifications. 00:29:19.559 --> 00:29:21.549 align:start position:0% you are interested, please subscribe, like, and set notifications. This was Citizen 00:29:21.549 --> 00:29:21.559 align:start position:0% This was Citizen 00:29:21.559 --> 00:29:27.029 align:start position:0% This was Citizen Developer. 00:29:27.029 --> 00:29:27.039 align:start position:0% 00:29:27.039 --> 00:29:31.080 align:start position:0% h